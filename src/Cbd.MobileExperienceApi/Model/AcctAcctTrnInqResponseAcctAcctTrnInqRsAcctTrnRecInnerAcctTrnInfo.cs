/*
 * exp-openfinance-api
 *
 * Ex  perience API for OpenFinance
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Cbd.MobileExperienceApi.Client.FileParameter;
using OpenAPIDateConverter = Cbd.MobileExperienceApi.Client.OpenAPIDateConverter;

namespace Cbd.MobileExperienceApi.Model
{
    /// <summary>
    /// AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctTrnRecInnerAcctTrnInfo
    /// </summary>
    [DataContract(Name = "AcctAcctTrnInq_response_AcctAcctTrnInqRs_AcctTrnRec_inner_AcctTrnInfo")]
    public partial class AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctTrnRecInnerAcctTrnInfo : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctTrnRecInnerAcctTrnInfo" /> class.
        /// </summary>
        /// <param name="trnType">trnType.</param>
        /// <param name="trnSubType">trnSubType.</param>
        /// <param name="postedDt">postedDt.</param>
        /// <param name="valueDt">valueDt.</param>
        /// <param name="curAmt">curAmt.</param>
        /// <param name="refData">refData.</param>
        /// <param name="issuedIdent">issuedIdent.</param>
        /// <param name="trnDesc">trnDesc.</param>
        /// <param name="trnIdent">trnIdent.</param>
        /// <param name="trnCode">trnCode.</param>
        public AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctTrnRecInnerAcctTrnInfo(AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctTrnRecInnerAcctTrnInfoTrnType trnType = default(AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctTrnRecInnerAcctTrnInfoTrnType), string trnSubType = default(string), DateOnly postedDt = default(DateOnly), DateOnly valueDt = default(DateOnly), AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctTrnRecInnerAcctTrnInfoCurAmt curAmt = default(AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctTrnRecInnerAcctTrnInfoCurAmt), AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctTrnRecInnerAcctTrnInfoRefData refData = default(AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctTrnRecInnerAcctTrnInfoRefData), List<AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctTrnRecInnerAcctTrnInfoIssuedIdentInner> issuedIdent = default(List<AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctTrnRecInnerAcctTrnInfoIssuedIdentInner>), string trnDesc = default(string), string trnIdent = default(string), string trnCode = default(string))
        {
            this.TrnType = trnType;
            this.TrnSubType = trnSubType;
            this.PostedDt = postedDt;
            this.ValueDt = valueDt;
            this.CurAmt = curAmt;
            this.RefData = refData;
            this.IssuedIdent = issuedIdent;
            this.TrnDesc = trnDesc;
            this.TrnIdent = trnIdent;
            this.TrnCode = trnCode;
        }

        /// <summary>
        /// Gets or Sets TrnType
        /// </summary>
        [DataMember(Name = "TrnType", EmitDefaultValue = false)]
        public AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctTrnRecInnerAcctTrnInfoTrnType TrnType { get; set; }

        /// <summary>
        /// Gets or Sets TrnSubType
        /// </summary>
        [DataMember(Name = "TrnSubType", EmitDefaultValue = false)]
        public string TrnSubType { get; set; }

        /// <summary>
        /// Gets or Sets PostedDt
        /// </summary>
        [DataMember(Name = "PostedDt", EmitDefaultValue = false)]
        public DateOnly PostedDt { get; set; }

        /// <summary>
        /// Gets or Sets ValueDt
        /// </summary>
        [DataMember(Name = "ValueDt", EmitDefaultValue = false)]
        public DateOnly ValueDt { get; set; }

        /// <summary>
        /// Gets or Sets CurAmt
        /// </summary>
        [DataMember(Name = "CurAmt", EmitDefaultValue = false)]
        public AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctTrnRecInnerAcctTrnInfoCurAmt CurAmt { get; set; }

        /// <summary>
        /// Gets or Sets RefData
        /// </summary>
        [DataMember(Name = "RefData", EmitDefaultValue = false)]
        public AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctTrnRecInnerAcctTrnInfoRefData RefData { get; set; }

        /// <summary>
        /// Gets or Sets IssuedIdent
        /// </summary>
        [DataMember(Name = "IssuedIdent", EmitDefaultValue = false)]
        public List<AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctTrnRecInnerAcctTrnInfoIssuedIdentInner> IssuedIdent { get; set; }

        /// <summary>
        /// Gets or Sets TrnDesc
        /// </summary>
        [DataMember(Name = "TrnDesc", EmitDefaultValue = false)]
        public string TrnDesc { get; set; }

        /// <summary>
        /// Gets or Sets TrnIdent
        /// </summary>
        [DataMember(Name = "TrnIdent", EmitDefaultValue = false)]
        public string TrnIdent { get; set; }

        /// <summary>
        /// Gets or Sets TrnCode
        /// </summary>
        [DataMember(Name = "TrnCode", EmitDefaultValue = false)]
        public string TrnCode { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctTrnRecInnerAcctTrnInfo {\n");
            sb.Append("  TrnType: ").Append(TrnType).Append("\n");
            sb.Append("  TrnSubType: ").Append(TrnSubType).Append("\n");
            sb.Append("  PostedDt: ").Append(PostedDt).Append("\n");
            sb.Append("  ValueDt: ").Append(ValueDt).Append("\n");
            sb.Append("  CurAmt: ").Append(CurAmt).Append("\n");
            sb.Append("  RefData: ").Append(RefData).Append("\n");
            sb.Append("  IssuedIdent: ").Append(IssuedIdent).Append("\n");
            sb.Append("  TrnDesc: ").Append(TrnDesc).Append("\n");
            sb.Append("  TrnIdent: ").Append(TrnIdent).Append("\n");
            sb.Append("  TrnCode: ").Append(TrnCode).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
