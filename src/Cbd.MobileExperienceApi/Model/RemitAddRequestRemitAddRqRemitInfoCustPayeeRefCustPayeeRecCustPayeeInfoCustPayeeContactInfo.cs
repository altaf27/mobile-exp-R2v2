/*
 * exp-openfinance-api
 *
 * Ex  perience API for OpenFinance
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Cbd.MobileExperienceApi.Client.FileParameter;
using OpenAPIDateConverter = Cbd.MobileExperienceApi.Client.OpenAPIDateConverter;

namespace Cbd.MobileExperienceApi.Model
{
    /// <summary>
    /// RemitAddRequestRemitAddRqRemitInfoCustPayeeRefCustPayeeRecCustPayeeInfoCustPayeeContactInfo
    /// </summary>
    [DataContract(Name = "RemitAdd_request_RemitAddRq_RemitInfo_CustPayeeRef_CustPayeeRec_CustPayeeInfo_CustPayeeContactInfo")]
    public partial class RemitAddRequestRemitAddRqRemitInfoCustPayeeRefCustPayeeRecCustPayeeInfoCustPayeeContactInfo : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RemitAddRequestRemitAddRqRemitInfoCustPayeeRefCustPayeeRecCustPayeeInfoCustPayeeContactInfo" /> class.
        /// </summary>
        /// <param name="contactName">contactName.</param>
        /// <param name="emailAdd">emailAdd.</param>
        /// <param name="dialerCode">dialerCode.</param>
        /// <param name="phone">phone.</param>
        /// <param name="fax">fax.</param>
        public RemitAddRequestRemitAddRqRemitInfoCustPayeeRefCustPayeeRecCustPayeeInfoCustPayeeContactInfo(Object contactName = default(Object), Object emailAdd = default(Object), Object dialerCode = default(Object), Object phone = default(Object), Object fax = default(Object))
        {
            this.ContactName = contactName;
            this.EmailAdd = emailAdd;
            this.DialerCode = dialerCode;
            this.Phone = phone;
            this.Fax = fax;
        }

        /// <summary>
        /// Gets or Sets ContactName
        /// </summary>
        [DataMember(Name = "ContactName", EmitDefaultValue = false)]
        public Object ContactName { get; set; }

        /// <summary>
        /// Gets or Sets EmailAdd
        /// </summary>
        [DataMember(Name = "EmailAdd", EmitDefaultValue = false)]
        public Object EmailAdd { get; set; }

        /// <summary>
        /// Gets or Sets DialerCode
        /// </summary>
        [DataMember(Name = "DialerCode", EmitDefaultValue = false)]
        public Object DialerCode { get; set; }

        /// <summary>
        /// Gets or Sets Phone
        /// </summary>
        [DataMember(Name = "Phone", EmitDefaultValue = false)]
        public Object Phone { get; set; }

        /// <summary>
        /// Gets or Sets Fax
        /// </summary>
        [DataMember(Name = "Fax", EmitDefaultValue = false)]
        public Object Fax { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RemitAddRequestRemitAddRqRemitInfoCustPayeeRefCustPayeeRecCustPayeeInfoCustPayeeContactInfo {\n");
            sb.Append("  ContactName: ").Append(ContactName).Append("\n");
            sb.Append("  EmailAdd: ").Append(EmailAdd).Append("\n");
            sb.Append("  DialerCode: ").Append(DialerCode).Append("\n");
            sb.Append("  Phone: ").Append(Phone).Append("\n");
            sb.Append("  Fax: ").Append(Fax).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
