/*
 * exp-openfinance-api
 *
 * Ex  perience API for OpenFinance
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Cbd.MobileExperienceApi.Client.FileParameter;
using OpenAPIDateConverter = Cbd.MobileExperienceApi.Client.OpenAPIDateConverter;

namespace Cbd.MobileExperienceApi.Model
{
    /// <summary>
    /// RemitAddRequestRemitAddRqRemitInfoPmtInstructionFeeChargeAlloc
    /// </summary>
    [DataContract(Name = "RemitAdd_request_RemitAddRq_RemitInfo_PmtInstruction_FeeChargeAlloc")]
    public partial class RemitAddRequestRemitAddRqRemitInfoPmtInstructionFeeChargeAlloc : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RemitAddRequestRemitAddRqRemitInfoPmtInstructionFeeChargeAlloc" /> class.
        /// </summary>
        /// <param name="chargeRegulation">chargeRegulation.</param>
        /// <param name="fee">fee.</param>
        /// <param name="acctKeys">acctKeys.</param>
        /// <param name="segmentCode">segmentCode.</param>
        /// <param name="feeDesc">feeDesc.</param>
        /// <param name="chargeCode">chargeCode.</param>
        public RemitAddRequestRemitAddRqRemitInfoPmtInstructionFeeChargeAlloc(Object chargeRegulation = default(Object), List<RemitAddRequestRemitAddRqRemitInfoPmtInstructionFeeChargeAllocFeeInner> fee = default(List<RemitAddRequestRemitAddRqRemitInfoPmtInstructionFeeChargeAllocFeeInner>), RemitAddRequestRemitAddRqRemitInfoPmtInstructionFromAcctRefAcctKeys acctKeys = default(RemitAddRequestRemitAddRqRemitInfoPmtInstructionFromAcctRefAcctKeys), Object segmentCode = default(Object), Object feeDesc = default(Object), Object chargeCode = default(Object))
        {
            this.ChargeRegulation = chargeRegulation;
            this.Fee = fee;
            this.AcctKeys = acctKeys;
            this.SegmentCode = segmentCode;
            this.FeeDesc = feeDesc;
            this.ChargeCode = chargeCode;
        }

        /// <summary>
        /// Gets or Sets ChargeRegulation
        /// </summary>
        [DataMember(Name = "ChargeRegulation", EmitDefaultValue = false)]
        public Object ChargeRegulation { get; set; }

        /// <summary>
        /// Gets or Sets Fee
        /// </summary>
        [DataMember(Name = "Fee", EmitDefaultValue = false)]
        public List<RemitAddRequestRemitAddRqRemitInfoPmtInstructionFeeChargeAllocFeeInner> Fee { get; set; }

        /// <summary>
        /// Gets or Sets AcctKeys
        /// </summary>
        [DataMember(Name = "AcctKeys", EmitDefaultValue = false)]
        public RemitAddRequestRemitAddRqRemitInfoPmtInstructionFromAcctRefAcctKeys AcctKeys { get; set; }

        /// <summary>
        /// Gets or Sets SegmentCode
        /// </summary>
        [DataMember(Name = "SegmentCode", EmitDefaultValue = false)]
        public Object SegmentCode { get; set; }

        /// <summary>
        /// Gets or Sets FeeDesc
        /// </summary>
        [DataMember(Name = "FeeDesc", EmitDefaultValue = false)]
        public Object FeeDesc { get; set; }

        /// <summary>
        /// Gets or Sets ChargeCode
        /// </summary>
        [DataMember(Name = "ChargeCode", EmitDefaultValue = false)]
        public Object ChargeCode { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RemitAddRequestRemitAddRqRemitInfoPmtInstructionFeeChargeAlloc {\n");
            sb.Append("  ChargeRegulation: ").Append(ChargeRegulation).Append("\n");
            sb.Append("  Fee: ").Append(Fee).Append("\n");
            sb.Append("  AcctKeys: ").Append(AcctKeys).Append("\n");
            sb.Append("  SegmentCode: ").Append(SegmentCode).Append("\n");
            sb.Append("  FeeDesc: ").Append(FeeDesc).Append("\n");
            sb.Append("  ChargeCode: ").Append(ChargeCode).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
