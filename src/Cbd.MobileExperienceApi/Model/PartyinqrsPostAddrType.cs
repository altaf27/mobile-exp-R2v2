/*
 * exp-openfinance-api
 *
 * Ex  perience API for OpenFinance
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Cbd.MobileExperienceApi.Client.FileParameter;
using OpenAPIDateConverter = Cbd.MobileExperienceApi.Client.OpenAPIDateConverter;

namespace Cbd.MobileExperienceApi.Model
{
    /// <summary>
    /// PartyinqrsPostAddrType
    /// </summary>
    [DataContract(Name = "partyinqrs_PostAddr_Type")]
    public partial class PartyinqrsPostAddrType : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PartyinqrsPostAddrType" /> class.
        /// </summary>
        /// <param name="addressIdent">addressIdent.</param>
        /// <param name="addr1">addr1.</param>
        /// <param name="addr2">addr2.</param>
        /// <param name="addr3">addr3.</param>
        /// <param name="city">city.</param>
        /// <param name="country">country.</param>
        /// <param name="postalCode">postalCode.</param>
        public PartyinqrsPostAddrType(string addressIdent = default(string), string addr1 = default(string), string addr2 = default(string), string addr3 = default(string), string city = default(string), string country = default(string), string postalCode = default(string))
        {
            this.AddressIdent = addressIdent;
            this.Addr1 = addr1;
            this.Addr2 = addr2;
            this.Addr3 = addr3;
            this.City = city;
            this.Country = country;
            this.PostalCode = postalCode;
        }

        /// <summary>
        /// Gets or Sets AddressIdent
        /// </summary>
        [DataMember(Name = "AddressIdent", EmitDefaultValue = false)]
        public string AddressIdent { get; set; }

        /// <summary>
        /// Gets or Sets Addr1
        /// </summary>
        [DataMember(Name = "Addr1", EmitDefaultValue = false)]
        public string Addr1 { get; set; }

        /// <summary>
        /// Gets or Sets Addr2
        /// </summary>
        [DataMember(Name = "Addr2", EmitDefaultValue = false)]
        public string Addr2 { get; set; }

        /// <summary>
        /// Gets or Sets Addr3
        /// </summary>
        [DataMember(Name = "Addr3", EmitDefaultValue = false)]
        public string Addr3 { get; set; }

        /// <summary>
        /// Gets or Sets City
        /// </summary>
        [DataMember(Name = "city", EmitDefaultValue = false)]
        public string City { get; set; }

        /// <summary>
        /// Gets or Sets Country
        /// </summary>
        [DataMember(Name = "country", EmitDefaultValue = false)]
        public string Country { get; set; }

        /// <summary>
        /// Gets or Sets PostalCode
        /// </summary>
        [DataMember(Name = "PostalCode", EmitDefaultValue = false)]
        public string PostalCode { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PartyinqrsPostAddrType {\n");
            sb.Append("  AddressIdent: ").Append(AddressIdent).Append("\n");
            sb.Append("  Addr1: ").Append(Addr1).Append("\n");
            sb.Append("  Addr2: ").Append(Addr2).Append("\n");
            sb.Append("  Addr3: ").Append(Addr3).Append("\n");
            sb.Append("  City: ").Append(City).Append("\n");
            sb.Append("  Country: ").Append(Country).Append("\n");
            sb.Append("  PostalCode: ").Append(PostalCode).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
