/*
 * exp-openfinance-api
 *
 * Ex  perience API for OpenFinance
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Cbd.MobileExperienceApi.Client.FileParameter;
using OpenAPIDateConverter = Cbd.MobileExperienceApi.Client.OpenAPIDateConverter;

namespace Cbd.MobileExperienceApi.Model
{
    /// <summary>
    /// RemitAddRequestRemitAddRqRemitInfoPmtInstructionPartyInfoPersonData
    /// </summary>
    [DataContract(Name = "RemitAdd_request_RemitAddRq_RemitInfo_PmtInstruction_PartyInfo_PersonData")]
    public partial class RemitAddRequestRemitAddRqRemitInfoPmtInstructionPartyInfoPersonData : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RemitAddRequestRemitAddRqRemitInfoPmtInstructionPartyInfoPersonData" /> class.
        /// </summary>
        /// <param name="personName">personName.</param>
        /// <param name="birthDt">birthDt.</param>
        /// <param name="gender">gender.</param>
        /// <param name="qualification">qualification.</param>
        /// <param name="maritalStat">maritalStat.</param>
        /// <param name="occupation">occupation.</param>
        /// <param name="dependents">dependents.</param>
        /// <param name="issuedIdent">issuedIdent.</param>
        /// <param name="passportIssuedDt">passportIssuedDt.</param>
        /// <param name="passportExpiryDt">passportExpiryDt.</param>
        /// <param name="tLExpiryDt">tLExpiryDt.</param>
        /// <param name="passportIssuedCountryCode">passportIssuedCountryCode.</param>
        /// <param name="passportIssuedCity">passportIssuedCity.</param>
        /// <param name="emiratesIDExpiryDt">emiratesIDExpiryDt.</param>
        /// <param name="nationalIDExpiryDt">nationalIDExpiryDt.</param>
        /// <param name="visaExpiryDt">visaExpiryDt.</param>
        /// <param name="nationalityId">nationalityId.</param>
        /// <param name="nationality">nationality.</param>
        /// <param name="contact">contact.</param>
        /// <param name="countryOfBirth">countryOfBirth.</param>
        public RemitAddRequestRemitAddRqRemitInfoPmtInstructionPartyInfoPersonData(RemitAddRequestRemitAddRqRemitInfoPmtInstructionPartyInfoPersonDataPersonName personName = default(RemitAddRequestRemitAddRqRemitInfoPmtInstructionPartyInfoPersonDataPersonName), Object birthDt = default(Object), Object gender = default(Object), Object qualification = default(Object), Object maritalStat = default(Object), Object occupation = default(Object), Object dependents = default(Object), List<RemitAddRequestRemitAddRqRemitInfoPmtInstructionPartyInfoPersonDataIssuedIdentInner> issuedIdent = default(List<RemitAddRequestRemitAddRqRemitInfoPmtInstructionPartyInfoPersonDataIssuedIdentInner>), Object passportIssuedDt = default(Object), Object passportExpiryDt = default(Object), Object tLExpiryDt = default(Object), Object passportIssuedCountryCode = default(Object), Object passportIssuedCity = default(Object), Object emiratesIDExpiryDt = default(Object), Object nationalIDExpiryDt = default(Object), Object visaExpiryDt = default(Object), Object nationalityId = default(Object), Object nationality = default(Object), RemitAddRequestRemitAddRqRemitInfoPmtInstructionPartyInfoPersonDataContact contact = default(RemitAddRequestRemitAddRqRemitInfoPmtInstructionPartyInfoPersonDataContact), Object countryOfBirth = default(Object))
        {
            this.PersonName = personName;
            this.BirthDt = birthDt;
            this.Gender = gender;
            this.Qualification = qualification;
            this.MaritalStat = maritalStat;
            this.Occupation = occupation;
            this.Dependents = dependents;
            this.IssuedIdent = issuedIdent;
            this.PassportIssuedDt = passportIssuedDt;
            this.PassportExpiryDt = passportExpiryDt;
            this.TLExpiryDt = tLExpiryDt;
            this.PassportIssuedCountryCode = passportIssuedCountryCode;
            this.PassportIssuedCity = passportIssuedCity;
            this.EmiratesIDExpiryDt = emiratesIDExpiryDt;
            this.NationalIDExpiryDt = nationalIDExpiryDt;
            this.VisaExpiryDt = visaExpiryDt;
            this.NationalityId = nationalityId;
            this.Nationality = nationality;
            this.Contact = contact;
            this.CountryOfBirth = countryOfBirth;
        }

        /// <summary>
        /// Gets or Sets PersonName
        /// </summary>
        [DataMember(Name = "PersonName", EmitDefaultValue = false)]
        public RemitAddRequestRemitAddRqRemitInfoPmtInstructionPartyInfoPersonDataPersonName PersonName { get; set; }

        /// <summary>
        /// Gets or Sets BirthDt
        /// </summary>
        [DataMember(Name = "BirthDt", EmitDefaultValue = false)]
        public Object BirthDt { get; set; }

        /// <summary>
        /// Gets or Sets Gender
        /// </summary>
        [DataMember(Name = "Gender", EmitDefaultValue = false)]
        public Object Gender { get; set; }

        /// <summary>
        /// Gets or Sets Qualification
        /// </summary>
        [DataMember(Name = "Qualification", EmitDefaultValue = false)]
        public Object Qualification { get; set; }

        /// <summary>
        /// Gets or Sets MaritalStat
        /// </summary>
        [DataMember(Name = "MaritalStat", EmitDefaultValue = false)]
        public Object MaritalStat { get; set; }

        /// <summary>
        /// Gets or Sets Occupation
        /// </summary>
        [DataMember(Name = "Occupation", EmitDefaultValue = false)]
        public Object Occupation { get; set; }

        /// <summary>
        /// Gets or Sets Dependents
        /// </summary>
        [DataMember(Name = "Dependents", EmitDefaultValue = false)]
        public Object Dependents { get; set; }

        /// <summary>
        /// Gets or Sets IssuedIdent
        /// </summary>
        [DataMember(Name = "IssuedIdent", EmitDefaultValue = false)]
        public List<RemitAddRequestRemitAddRqRemitInfoPmtInstructionPartyInfoPersonDataIssuedIdentInner> IssuedIdent { get; set; }

        /// <summary>
        /// Gets or Sets PassportIssuedDt
        /// </summary>
        [DataMember(Name = "PassportIssuedDt", EmitDefaultValue = false)]
        public Object PassportIssuedDt { get; set; }

        /// <summary>
        /// Gets or Sets PassportExpiryDt
        /// </summary>
        [DataMember(Name = "PassportExpiryDt", EmitDefaultValue = false)]
        public Object PassportExpiryDt { get; set; }

        /// <summary>
        /// Gets or Sets TLExpiryDt
        /// </summary>
        [DataMember(Name = "TLExpiryDt", EmitDefaultValue = false)]
        public Object TLExpiryDt { get; set; }

        /// <summary>
        /// Gets or Sets PassportIssuedCountryCode
        /// </summary>
        [DataMember(Name = "PassportIssuedCountryCode", EmitDefaultValue = false)]
        public Object PassportIssuedCountryCode { get; set; }

        /// <summary>
        /// Gets or Sets PassportIssuedCity
        /// </summary>
        [DataMember(Name = "PassportIssuedCity", EmitDefaultValue = false)]
        public Object PassportIssuedCity { get; set; }

        /// <summary>
        /// Gets or Sets EmiratesIDExpiryDt
        /// </summary>
        [DataMember(Name = "EmiratesIDExpiryDt", EmitDefaultValue = false)]
        public Object EmiratesIDExpiryDt { get; set; }

        /// <summary>
        /// Gets or Sets NationalIDExpiryDt
        /// </summary>
        [DataMember(Name = "NationalIDExpiryDt", EmitDefaultValue = false)]
        public Object NationalIDExpiryDt { get; set; }

        /// <summary>
        /// Gets or Sets VisaExpiryDt
        /// </summary>
        [DataMember(Name = "VisaExpiryDt", EmitDefaultValue = false)]
        public Object VisaExpiryDt { get; set; }

        /// <summary>
        /// Gets or Sets NationalityId
        /// </summary>
        [DataMember(Name = "NationalityId", EmitDefaultValue = false)]
        public Object NationalityId { get; set; }

        /// <summary>
        /// Gets or Sets Nationality
        /// </summary>
        [DataMember(Name = "Nationality", EmitDefaultValue = false)]
        public Object Nationality { get; set; }

        /// <summary>
        /// Gets or Sets Contact
        /// </summary>
        [DataMember(Name = "Contact", EmitDefaultValue = false)]
        public RemitAddRequestRemitAddRqRemitInfoPmtInstructionPartyInfoPersonDataContact Contact { get; set; }

        /// <summary>
        /// Gets or Sets CountryOfBirth
        /// </summary>
        [DataMember(Name = "CountryOfBirth", EmitDefaultValue = false)]
        public Object CountryOfBirth { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RemitAddRequestRemitAddRqRemitInfoPmtInstructionPartyInfoPersonData {\n");
            sb.Append("  PersonName: ").Append(PersonName).Append("\n");
            sb.Append("  BirthDt: ").Append(BirthDt).Append("\n");
            sb.Append("  Gender: ").Append(Gender).Append("\n");
            sb.Append("  Qualification: ").Append(Qualification).Append("\n");
            sb.Append("  MaritalStat: ").Append(MaritalStat).Append("\n");
            sb.Append("  Occupation: ").Append(Occupation).Append("\n");
            sb.Append("  Dependents: ").Append(Dependents).Append("\n");
            sb.Append("  IssuedIdent: ").Append(IssuedIdent).Append("\n");
            sb.Append("  PassportIssuedDt: ").Append(PassportIssuedDt).Append("\n");
            sb.Append("  PassportExpiryDt: ").Append(PassportExpiryDt).Append("\n");
            sb.Append("  TLExpiryDt: ").Append(TLExpiryDt).Append("\n");
            sb.Append("  PassportIssuedCountryCode: ").Append(PassportIssuedCountryCode).Append("\n");
            sb.Append("  PassportIssuedCity: ").Append(PassportIssuedCity).Append("\n");
            sb.Append("  EmiratesIDExpiryDt: ").Append(EmiratesIDExpiryDt).Append("\n");
            sb.Append("  NationalIDExpiryDt: ").Append(NationalIDExpiryDt).Append("\n");
            sb.Append("  VisaExpiryDt: ").Append(VisaExpiryDt).Append("\n");
            sb.Append("  NationalityId: ").Append(NationalityId).Append("\n");
            sb.Append("  Nationality: ").Append(Nationality).Append("\n");
            sb.Append("  Contact: ").Append(Contact).Append("\n");
            sb.Append("  CountryOfBirth: ").Append(CountryOfBirth).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
