/*
 * exp-openfinance-api
 *
 * Ex  perience API for OpenFinance
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Cbd.MobileExperienceApi.Client.FileParameter;
using OpenAPIDateConverter = Cbd.MobileExperienceApi.Client.OpenAPIDateConverter;

namespace Cbd.MobileExperienceApi.Model
{
    /// <summary>
    /// PartacctrelrsAcctInfoType
    /// </summary>
    [DataContract(Name = "partacctrelrs_AcctInfo_Type")]
    public partial class PartacctrelrsAcctInfoType : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PartacctrelrsAcctInfoType" /> class.
        /// </summary>
        /// <param name="curCode">curCode.</param>
        /// <param name="iBAN">iBAN.</param>
        /// <param name="fIData">fIData.</param>
        /// <param name="acctType">acctType.</param>
        /// <param name="acctTitle">acctTitle.</param>
        /// <param name="openDt">openDt.</param>
        /// <param name="maturityDt">maturityDt.</param>
        /// <param name="acctBal">acctBal.</param>
        /// <param name="segmentation">segmentation.</param>
        /// <param name="acctClass">acctClass.</param>
        /// <param name="stmtPeriod">stmtPeriod.</param>
        /// <param name="intRateData">intRateData.</param>
        /// <param name="acctPeriodData">acctPeriodData.</param>
        /// <param name="acctTrnLimit">acctTrnLimit.</param>
        /// <param name="salaryTransfer">salaryTransfer.</param>
        /// <param name="description">description.</param>
        /// <param name="postDt">postDt.</param>
        /// <param name="valueDt">valueDt.</param>
        /// <param name="chkNo">chkNo.</param>
        public PartacctrelrsAcctInfoType(PartacctrelrsCurCodeType curCode = default(PartacctrelrsCurCodeType), string iBAN = default(string), PartacctrelrsFIDataType fIData = default(PartacctrelrsFIDataType), List<PartacctrelrsAcctTypeType> acctType = default(List<PartacctrelrsAcctTypeType>), string acctTitle = default(string), DateOnly openDt = default(DateOnly), DateOnly maturityDt = default(DateOnly), List<PartacctrelrsAcctBalType> acctBal = default(List<PartacctrelrsAcctBalType>), PartacctrelrsSegmentationType segmentation = default(PartacctrelrsSegmentationType), PartacctrelrsAcctClassType acctClass = default(PartacctrelrsAcctClassType), string stmtPeriod = default(string), PartacctrelrsIntRateDataType intRateData = default(PartacctrelrsIntRateDataType), PartacctrelrsAcctPeriodDataType acctPeriodData = default(PartacctrelrsAcctPeriodDataType), PartacctrelrsAcctTrnLimitType acctTrnLimit = default(PartacctrelrsAcctTrnLimitType), string salaryTransfer = default(string), string description = default(string), DateOnly postDt = default(DateOnly), DateOnly valueDt = default(DateOnly), string chkNo = default(string))
        {
            this.CurCode = curCode;
            this.IBAN = iBAN;
            this.FIData = fIData;
            this.AcctType = acctType;
            this.AcctTitle = acctTitle;
            this.OpenDt = openDt;
            this.MaturityDt = maturityDt;
            this.AcctBal = acctBal;
            this.Segmentation = segmentation;
            this.AcctClass = acctClass;
            this.StmtPeriod = stmtPeriod;
            this.IntRateData = intRateData;
            this.AcctPeriodData = acctPeriodData;
            this.AcctTrnLimit = acctTrnLimit;
            this.SalaryTransfer = salaryTransfer;
            this.Description = description;
            this.PostDt = postDt;
            this.ValueDt = valueDt;
            this.ChkNo = chkNo;
        }

        /// <summary>
        /// Gets or Sets CurCode
        /// </summary>
        [DataMember(Name = "CurCode", EmitDefaultValue = false)]
        public PartacctrelrsCurCodeType CurCode { get; set; }

        /// <summary>
        /// Gets or Sets IBAN
        /// </summary>
        [DataMember(Name = "IBAN", EmitDefaultValue = false)]
        public string IBAN { get; set; }

        /// <summary>
        /// Gets or Sets FIData
        /// </summary>
        [DataMember(Name = "FIData", EmitDefaultValue = false)]
        public PartacctrelrsFIDataType FIData { get; set; }

        /// <summary>
        /// Gets or Sets AcctType
        /// </summary>
        [DataMember(Name = "AcctType", EmitDefaultValue = false)]
        public List<PartacctrelrsAcctTypeType> AcctType { get; set; }

        /// <summary>
        /// Gets or Sets AcctTitle
        /// </summary>
        [DataMember(Name = "AcctTitle", EmitDefaultValue = false)]
        public string AcctTitle { get; set; }

        /// <summary>
        /// Gets or Sets OpenDt
        /// </summary>
        [DataMember(Name = "OpenDt", EmitDefaultValue = false)]
        public DateOnly OpenDt { get; set; }

        /// <summary>
        /// Gets or Sets MaturityDt
        /// </summary>
        [DataMember(Name = "MaturityDt", EmitDefaultValue = false)]
        public DateOnly MaturityDt { get; set; }

        /// <summary>
        /// Gets or Sets AcctBal
        /// </summary>
        [DataMember(Name = "AcctBal", EmitDefaultValue = false)]
        public List<PartacctrelrsAcctBalType> AcctBal { get; set; }

        /// <summary>
        /// Gets or Sets Segmentation
        /// </summary>
        [DataMember(Name = "Segmentation", EmitDefaultValue = false)]
        public PartacctrelrsSegmentationType Segmentation { get; set; }

        /// <summary>
        /// Gets or Sets AcctClass
        /// </summary>
        [DataMember(Name = "AcctClass", EmitDefaultValue = false)]
        public PartacctrelrsAcctClassType AcctClass { get; set; }

        /// <summary>
        /// Gets or Sets StmtPeriod
        /// </summary>
        [DataMember(Name = "StmtPeriod", EmitDefaultValue = false)]
        public string StmtPeriod { get; set; }

        /// <summary>
        /// Gets or Sets IntRateData
        /// </summary>
        [DataMember(Name = "IntRateData", EmitDefaultValue = false)]
        public PartacctrelrsIntRateDataType IntRateData { get; set; }

        /// <summary>
        /// Gets or Sets AcctPeriodData
        /// </summary>
        [DataMember(Name = "AcctPeriodData", EmitDefaultValue = false)]
        public PartacctrelrsAcctPeriodDataType AcctPeriodData { get; set; }

        /// <summary>
        /// Gets or Sets AcctTrnLimit
        /// </summary>
        [DataMember(Name = "AcctTrnLimit", EmitDefaultValue = false)]
        public PartacctrelrsAcctTrnLimitType AcctTrnLimit { get; set; }

        /// <summary>
        /// Gets or Sets SalaryTransfer
        /// </summary>
        [DataMember(Name = "SalaryTransfer", EmitDefaultValue = false)]
        public string SalaryTransfer { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name = "Description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets PostDt
        /// </summary>
        [DataMember(Name = "PostDt", EmitDefaultValue = false)]
        public DateOnly PostDt { get; set; }

        /// <summary>
        /// Gets or Sets ValueDt
        /// </summary>
        [DataMember(Name = "ValueDt", EmitDefaultValue = false)]
        public DateOnly ValueDt { get; set; }

        /// <summary>
        /// Gets or Sets ChkNo
        /// </summary>
        [DataMember(Name = "ChkNo", EmitDefaultValue = false)]
        public string ChkNo { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PartacctrelrsAcctInfoType {\n");
            sb.Append("  CurCode: ").Append(CurCode).Append("\n");
            sb.Append("  IBAN: ").Append(IBAN).Append("\n");
            sb.Append("  FIData: ").Append(FIData).Append("\n");
            sb.Append("  AcctType: ").Append(AcctType).Append("\n");
            sb.Append("  AcctTitle: ").Append(AcctTitle).Append("\n");
            sb.Append("  OpenDt: ").Append(OpenDt).Append("\n");
            sb.Append("  MaturityDt: ").Append(MaturityDt).Append("\n");
            sb.Append("  AcctBal: ").Append(AcctBal).Append("\n");
            sb.Append("  Segmentation: ").Append(Segmentation).Append("\n");
            sb.Append("  AcctClass: ").Append(AcctClass).Append("\n");
            sb.Append("  StmtPeriod: ").Append(StmtPeriod).Append("\n");
            sb.Append("  IntRateData: ").Append(IntRateData).Append("\n");
            sb.Append("  AcctPeriodData: ").Append(AcctPeriodData).Append("\n");
            sb.Append("  AcctTrnLimit: ").Append(AcctTrnLimit).Append("\n");
            sb.Append("  SalaryTransfer: ").Append(SalaryTransfer).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  PostDt: ").Append(PostDt).Append("\n");
            sb.Append("  ValueDt: ").Append(ValueDt).Append("\n");
            sb.Append("  ChkNo: ").Append(ChkNo).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
