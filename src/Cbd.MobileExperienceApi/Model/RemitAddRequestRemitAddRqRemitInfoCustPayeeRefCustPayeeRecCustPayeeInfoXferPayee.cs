/*
 * exp-openfinance-api
 *
 * Ex  perience API for OpenFinance
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Cbd.MobileExperienceApi.Client.FileParameter;
using OpenAPIDateConverter = Cbd.MobileExperienceApi.Client.OpenAPIDateConverter;

namespace Cbd.MobileExperienceApi.Model
{
    /// <summary>
    /// RemitAddRequestRemitAddRqRemitInfoCustPayeeRefCustPayeeRecCustPayeeInfoXferPayee
    /// </summary>
    [DataContract(Name = "RemitAdd_request_RemitAddRq_RemitInfo_CustPayeeRef_CustPayeeRec_CustPayeeInfo_XferPayee")]
    public partial class RemitAddRequestRemitAddRqRemitInfoCustPayeeRefCustPayeeRecCustPayeeInfoXferPayee : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RemitAddRequestRemitAddRqRemitInfoCustPayeeRefCustPayeeRecCustPayeeInfoXferPayee" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected RemitAddRequestRemitAddRqRemitInfoCustPayeeRefCustPayeeRecCustPayeeInfoXferPayee() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="RemitAddRequestRemitAddRqRemitInfoCustPayeeRefCustPayeeRecCustPayeeInfoXferPayee" /> class.
        /// </summary>
        /// <param name="toAcctRef">toAcctRef (required).</param>
        /// <param name="acctType">acctType.</param>
        /// <param name="correspondentAcctRef">correspondentAcctRef.</param>
        public RemitAddRequestRemitAddRqRemitInfoCustPayeeRefCustPayeeRecCustPayeeInfoXferPayee(RemitAddRequestRemitAddRqRemitInfoCustPayeeRefCustPayeeRecCustPayeeInfoXferPayeeToAcctRef toAcctRef = default(RemitAddRequestRemitAddRqRemitInfoCustPayeeRefCustPayeeRecCustPayeeInfoXferPayeeToAcctRef), Object acctType = default(Object), RemitAddRequestRemitAddRqRemitInfoCustPayeeRefCustPayeeRecCustPayeeInfoXferPayeeCorrespondentAcctRef correspondentAcctRef = default(RemitAddRequestRemitAddRqRemitInfoCustPayeeRefCustPayeeRecCustPayeeInfoXferPayeeCorrespondentAcctRef))
        {
            // to ensure "toAcctRef" is required (not null)
            if (toAcctRef == null)
            {
                throw new ArgumentNullException("toAcctRef is a required property for RemitAddRequestRemitAddRqRemitInfoCustPayeeRefCustPayeeRecCustPayeeInfoXferPayee and cannot be null");
            }
            this.ToAcctRef = toAcctRef;
            this.AcctType = acctType;
            this.CorrespondentAcctRef = correspondentAcctRef;
        }

        /// <summary>
        /// Gets or Sets ToAcctRef
        /// </summary>
        [DataMember(Name = "ToAcctRef", IsRequired = true, EmitDefaultValue = true)]
        public RemitAddRequestRemitAddRqRemitInfoCustPayeeRefCustPayeeRecCustPayeeInfoXferPayeeToAcctRef ToAcctRef { get; set; }

        /// <summary>
        /// Gets or Sets AcctType
        /// </summary>
        [DataMember(Name = "AcctType", EmitDefaultValue = false)]
        public Object AcctType { get; set; }

        /// <summary>
        /// Gets or Sets CorrespondentAcctRef
        /// </summary>
        [DataMember(Name = "CorrespondentAcctRef", EmitDefaultValue = false)]
        public RemitAddRequestRemitAddRqRemitInfoCustPayeeRefCustPayeeRecCustPayeeInfoXferPayeeCorrespondentAcctRef CorrespondentAcctRef { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RemitAddRequestRemitAddRqRemitInfoCustPayeeRefCustPayeeRecCustPayeeInfoXferPayee {\n");
            sb.Append("  ToAcctRef: ").Append(ToAcctRef).Append("\n");
            sb.Append("  AcctType: ").Append(AcctType).Append("\n");
            sb.Append("  CorrespondentAcctRef: ").Append(CorrespondentAcctRef).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
