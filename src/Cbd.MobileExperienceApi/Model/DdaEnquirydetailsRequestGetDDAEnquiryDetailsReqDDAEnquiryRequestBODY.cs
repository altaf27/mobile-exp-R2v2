/*
 * exp-openfinance-api
 *
 * Ex  perience API for OpenFinance
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Cbd.MobileExperienceApi.Client.FileParameter;
using OpenAPIDateConverter = Cbd.MobileExperienceApi.Client.OpenAPIDateConverter;

namespace Cbd.MobileExperienceApi.Model
{
    /// <summary>
    /// DdaEnquirydetailsRequestGetDDAEnquiryDetailsReqDDAEnquiryRequestBODY
    /// </summary>
    [DataContract(Name = "dda_enquirydetails_request_getDDAEnquiryDetails_req_DDAEnquiryRequest_BODY")]
    public partial class DdaEnquirydetailsRequestGetDDAEnquiryDetailsReqDDAEnquiryRequestBODY : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DdaEnquirydetailsRequestGetDDAEnquiryDetailsReqDDAEnquiryRequestBODY" /> class.
        /// </summary>
        /// <param name="mandateReference">mandateReference.</param>
        /// <param name="oIC">oIC.</param>
        /// <param name="fromDate">fromDate.</param>
        /// <param name="toDate">toDate.</param>
        /// <param name="payerName">payerName.</param>
        /// <param name="mandateReferenceNo">mandateReferenceNo.</param>
        /// <param name="originatorName">originatorName.</param>
        /// <param name="dDAAmountMin">dDAAmountMin.</param>
        /// <param name="dDAAmountMax">dDAAmountMax.</param>
        /// <param name="rIMNo">rIMNo.</param>
        /// <param name="accountNumber">accountNumber.</param>
        /// <param name="dDAStatus">dDAStatus.</param>
        public DdaEnquirydetailsRequestGetDDAEnquiryDetailsReqDDAEnquiryRequestBODY(Object mandateReference = default(Object), Object oIC = default(Object), Object fromDate = default(Object), Object toDate = default(Object), Object payerName = default(Object), Object mandateReferenceNo = default(Object), Object originatorName = default(Object), Object dDAAmountMin = default(Object), Object dDAAmountMax = default(Object), Object rIMNo = default(Object), Object accountNumber = default(Object), Object dDAStatus = default(Object))
        {
            this.MandateReference = mandateReference;
            this.OIC = oIC;
            this.FromDate = fromDate;
            this.ToDate = toDate;
            this.PayerName = payerName;
            this.MandateReferenceNo = mandateReferenceNo;
            this.OriginatorName = originatorName;
            this.DDAAmountMin = dDAAmountMin;
            this.DDAAmountMax = dDAAmountMax;
            this.RIMNo = rIMNo;
            this.AccountNumber = accountNumber;
            this.DDAStatus = dDAStatus;
        }

        /// <summary>
        /// Gets or Sets MandateReference
        /// </summary>
        [DataMember(Name = "MandateReference", EmitDefaultValue = false)]
        public Object MandateReference { get; set; }

        /// <summary>
        /// Gets or Sets OIC
        /// </summary>
        [DataMember(Name = "OIC", EmitDefaultValue = false)]
        public Object OIC { get; set; }

        /// <summary>
        /// Gets or Sets FromDate
        /// </summary>
        [DataMember(Name = "FromDate", EmitDefaultValue = false)]
        public Object FromDate { get; set; }

        /// <summary>
        /// Gets or Sets ToDate
        /// </summary>
        [DataMember(Name = "ToDate", EmitDefaultValue = false)]
        public Object ToDate { get; set; }

        /// <summary>
        /// Gets or Sets PayerName
        /// </summary>
        [DataMember(Name = "PayerName", EmitDefaultValue = false)]
        public Object PayerName { get; set; }

        /// <summary>
        /// Gets or Sets MandateReferenceNo
        /// </summary>
        [DataMember(Name = "MandateReferenceNo", EmitDefaultValue = false)]
        public Object MandateReferenceNo { get; set; }

        /// <summary>
        /// Gets or Sets OriginatorName
        /// </summary>
        [DataMember(Name = "OriginatorName", EmitDefaultValue = false)]
        public Object OriginatorName { get; set; }

        /// <summary>
        /// Gets or Sets DDAAmountMin
        /// </summary>
        [DataMember(Name = "DDAAmountMin", EmitDefaultValue = false)]
        public Object DDAAmountMin { get; set; }

        /// <summary>
        /// Gets or Sets DDAAmountMax
        /// </summary>
        [DataMember(Name = "DDAAmountMax", EmitDefaultValue = false)]
        public Object DDAAmountMax { get; set; }

        /// <summary>
        /// Gets or Sets RIMNo
        /// </summary>
        [DataMember(Name = "RIMNo", EmitDefaultValue = false)]
        public Object RIMNo { get; set; }

        /// <summary>
        /// Gets or Sets AccountNumber
        /// </summary>
        [DataMember(Name = "AccountNumber", EmitDefaultValue = false)]
        public Object AccountNumber { get; set; }

        /// <summary>
        /// Gets or Sets DDAStatus
        /// </summary>
        [DataMember(Name = "DDA_Status", EmitDefaultValue = false)]
        public Object DDAStatus { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DdaEnquirydetailsRequestGetDDAEnquiryDetailsReqDDAEnquiryRequestBODY {\n");
            sb.Append("  MandateReference: ").Append(MandateReference).Append("\n");
            sb.Append("  OIC: ").Append(OIC).Append("\n");
            sb.Append("  FromDate: ").Append(FromDate).Append("\n");
            sb.Append("  ToDate: ").Append(ToDate).Append("\n");
            sb.Append("  PayerName: ").Append(PayerName).Append("\n");
            sb.Append("  MandateReferenceNo: ").Append(MandateReferenceNo).Append("\n");
            sb.Append("  OriginatorName: ").Append(OriginatorName).Append("\n");
            sb.Append("  DDAAmountMin: ").Append(DDAAmountMin).Append("\n");
            sb.Append("  DDAAmountMax: ").Append(DDAAmountMax).Append("\n");
            sb.Append("  RIMNo: ").Append(RIMNo).Append("\n");
            sb.Append("  AccountNumber: ").Append(AccountNumber).Append("\n");
            sb.Append("  DDAStatus: ").Append(DDAStatus).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
