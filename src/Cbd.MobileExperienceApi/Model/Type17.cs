/*
 * exp-openfinance-api
 *
 * Ex  perience API for OpenFinance
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Cbd.MobileExperienceApi.Client.FileParameter;
using OpenAPIDateConverter = Cbd.MobileExperienceApi.Client.OpenAPIDateConverter;

namespace Cbd.MobileExperienceApi.Model
{
    /// <summary>
    /// Type17
    /// </summary>
    [DataContract(Name = "type_17")]
    public partial class Type17 : IValidatableObject
    {
        /// <summary>
        /// Defines ServiceCode
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ServiceCodeEnum
        {
            /// <summary>
            /// Enum SvcCreateUpdateEDD for value: SvcCreateUpdateEDD
            /// </summary>
            [EnumMember(Value = "SvcCreateUpdateEDD")]
            SvcCreateUpdateEDD = 1,

            /// <summary>
            /// Enum SvcRetrieveFATCA for value: SvcRetrieveFATCA
            /// </summary>
            [EnumMember(Value = "SvcRetrieveFATCA")]
            SvcRetrieveFATCA = 2,

            /// <summary>
            /// Enum SvcRetrieveCustomer for value: SvcRetrieveCustomer
            /// </summary>
            [EnumMember(Value = "SvcRetrieveCustomer")]
            SvcRetrieveCustomer = 3,

            /// <summary>
            /// Enum SvcRetrieveClient for value: SvcRetrieveClient
            /// </summary>
            [EnumMember(Value = "SvcRetrieveClient")]
            SvcRetrieveClient = 4,

            /// <summary>
            /// Enum SvcRetrieveEDD for value: SvcRetrieveEDD
            /// </summary>
            [EnumMember(Value = "SvcRetrieveEDD")]
            SvcRetrieveEDD = 5,

            /// <summary>
            /// Enum SvcCreateCustomerCareRequest for value: SvcCreateCustomerCareRequest
            /// </summary>
            [EnumMember(Value = "SvcCreateCustomerCareRequest")]
            SvcCreateCustomerCareRequest = 6,

            /// <summary>
            /// Enum SvcCreateLead for value: SvcCreateLead
            /// </summary>
            [EnumMember(Value = "SvcCreateLead")]
            SvcCreateLead = 7
        }


        /// <summary>
        /// Gets or Sets ServiceCode
        /// </summary>
        [DataMember(Name = "ServiceCode", IsRequired = true, EmitDefaultValue = true)]
        public ServiceCodeEnum ServiceCode { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="Type17" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected Type17() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="Type17" /> class.
        /// </summary>
        /// <param name="rqUID">rqUID.</param>
        /// <param name="msgRqHdr">msgRqHdr (required).</param>
        /// <param name="serviceCode">serviceCode (required).</param>
        /// <param name="serviceParameterJson">serviceParameterJson (required).</param>
        public Type17(string rqUID = default(string), Type17MsgRqHdr msgRqHdr = default(Type17MsgRqHdr), ServiceCodeEnum serviceCode = default(ServiceCodeEnum), string serviceParameterJson = default(string))
        {
            // to ensure "msgRqHdr" is required (not null)
            if (msgRqHdr == null)
            {
                throw new ArgumentNullException("msgRqHdr is a required property for Type17 and cannot be null");
            }
            this.MsgRqHdr = msgRqHdr;
            this.ServiceCode = serviceCode;
            // to ensure "serviceParameterJson" is required (not null)
            if (serviceParameterJson == null)
            {
                throw new ArgumentNullException("serviceParameterJson is a required property for Type17 and cannot be null");
            }
            this.ServiceParameterJson = serviceParameterJson;
            this.RqUID = rqUID;
        }

        /// <summary>
        /// Gets or Sets RqUID
        /// </summary>
        [DataMember(Name = "RqUID", EmitDefaultValue = false)]
        public string RqUID { get; set; }

        /// <summary>
        /// Gets or Sets MsgRqHdr
        /// </summary>
        [DataMember(Name = "MsgRqHdr", IsRequired = true, EmitDefaultValue = true)]
        public Type17MsgRqHdr MsgRqHdr { get; set; }

        /// <summary>
        /// Gets or Sets ServiceParameterJson
        /// </summary>
        [DataMember(Name = "ServiceParameterJson", IsRequired = true, EmitDefaultValue = true)]
        public string ServiceParameterJson { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Type17 {\n");
            sb.Append("  RqUID: ").Append(RqUID).Append("\n");
            sb.Append("  MsgRqHdr: ").Append(MsgRqHdr).Append("\n");
            sb.Append("  ServiceCode: ").Append(ServiceCode).Append("\n");
            sb.Append("  ServiceParameterJson: ").Append(ServiceParameterJson).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
