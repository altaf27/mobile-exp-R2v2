/*
 * exp-openfinance-api
 *
 * Ex  perience API for OpenFinance
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Cbd.MobileExperienceApi.Client.FileParameter;
using OpenAPIDateConverter = Cbd.MobileExperienceApi.Client.OpenAPIDateConverter;

namespace Cbd.MobileExperienceApi.Model
{
    /// <summary>
    /// XferAddRequestXferAddRqMsgRqHdrFeeRqHdrDebitRefDebitInfoCompositeCurAmtCurAmtCurCode
    /// </summary>
    [DataContract(Name = "XferAdd_request_XferAddRq_MsgRqHdr_FeeRqHdr_DebitRef_DebitInfo_CompositeCurAmt_CurAmt_CurCode")]
    public partial class XferAddRequestXferAddRqMsgRqHdrFeeRqHdrDebitRefDebitInfoCompositeCurAmtCurAmtCurCode : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="XferAddRequestXferAddRqMsgRqHdrFeeRqHdrDebitRefDebitInfoCompositeCurAmtCurAmtCurCode" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected XferAddRequestXferAddRqMsgRqHdrFeeRqHdrDebitRefDebitInfoCompositeCurAmtCurAmtCurCode() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="XferAddRequestXferAddRqMsgRqHdrFeeRqHdrDebitRefDebitInfoCompositeCurAmtCurAmtCurCode" /> class.
        /// </summary>
        /// <param name="curCodeType">curCodeType (required).</param>
        /// <param name="curCodeValue">curCodeValue (required).</param>
        public XferAddRequestXferAddRqMsgRqHdrFeeRqHdrDebitRefDebitInfoCompositeCurAmtCurAmtCurCode(string curCodeType = default(string), string curCodeValue = default(string))
        {
            // to ensure "curCodeType" is required (not null)
            if (curCodeType == null)
            {
                throw new ArgumentNullException("curCodeType is a required property for XferAddRequestXferAddRqMsgRqHdrFeeRqHdrDebitRefDebitInfoCompositeCurAmtCurAmtCurCode and cannot be null");
            }
            this.CurCodeType = curCodeType;
            // to ensure "curCodeValue" is required (not null)
            if (curCodeValue == null)
            {
                throw new ArgumentNullException("curCodeValue is a required property for XferAddRequestXferAddRqMsgRqHdrFeeRqHdrDebitRefDebitInfoCompositeCurAmtCurAmtCurCode and cannot be null");
            }
            this.CurCodeValue = curCodeValue;
        }

        /// <summary>
        /// Gets or Sets CurCodeType
        /// </summary>
        [DataMember(Name = "CurCodeType", IsRequired = true, EmitDefaultValue = true)]
        public string CurCodeType { get; set; }

        /// <summary>
        /// Gets or Sets CurCodeValue
        /// </summary>
        [DataMember(Name = "CurCodeValue", IsRequired = true, EmitDefaultValue = true)]
        public string CurCodeValue { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class XferAddRequestXferAddRqMsgRqHdrFeeRqHdrDebitRefDebitInfoCompositeCurAmtCurAmtCurCode {\n");
            sb.Append("  CurCodeType: ").Append(CurCodeType).Append("\n");
            sb.Append("  CurCodeValue: ").Append(CurCodeValue).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // CurCodeType (string) maxLength
            if (this.CurCodeType != null && this.CurCodeType.Length > 200)
            {
                yield return new ValidationResult("Invalid value for CurCodeType, length must be less than 200.", new [] { "CurCodeType" });
            }

            // CurCodeValue (string) maxLength
            if (this.CurCodeValue != null && this.CurCodeValue.Length > 200)
            {
                yield return new ValidationResult("Invalid value for CurCodeValue, length must be less than 200.", new [] { "CurCodeValue" });
            }

            yield break;
        }
    }

}
