/*
 * exp-openfinance-api
 *
 * Ex  perience API for OpenFinance
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Cbd.MobileExperienceApi.Client.FileParameter;
using OpenAPIDateConverter = Cbd.MobileExperienceApi.Client.OpenAPIDateConverter;

namespace Cbd.MobileExperienceApi.Model
{
    /// <summary>
    /// ValidateIbanDetailsRequest
    /// </summary>
    [DataContract(Name = "validateIbanDetails-request")]
    public partial class ValidateIbanDetailsRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ValidateIbanDetailsRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ValidateIbanDetailsRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ValidateIbanDetailsRequest" /> class.
        /// </summary>
        /// <param name="rqUID">rqUID.</param>
        /// <param name="channelId">channelId.</param>
        /// <param name="channelName">channelName.</param>
        /// <param name="iban">iban (required).</param>
        /// <param name="skipCBDValidation">skipCBDValidation (default to false).</param>
        /// <param name="skipCBDdata">skipCBDdata.</param>
        public ValidateIbanDetailsRequest(string rqUID = default(string), string channelId = default(string), string channelName = default(string), string iban = default(string), bool skipCBDValidation = false, bool skipCBDdata = default(bool))
        {
            // to ensure "iban" is required (not null)
            if (iban == null)
            {
                throw new ArgumentNullException("iban is a required property for ValidateIbanDetailsRequest and cannot be null");
            }
            this.Iban = iban;
            this.RqUID = rqUID;
            this.ChannelId = channelId;
            this.ChannelName = channelName;
            this.SkipCBDValidation = skipCBDValidation;
            this.SkipCBDdata = skipCBDdata;
        }

        /// <summary>
        /// Gets or Sets RqUID
        /// </summary>
        [DataMember(Name = "RqUID", EmitDefaultValue = false)]
        public string RqUID { get; set; }

        /// <summary>
        /// Gets or Sets ChannelId
        /// </summary>
        [DataMember(Name = "channelId", EmitDefaultValue = false)]
        public string ChannelId { get; set; }

        /// <summary>
        /// Gets or Sets ChannelName
        /// </summary>
        [DataMember(Name = "channelName", EmitDefaultValue = false)]
        public string ChannelName { get; set; }

        /// <summary>
        /// Gets or Sets Iban
        /// </summary>
        [DataMember(Name = "iban", IsRequired = true, EmitDefaultValue = true)]
        public string Iban { get; set; }

        /// <summary>
        /// Gets or Sets SkipCBDValidation
        /// </summary>
        [DataMember(Name = "skipCBDValidation", EmitDefaultValue = true)]
        public bool SkipCBDValidation { get; set; }

        /// <summary>
        /// Gets or Sets SkipCBDdata
        /// </summary>
        [DataMember(Name = "skipCBDdata", EmitDefaultValue = true)]
        public bool SkipCBDdata { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ValidateIbanDetailsRequest {\n");
            sb.Append("  RqUID: ").Append(RqUID).Append("\n");
            sb.Append("  ChannelId: ").Append(ChannelId).Append("\n");
            sb.Append("  ChannelName: ").Append(ChannelName).Append("\n");
            sb.Append("  Iban: ").Append(Iban).Append("\n");
            sb.Append("  SkipCBDValidation: ").Append(SkipCBDValidation).Append("\n");
            sb.Append("  SkipCBDdata: ").Append(SkipCBDdata).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
