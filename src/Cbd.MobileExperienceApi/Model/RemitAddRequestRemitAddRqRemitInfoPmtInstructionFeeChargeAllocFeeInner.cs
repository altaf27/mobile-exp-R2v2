/*
 * exp-openfinance-api
 *
 * Ex  perience API for OpenFinance
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Cbd.MobileExperienceApi.Client.FileParameter;
using OpenAPIDateConverter = Cbd.MobileExperienceApi.Client.OpenAPIDateConverter;

namespace Cbd.MobileExperienceApi.Model
{
    /// <summary>
    /// RemitAddRequestRemitAddRqRemitInfoPmtInstructionFeeChargeAllocFeeInner
    /// </summary>
    [DataContract(Name = "RemitAdd_request_RemitAddRq_RemitInfo_PmtInstruction_FeeChargeAlloc_Fee_inner")]
    public partial class RemitAddRequestRemitAddRqRemitInfoPmtInstructionFeeChargeAllocFeeInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RemitAddRequestRemitAddRqRemitInfoPmtInstructionFeeChargeAllocFeeInner" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected RemitAddRequestRemitAddRqRemitInfoPmtInstructionFeeChargeAllocFeeInner() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="RemitAddRequestRemitAddRqRemitInfoPmtInstructionFeeChargeAllocFeeInner" /> class.
        /// </summary>
        /// <param name="feeType">feeType (required).</param>
        /// <param name="curAmt">curAmt (required).</param>
        /// <param name="desc">desc.</param>
        public RemitAddRequestRemitAddRqRemitInfoPmtInstructionFeeChargeAllocFeeInner(Object feeType = default(Object), RemitAddRequestRemitAddRqRemitInfoPmtInstructionFeeChargeAllocFeeInnerCurAmt curAmt = default(RemitAddRequestRemitAddRqRemitInfoPmtInstructionFeeChargeAllocFeeInnerCurAmt), Object desc = default(Object))
        {
            // to ensure "feeType" is required (not null)
            if (feeType == null)
            {
                throw new ArgumentNullException("feeType is a required property for RemitAddRequestRemitAddRqRemitInfoPmtInstructionFeeChargeAllocFeeInner and cannot be null");
            }
            this.FeeType = feeType;
            // to ensure "curAmt" is required (not null)
            if (curAmt == null)
            {
                throw new ArgumentNullException("curAmt is a required property for RemitAddRequestRemitAddRqRemitInfoPmtInstructionFeeChargeAllocFeeInner and cannot be null");
            }
            this.CurAmt = curAmt;
            this.Desc = desc;
        }

        /// <summary>
        /// Gets or Sets FeeType
        /// </summary>
        [DataMember(Name = "FeeType", IsRequired = true, EmitDefaultValue = true)]
        public Object FeeType { get; set; }

        /// <summary>
        /// Gets or Sets CurAmt
        /// </summary>
        [DataMember(Name = "CurAmt", IsRequired = true, EmitDefaultValue = true)]
        public RemitAddRequestRemitAddRqRemitInfoPmtInstructionFeeChargeAllocFeeInnerCurAmt CurAmt { get; set; }

        /// <summary>
        /// Gets or Sets Desc
        /// </summary>
        [DataMember(Name = "Desc", EmitDefaultValue = false)]
        public Object Desc { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RemitAddRequestRemitAddRqRemitInfoPmtInstructionFeeChargeAllocFeeInner {\n");
            sb.Append("  FeeType: ").Append(FeeType).Append("\n");
            sb.Append("  CurAmt: ").Append(CurAmt).Append("\n");
            sb.Append("  Desc: ").Append(Desc).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
