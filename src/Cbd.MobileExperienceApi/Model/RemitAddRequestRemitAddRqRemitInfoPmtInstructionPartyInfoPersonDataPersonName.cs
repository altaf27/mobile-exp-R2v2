/*
 * exp-openfinance-api
 *
 * Ex  perience API for OpenFinance
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Cbd.MobileExperienceApi.Client.FileParameter;
using OpenAPIDateConverter = Cbd.MobileExperienceApi.Client.OpenAPIDateConverter;

namespace Cbd.MobileExperienceApi.Model
{
    /// <summary>
    /// RemitAddRequestRemitAddRqRemitInfoPmtInstructionPartyInfoPersonDataPersonName
    /// </summary>
    [DataContract(Name = "RemitAdd_request_RemitAddRq_RemitInfo_PmtInstruction_PartyInfo_PersonData_PersonName")]
    public partial class RemitAddRequestRemitAddRqRemitInfoPmtInstructionPartyInfoPersonDataPersonName : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RemitAddRequestRemitAddRqRemitInfoPmtInstructionPartyInfoPersonDataPersonName" /> class.
        /// </summary>
        /// <param name="namePrefix">namePrefix.</param>
        /// <param name="firstName">firstName.</param>
        /// <param name="middleName">middleName.</param>
        /// <param name="lastName">lastName.</param>
        /// <param name="firstNameLocalLang">firstNameLocalLang.</param>
        /// <param name="middleNameLocalLang">middleNameLocalLang.</param>
        /// <param name="lastNameLocalLang">lastNameLocalLang.</param>
        /// <param name="preferredName">preferredName.</param>
        /// <param name="paternalName">paternalName.</param>
        /// <param name="maternalName">maternalName.</param>
        public RemitAddRequestRemitAddRqRemitInfoPmtInstructionPartyInfoPersonDataPersonName(Object namePrefix = default(Object), Object firstName = default(Object), Object middleName = default(Object), Object lastName = default(Object), Object firstNameLocalLang = default(Object), Object middleNameLocalLang = default(Object), Object lastNameLocalLang = default(Object), Object preferredName = default(Object), Object paternalName = default(Object), Object maternalName = default(Object))
        {
            this.NamePrefix = namePrefix;
            this.FirstName = firstName;
            this.MiddleName = middleName;
            this.LastName = lastName;
            this.FirstNameLocalLang = firstNameLocalLang;
            this.MiddleNameLocalLang = middleNameLocalLang;
            this.LastNameLocalLang = lastNameLocalLang;
            this.PreferredName = preferredName;
            this.PaternalName = paternalName;
            this.MaternalName = maternalName;
        }

        /// <summary>
        /// Gets or Sets NamePrefix
        /// </summary>
        [DataMember(Name = "NamePrefix", EmitDefaultValue = false)]
        public Object NamePrefix { get; set; }

        /// <summary>
        /// Gets or Sets FirstName
        /// </summary>
        [DataMember(Name = "FirstName", EmitDefaultValue = false)]
        public Object FirstName { get; set; }

        /// <summary>
        /// Gets or Sets MiddleName
        /// </summary>
        [DataMember(Name = "MiddleName", EmitDefaultValue = false)]
        public Object MiddleName { get; set; }

        /// <summary>
        /// Gets or Sets LastName
        /// </summary>
        [DataMember(Name = "LastName", EmitDefaultValue = false)]
        public Object LastName { get; set; }

        /// <summary>
        /// Gets or Sets FirstNameLocalLang
        /// </summary>
        [DataMember(Name = "FirstNameLocalLang", EmitDefaultValue = false)]
        public Object FirstNameLocalLang { get; set; }

        /// <summary>
        /// Gets or Sets MiddleNameLocalLang
        /// </summary>
        [DataMember(Name = "MiddleNameLocalLang", EmitDefaultValue = false)]
        public Object MiddleNameLocalLang { get; set; }

        /// <summary>
        /// Gets or Sets LastNameLocalLang
        /// </summary>
        [DataMember(Name = "LastNameLocalLang", EmitDefaultValue = false)]
        public Object LastNameLocalLang { get; set; }

        /// <summary>
        /// Gets or Sets PreferredName
        /// </summary>
        [DataMember(Name = "PreferredName", EmitDefaultValue = false)]
        public Object PreferredName { get; set; }

        /// <summary>
        /// Gets or Sets PaternalName
        /// </summary>
        [DataMember(Name = "PaternalName", EmitDefaultValue = false)]
        public Object PaternalName { get; set; }

        /// <summary>
        /// Gets or Sets MaternalName
        /// </summary>
        [DataMember(Name = "MaternalName", EmitDefaultValue = false)]
        public Object MaternalName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RemitAddRequestRemitAddRqRemitInfoPmtInstructionPartyInfoPersonDataPersonName {\n");
            sb.Append("  NamePrefix: ").Append(NamePrefix).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  MiddleName: ").Append(MiddleName).Append("\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  FirstNameLocalLang: ").Append(FirstNameLocalLang).Append("\n");
            sb.Append("  MiddleNameLocalLang: ").Append(MiddleNameLocalLang).Append("\n");
            sb.Append("  LastNameLocalLang: ").Append(LastNameLocalLang).Append("\n");
            sb.Append("  PreferredName: ").Append(PreferredName).Append("\n");
            sb.Append("  PaternalName: ").Append(PaternalName).Append("\n");
            sb.Append("  MaternalName: ").Append(MaternalName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
