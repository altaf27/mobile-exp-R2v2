/*
 * exp-openfinance-api
 *
 * Ex  perience API for OpenFinance
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Cbd.MobileExperienceApi.Client.FileParameter;
using OpenAPIDateConverter = Cbd.MobileExperienceApi.Client.OpenAPIDateConverter;

namespace Cbd.MobileExperienceApi.Model
{
    /// <summary>
    /// PartyinqrsPartyInfoType
    /// </summary>
    [DataContract(Name = "partyinqrs_PartyInfo_Type")]
    public partial class PartyinqrsPartyInfoType : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PartyinqrsPartyInfoType" /> class.
        /// </summary>
        /// <param name="partyIdType">partyIdType.</param>
        /// <param name="partyIdStatus">partyIdStatus.</param>
        /// <param name="serviceLevelCode">serviceLevelCode.</param>
        /// <param name="serviceLevelDesc">serviceLevelDesc.</param>
        /// <param name="classCode">classCode.</param>
        /// <param name="classCodeDesc">classCodeDesc.</param>
        /// <param name="partyStatus">partyStatus.</param>
        /// <param name="originatingBranchCode">originatingBranchCode.</param>
        /// <param name="originatingBranchName">originatingBranchName.</param>
        /// <param name="personData">personData.</param>
        /// <param name="orgData">orgData.</param>
        /// <param name="birthDt">birthDt.</param>
        /// <param name="birthPlace">birthPlace.</param>
        /// <param name="gender">gender.</param>
        /// <param name="qualification">qualification.</param>
        /// <param name="maritalStat">maritalStat.</param>
        /// <param name="occupation">occupation.</param>
        /// <param name="dependents">dependents.</param>
        /// <param name="issuedIdent">issuedIdent.</param>
        /// <param name="passportIssuedDt">passportIssuedDt.</param>
        /// <param name="passportExpiryDt">passportExpiryDt.</param>
        /// <param name="passportIssuedCountryCode">passportIssuedCountryCode.</param>
        /// <param name="passportIssuedCity">passportIssuedCity.</param>
        /// <param name="emiratesIDExpiryDt">emiratesIDExpiryDt.</param>
        /// <param name="nationalIDExpiryDt">nationalIDExpiryDt.</param>
        /// <param name="visaExpiryDt">visaExpiryDt.</param>
        /// <param name="nationalityId">nationalityId.</param>
        /// <param name="nationality">nationality.</param>
        /// <param name="segmentation">segmentation.</param>
        /// <param name="resident">resident.</param>
        /// <param name="residentCountry">residentCountry.</param>
        /// <param name="fatca">fatca.</param>
        /// <param name="fatcaDetails">fatcaDetails.</param>
        /// <param name="partyAffiliateData">partyAffiliateData.</param>
        /// <param name="financialData">financialData.</param>
        /// <param name="openReason">openReason.</param>
        /// <param name="relationshipMgr">relationshipMgr.</param>
        /// <param name="preferredLang">preferredLang.</param>
        /// <param name="creditRisk">creditRisk.</param>
        /// <param name="formW8">formW8.</param>
        /// <param name="formW9">formW9.</param>
        /// <param name="politicallyExposed">politicallyExposed.</param>
        /// <param name="tradeLicenseExpiryDT">tradeLicenseExpiryDT.</param>
        /// <param name="tradeLicenseIssuedBy">tradeLicenseIssuedBy.</param>
        /// <param name="legalStructure">legalStructure.</param>
        /// <param name="industryDesc">industryDesc.</param>
        /// <param name="establishedDt">establishedDt.</param>
        /// <param name="cCCStatus">cCCStatus.</param>
        /// <param name="orgBussinessCountry">orgBussinessCountry.</param>
        /// <param name="incorporationCountry">incorporationCountry.</param>
        public PartyinqrsPartyInfoType(string partyIdType = default(string), string partyIdStatus = default(string), string serviceLevelCode = default(string), string serviceLevelDesc = default(string), string classCode = default(string), string classCodeDesc = default(string), string partyStatus = default(string), string originatingBranchCode = default(string), string originatingBranchName = default(string), PartyinqrsPersonDataType personData = default(PartyinqrsPersonDataType), PartyinqrsOrgDataType orgData = default(PartyinqrsOrgDataType), DateOnly birthDt = default(DateOnly), string birthPlace = default(string), string gender = default(string), string qualification = default(string), string maritalStat = default(string), string occupation = default(string), string dependents = default(string), List<PartyinqrsIssuedIdentType> issuedIdent = default(List<PartyinqrsIssuedIdentType>), string passportIssuedDt = default(string), string passportExpiryDt = default(string), string passportIssuedCountryCode = default(string), string passportIssuedCity = default(string), string emiratesIDExpiryDt = default(string), string nationalIDExpiryDt = default(string), string visaExpiryDt = default(string), string nationalityId = default(string), List<string> nationality = default(List<string>), PartyinqrsSegmentationType segmentation = default(PartyinqrsSegmentationType), string resident = default(string), string residentCountry = default(string), string fatca = default(string), PartyinqrsFatcaDetailsType fatcaDetails = default(PartyinqrsFatcaDetailsType), PartyinqrsPartyAffiliateDataType partyAffiliateData = default(PartyinqrsPartyAffiliateDataType), PartyinqrsFinancialDataType financialData = default(PartyinqrsFinancialDataType), string openReason = default(string), List<PartyinqrsRelationshipMgrType> relationshipMgr = default(List<PartyinqrsRelationshipMgrType>), string preferredLang = default(string), PartyinqrsCreditRiskType creditRisk = default(PartyinqrsCreditRiskType), string formW8 = default(string), string formW9 = default(string), string politicallyExposed = default(string), string tradeLicenseExpiryDT = default(string), string tradeLicenseIssuedBy = default(string), string legalStructure = default(string), string industryDesc = default(string), string establishedDt = default(string), string cCCStatus = default(string), string orgBussinessCountry = default(string), string incorporationCountry = default(string))
        {
            this.PartyIdType = partyIdType;
            this.PartyIdStatus = partyIdStatus;
            this.ServiceLevelCode = serviceLevelCode;
            this.ServiceLevelDesc = serviceLevelDesc;
            this.ClassCode = classCode;
            this.ClassCodeDesc = classCodeDesc;
            this.PartyStatus = partyStatus;
            this.OriginatingBranchCode = originatingBranchCode;
            this.OriginatingBranchName = originatingBranchName;
            this.PersonData = personData;
            this.OrgData = orgData;
            this.BirthDt = birthDt;
            this.BirthPlace = birthPlace;
            this.Gender = gender;
            this.Qualification = qualification;
            this.MaritalStat = maritalStat;
            this.Occupation = occupation;
            this.Dependents = dependents;
            this.IssuedIdent = issuedIdent;
            this.PassportIssuedDt = passportIssuedDt;
            this.PassportExpiryDt = passportExpiryDt;
            this.PassportIssuedCountryCode = passportIssuedCountryCode;
            this.PassportIssuedCity = passportIssuedCity;
            this.EmiratesIDExpiryDt = emiratesIDExpiryDt;
            this.NationalIDExpiryDt = nationalIDExpiryDt;
            this.VisaExpiryDt = visaExpiryDt;
            this.NationalityId = nationalityId;
            this.Nationality = nationality;
            this.Segmentation = segmentation;
            this.Resident = resident;
            this.ResidentCountry = residentCountry;
            this.Fatca = fatca;
            this.FatcaDetails = fatcaDetails;
            this.PartyAffiliateData = partyAffiliateData;
            this.FinancialData = financialData;
            this.OpenReason = openReason;
            this.RelationshipMgr = relationshipMgr;
            this.PreferredLang = preferredLang;
            this.CreditRisk = creditRisk;
            this.FormW8 = formW8;
            this.FormW9 = formW9;
            this.PoliticallyExposed = politicallyExposed;
            this.TradeLicenseExpiryDT = tradeLicenseExpiryDT;
            this.TradeLicenseIssuedBy = tradeLicenseIssuedBy;
            this.LegalStructure = legalStructure;
            this.IndustryDesc = industryDesc;
            this.EstablishedDt = establishedDt;
            this.CCCStatus = cCCStatus;
            this.OrgBussinessCountry = orgBussinessCountry;
            this.IncorporationCountry = incorporationCountry;
        }

        /// <summary>
        /// Gets or Sets PartyIdType
        /// </summary>
        [DataMember(Name = "PartyIdType", EmitDefaultValue = false)]
        public string PartyIdType { get; set; }

        /// <summary>
        /// Gets or Sets PartyIdStatus
        /// </summary>
        [DataMember(Name = "PartyIdStatus", EmitDefaultValue = false)]
        public string PartyIdStatus { get; set; }

        /// <summary>
        /// Gets or Sets ServiceLevelCode
        /// </summary>
        [DataMember(Name = "ServiceLevelCode", EmitDefaultValue = false)]
        public string ServiceLevelCode { get; set; }

        /// <summary>
        /// Gets or Sets ServiceLevelDesc
        /// </summary>
        [DataMember(Name = "ServiceLevelDesc", EmitDefaultValue = false)]
        public string ServiceLevelDesc { get; set; }

        /// <summary>
        /// Gets or Sets ClassCode
        /// </summary>
        [DataMember(Name = "ClassCode", EmitDefaultValue = false)]
        public string ClassCode { get; set; }

        /// <summary>
        /// Gets or Sets ClassCodeDesc
        /// </summary>
        [DataMember(Name = "ClassCodeDesc", EmitDefaultValue = false)]
        public string ClassCodeDesc { get; set; }

        /// <summary>
        /// Gets or Sets PartyStatus
        /// </summary>
        [DataMember(Name = "PartyStatus", EmitDefaultValue = false)]
        public string PartyStatus { get; set; }

        /// <summary>
        /// Gets or Sets OriginatingBranchCode
        /// </summary>
        [DataMember(Name = "OriginatingBranchCode", EmitDefaultValue = false)]
        public string OriginatingBranchCode { get; set; }

        /// <summary>
        /// Gets or Sets OriginatingBranchName
        /// </summary>
        [DataMember(Name = "OriginatingBranchName", EmitDefaultValue = false)]
        public string OriginatingBranchName { get; set; }

        /// <summary>
        /// Gets or Sets PersonData
        /// </summary>
        [DataMember(Name = "PersonData", EmitDefaultValue = false)]
        public PartyinqrsPersonDataType PersonData { get; set; }

        /// <summary>
        /// Gets or Sets OrgData
        /// </summary>
        [DataMember(Name = "OrgData", EmitDefaultValue = false)]
        public PartyinqrsOrgDataType OrgData { get; set; }

        /// <summary>
        /// Gets or Sets BirthDt
        /// </summary>
        [DataMember(Name = "BirthDt", EmitDefaultValue = false)]
        public DateOnly BirthDt { get; set; }

        /// <summary>
        /// Gets or Sets BirthPlace
        /// </summary>
        [DataMember(Name = "BirthPlace", EmitDefaultValue = false)]
        public string BirthPlace { get; set; }

        /// <summary>
        /// Gets or Sets Gender
        /// </summary>
        [DataMember(Name = "Gender", EmitDefaultValue = false)]
        public string Gender { get; set; }

        /// <summary>
        /// Gets or Sets Qualification
        /// </summary>
        [DataMember(Name = "Qualification", EmitDefaultValue = false)]
        public string Qualification { get; set; }

        /// <summary>
        /// Gets or Sets MaritalStat
        /// </summary>
        [DataMember(Name = "MaritalStat", EmitDefaultValue = false)]
        public string MaritalStat { get; set; }

        /// <summary>
        /// Gets or Sets Occupation
        /// </summary>
        [DataMember(Name = "Occupation", EmitDefaultValue = false)]
        public string Occupation { get; set; }

        /// <summary>
        /// Gets or Sets Dependents
        /// </summary>
        [DataMember(Name = "Dependents", EmitDefaultValue = false)]
        public string Dependents { get; set; }

        /// <summary>
        /// Gets or Sets IssuedIdent
        /// </summary>
        [DataMember(Name = "IssuedIdent", EmitDefaultValue = false)]
        public List<PartyinqrsIssuedIdentType> IssuedIdent { get; set; }

        /// <summary>
        /// Gets or Sets PassportIssuedDt
        /// </summary>
        [DataMember(Name = "PassportIssuedDt", EmitDefaultValue = false)]
        public string PassportIssuedDt { get; set; }

        /// <summary>
        /// Gets or Sets PassportExpiryDt
        /// </summary>
        [DataMember(Name = "PassportExpiryDt", EmitDefaultValue = false)]
        public string PassportExpiryDt { get; set; }

        /// <summary>
        /// Gets or Sets PassportIssuedCountryCode
        /// </summary>
        [DataMember(Name = "PassportIssuedCountryCode", EmitDefaultValue = false)]
        public string PassportIssuedCountryCode { get; set; }

        /// <summary>
        /// Gets or Sets PassportIssuedCity
        /// </summary>
        [DataMember(Name = "PassportIssuedCity", EmitDefaultValue = false)]
        public string PassportIssuedCity { get; set; }

        /// <summary>
        /// Gets or Sets EmiratesIDExpiryDt
        /// </summary>
        [DataMember(Name = "EmiratesIDExpiryDt", EmitDefaultValue = false)]
        public string EmiratesIDExpiryDt { get; set; }

        /// <summary>
        /// Gets or Sets NationalIDExpiryDt
        /// </summary>
        [DataMember(Name = "NationalIDExpiryDt", EmitDefaultValue = false)]
        public string NationalIDExpiryDt { get; set; }

        /// <summary>
        /// Gets or Sets VisaExpiryDt
        /// </summary>
        [DataMember(Name = "VisaExpiryDt", EmitDefaultValue = false)]
        public string VisaExpiryDt { get; set; }

        /// <summary>
        /// Gets or Sets NationalityId
        /// </summary>
        [DataMember(Name = "NationalityId", EmitDefaultValue = false)]
        public string NationalityId { get; set; }

        /// <summary>
        /// Gets or Sets Nationality
        /// </summary>
        [DataMember(Name = "Nationality", EmitDefaultValue = false)]
        public List<string> Nationality { get; set; }

        /// <summary>
        /// Gets or Sets Segmentation
        /// </summary>
        [DataMember(Name = "Segmentation", EmitDefaultValue = false)]
        public PartyinqrsSegmentationType Segmentation { get; set; }

        /// <summary>
        /// Gets or Sets Resident
        /// </summary>
        [DataMember(Name = "Resident", EmitDefaultValue = false)]
        public string Resident { get; set; }

        /// <summary>
        /// Gets or Sets ResidentCountry
        /// </summary>
        [DataMember(Name = "ResidentCountry", EmitDefaultValue = false)]
        public string ResidentCountry { get; set; }

        /// <summary>
        /// Gets or Sets Fatca
        /// </summary>
        [DataMember(Name = "Fatca", EmitDefaultValue = false)]
        public string Fatca { get; set; }

        /// <summary>
        /// Gets or Sets FatcaDetails
        /// </summary>
        [DataMember(Name = "FatcaDetails", EmitDefaultValue = false)]
        public PartyinqrsFatcaDetailsType FatcaDetails { get; set; }

        /// <summary>
        /// Gets or Sets PartyAffiliateData
        /// </summary>
        [DataMember(Name = "PartyAffiliateData", EmitDefaultValue = false)]
        public PartyinqrsPartyAffiliateDataType PartyAffiliateData { get; set; }

        /// <summary>
        /// Gets or Sets FinancialData
        /// </summary>
        [DataMember(Name = "FinancialData", EmitDefaultValue = false)]
        public PartyinqrsFinancialDataType FinancialData { get; set; }

        /// <summary>
        /// Gets or Sets OpenReason
        /// </summary>
        [DataMember(Name = "OpenReason", EmitDefaultValue = false)]
        public string OpenReason { get; set; }

        /// <summary>
        /// Gets or Sets RelationshipMgr
        /// </summary>
        [DataMember(Name = "RelationshipMgr", EmitDefaultValue = false)]
        public List<PartyinqrsRelationshipMgrType> RelationshipMgr { get; set; }

        /// <summary>
        /// Gets or Sets PreferredLang
        /// </summary>
        [DataMember(Name = "PreferredLang", EmitDefaultValue = false)]
        public string PreferredLang { get; set; }

        /// <summary>
        /// Gets or Sets CreditRisk
        /// </summary>
        [DataMember(Name = "CreditRisk", EmitDefaultValue = false)]
        public PartyinqrsCreditRiskType CreditRisk { get; set; }

        /// <summary>
        /// Gets or Sets FormW8
        /// </summary>
        [DataMember(Name = "FormW8", EmitDefaultValue = false)]
        public string FormW8 { get; set; }

        /// <summary>
        /// Gets or Sets FormW9
        /// </summary>
        [DataMember(Name = "FormW9", EmitDefaultValue = false)]
        public string FormW9 { get; set; }

        /// <summary>
        /// Gets or Sets PoliticallyExposed
        /// </summary>
        [DataMember(Name = "PoliticallyExposed", EmitDefaultValue = false)]
        public string PoliticallyExposed { get; set; }

        /// <summary>
        /// Gets or Sets TradeLicenseExpiryDT
        /// </summary>
        [DataMember(Name = "TradeLicenseExpiryDT", EmitDefaultValue = false)]
        public string TradeLicenseExpiryDT { get; set; }

        /// <summary>
        /// Gets or Sets TradeLicenseIssuedBy
        /// </summary>
        [DataMember(Name = "TradeLicenseIssuedBy", EmitDefaultValue = false)]
        public string TradeLicenseIssuedBy { get; set; }

        /// <summary>
        /// Gets or Sets LegalStructure
        /// </summary>
        [DataMember(Name = "LegalStructure", EmitDefaultValue = false)]
        public string LegalStructure { get; set; }

        /// <summary>
        /// Gets or Sets IndustryDesc
        /// </summary>
        [DataMember(Name = "IndustryDesc", EmitDefaultValue = false)]
        public string IndustryDesc { get; set; }

        /// <summary>
        /// Gets or Sets EstablishedDt
        /// </summary>
        [DataMember(Name = "EstablishedDt", EmitDefaultValue = false)]
        public string EstablishedDt { get; set; }

        /// <summary>
        /// Gets or Sets CCCStatus
        /// </summary>
        [DataMember(Name = "CCCStatus", EmitDefaultValue = false)]
        public string CCCStatus { get; set; }

        /// <summary>
        /// Gets or Sets OrgBussinessCountry
        /// </summary>
        [DataMember(Name = "OrgBussinessCountry", EmitDefaultValue = false)]
        public string OrgBussinessCountry { get; set; }

        /// <summary>
        /// Gets or Sets IncorporationCountry
        /// </summary>
        [DataMember(Name = "IncorporationCountry", EmitDefaultValue = false)]
        public string IncorporationCountry { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PartyinqrsPartyInfoType {\n");
            sb.Append("  PartyIdType: ").Append(PartyIdType).Append("\n");
            sb.Append("  PartyIdStatus: ").Append(PartyIdStatus).Append("\n");
            sb.Append("  ServiceLevelCode: ").Append(ServiceLevelCode).Append("\n");
            sb.Append("  ServiceLevelDesc: ").Append(ServiceLevelDesc).Append("\n");
            sb.Append("  ClassCode: ").Append(ClassCode).Append("\n");
            sb.Append("  ClassCodeDesc: ").Append(ClassCodeDesc).Append("\n");
            sb.Append("  PartyStatus: ").Append(PartyStatus).Append("\n");
            sb.Append("  OriginatingBranchCode: ").Append(OriginatingBranchCode).Append("\n");
            sb.Append("  OriginatingBranchName: ").Append(OriginatingBranchName).Append("\n");
            sb.Append("  PersonData: ").Append(PersonData).Append("\n");
            sb.Append("  OrgData: ").Append(OrgData).Append("\n");
            sb.Append("  BirthDt: ").Append(BirthDt).Append("\n");
            sb.Append("  BirthPlace: ").Append(BirthPlace).Append("\n");
            sb.Append("  Gender: ").Append(Gender).Append("\n");
            sb.Append("  Qualification: ").Append(Qualification).Append("\n");
            sb.Append("  MaritalStat: ").Append(MaritalStat).Append("\n");
            sb.Append("  Occupation: ").Append(Occupation).Append("\n");
            sb.Append("  Dependents: ").Append(Dependents).Append("\n");
            sb.Append("  IssuedIdent: ").Append(IssuedIdent).Append("\n");
            sb.Append("  PassportIssuedDt: ").Append(PassportIssuedDt).Append("\n");
            sb.Append("  PassportExpiryDt: ").Append(PassportExpiryDt).Append("\n");
            sb.Append("  PassportIssuedCountryCode: ").Append(PassportIssuedCountryCode).Append("\n");
            sb.Append("  PassportIssuedCity: ").Append(PassportIssuedCity).Append("\n");
            sb.Append("  EmiratesIDExpiryDt: ").Append(EmiratesIDExpiryDt).Append("\n");
            sb.Append("  NationalIDExpiryDt: ").Append(NationalIDExpiryDt).Append("\n");
            sb.Append("  VisaExpiryDt: ").Append(VisaExpiryDt).Append("\n");
            sb.Append("  NationalityId: ").Append(NationalityId).Append("\n");
            sb.Append("  Nationality: ").Append(Nationality).Append("\n");
            sb.Append("  Segmentation: ").Append(Segmentation).Append("\n");
            sb.Append("  Resident: ").Append(Resident).Append("\n");
            sb.Append("  ResidentCountry: ").Append(ResidentCountry).Append("\n");
            sb.Append("  Fatca: ").Append(Fatca).Append("\n");
            sb.Append("  FatcaDetails: ").Append(FatcaDetails).Append("\n");
            sb.Append("  PartyAffiliateData: ").Append(PartyAffiliateData).Append("\n");
            sb.Append("  FinancialData: ").Append(FinancialData).Append("\n");
            sb.Append("  OpenReason: ").Append(OpenReason).Append("\n");
            sb.Append("  RelationshipMgr: ").Append(RelationshipMgr).Append("\n");
            sb.Append("  PreferredLang: ").Append(PreferredLang).Append("\n");
            sb.Append("  CreditRisk: ").Append(CreditRisk).Append("\n");
            sb.Append("  FormW8: ").Append(FormW8).Append("\n");
            sb.Append("  FormW9: ").Append(FormW9).Append("\n");
            sb.Append("  PoliticallyExposed: ").Append(PoliticallyExposed).Append("\n");
            sb.Append("  TradeLicenseExpiryDT: ").Append(TradeLicenseExpiryDT).Append("\n");
            sb.Append("  TradeLicenseIssuedBy: ").Append(TradeLicenseIssuedBy).Append("\n");
            sb.Append("  LegalStructure: ").Append(LegalStructure).Append("\n");
            sb.Append("  IndustryDesc: ").Append(IndustryDesc).Append("\n");
            sb.Append("  EstablishedDt: ").Append(EstablishedDt).Append("\n");
            sb.Append("  CCCStatus: ").Append(CCCStatus).Append("\n");
            sb.Append("  OrgBussinessCountry: ").Append(OrgBussinessCountry).Append("\n");
            sb.Append("  IncorporationCountry: ").Append(IncorporationCountry).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
