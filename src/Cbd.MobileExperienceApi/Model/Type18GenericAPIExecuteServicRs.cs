/*
 * exp-openfinance-api
 *
 * Ex  perience API for OpenFinance
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Cbd.MobileExperienceApi.Client.FileParameter;
using OpenAPIDateConverter = Cbd.MobileExperienceApi.Client.OpenAPIDateConverter;

namespace Cbd.MobileExperienceApi.Model
{
    /// <summary>
    /// Type18GenericAPIExecuteServicRs
    /// </summary>
    [DataContract(Name = "type_18_GenericAPIExecuteServicRs")]
    public partial class Type18GenericAPIExecuteServicRs : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Type18GenericAPIExecuteServicRs" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected Type18GenericAPIExecuteServicRs() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="Type18GenericAPIExecuteServicRs" /> class.
        /// </summary>
        /// <param name="status">status (required).</param>
        /// <param name="rqUID">rqUID (required).</param>
        /// <param name="result">result (required).</param>
        public Type18GenericAPIExecuteServicRs(Type18GenericAPIExecuteServicRsStatus status = default(Type18GenericAPIExecuteServicRsStatus), string rqUID = default(string), Type18GenericAPIExecuteServicRsResult result = default(Type18GenericAPIExecuteServicRsResult))
        {
            // to ensure "status" is required (not null)
            if (status == null)
            {
                throw new ArgumentNullException("status is a required property for Type18GenericAPIExecuteServicRs and cannot be null");
            }
            this.Status = status;
            // to ensure "rqUID" is required (not null)
            if (rqUID == null)
            {
                throw new ArgumentNullException("rqUID is a required property for Type18GenericAPIExecuteServicRs and cannot be null");
            }
            this.RqUID = rqUID;
            // to ensure "result" is required (not null)
            if (result == null)
            {
                throw new ArgumentNullException("result is a required property for Type18GenericAPIExecuteServicRs and cannot be null");
            }
            this.Result = result;
        }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "Status", IsRequired = true, EmitDefaultValue = true)]
        public Type18GenericAPIExecuteServicRsStatus Status { get; set; }

        /// <summary>
        /// Gets or Sets RqUID
        /// </summary>
        [DataMember(Name = "RqUID", IsRequired = true, EmitDefaultValue = true)]
        public string RqUID { get; set; }

        /// <summary>
        /// Gets or Sets Result
        /// </summary>
        [DataMember(Name = "Result", IsRequired = true, EmitDefaultValue = true)]
        public Type18GenericAPIExecuteServicRsResult Result { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Type18GenericAPIExecuteServicRs {\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  RqUID: ").Append(RqUID).Append("\n");
            sb.Append("  Result: ").Append(Result).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
