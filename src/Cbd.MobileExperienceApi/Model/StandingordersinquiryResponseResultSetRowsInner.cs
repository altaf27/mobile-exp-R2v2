/*
 * exp-openfinance-api
 *
 * Ex  perience API for OpenFinance
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Cbd.MobileExperienceApi.Client.FileParameter;
using OpenAPIDateConverter = Cbd.MobileExperienceApi.Client.OpenAPIDateConverter;

namespace Cbd.MobileExperienceApi.Model
{
    /// <summary>
    /// StandingordersinquiryResponseResultSetRowsInner
    /// </summary>
    [DataContract(Name = "standingordersinquiry_response_ResultSet_Rows_inner")]
    public partial class StandingordersinquiryResponseResultSetRowsInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="StandingordersinquiryResponseResultSetRowsInner" /> class.
        /// </summary>
        /// <param name="rimNo">rimNo.</param>
        /// <param name="type">type.</param>
        /// <param name="standingOrderNumber">standingOrderNumber.</param>
        /// <param name="description">description.</param>
        /// <param name="fromDescription">fromDescription.</param>
        /// <param name="transferDescription">transferDescription.</param>
        /// <param name="period">period.</param>
        /// <param name="amount">amount.</param>
        /// <param name="effectiveDate">effectiveDate.</param>
        /// <param name="expiryDate">expiryDate.</param>
        /// <param name="chargeAmount">chargeAmount.</param>
        /// <param name="status">status.</param>
        /// <param name="lastExecutionDate">lastExecutionDate.</param>
        /// <param name="nextExecutionDate">nextExecutionDate.</param>
        /// <param name="isoCode">isoCode.</param>
        /// <param name="fromAccountNo">fromAccountNo.</param>
        /// <param name="toAccountNo">toAccountNo.</param>
        /// <param name="fromName">fromName.</param>
        /// <param name="toName">toName.</param>
        /// <param name="fromBranch">fromBranch.</param>
        /// <param name="toBranch">toBranch.</param>
        public StandingordersinquiryResponseResultSetRowsInner(string rimNo = default(string), string type = default(string), string standingOrderNumber = default(string), string description = default(string), string fromDescription = default(string), string transferDescription = default(string), string period = default(string), string amount = default(string), string effectiveDate = default(string), string expiryDate = default(string), string chargeAmount = default(string), string status = default(string), string lastExecutionDate = default(string), string nextExecutionDate = default(string), string isoCode = default(string), string fromAccountNo = default(string), string toAccountNo = default(string), string fromName = default(string), string toName = default(string), string fromBranch = default(string), string toBranch = default(string))
        {
            this.RimNo = rimNo;
            this.Type = type;
            this.StandingOrderNumber = standingOrderNumber;
            this.Description = description;
            this.FromDescription = fromDescription;
            this.TransferDescription = transferDescription;
            this.Period = period;
            this.Amount = amount;
            this.EffectiveDate = effectiveDate;
            this.ExpiryDate = expiryDate;
            this.ChargeAmount = chargeAmount;
            this.Status = status;
            this.LastExecutionDate = lastExecutionDate;
            this.NextExecutionDate = nextExecutionDate;
            this.IsoCode = isoCode;
            this.FromAccountNo = fromAccountNo;
            this.ToAccountNo = toAccountNo;
            this.FromName = fromName;
            this.ToName = toName;
            this.FromBranch = fromBranch;
            this.ToBranch = toBranch;
        }

        /// <summary>
        /// Gets or Sets RimNo
        /// </summary>
        [DataMember(Name = "RimNo", EmitDefaultValue = false)]
        public string RimNo { get; set; }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name = "Type", EmitDefaultValue = false)]
        public string Type { get; set; }

        /// <summary>
        /// Gets or Sets StandingOrderNumber
        /// </summary>
        [DataMember(Name = "StandingOrder_Number", EmitDefaultValue = false)]
        public string StandingOrderNumber { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name = "Description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets FromDescription
        /// </summary>
        [DataMember(Name = "From_Description", EmitDefaultValue = false)]
        public string FromDescription { get; set; }

        /// <summary>
        /// Gets or Sets TransferDescription
        /// </summary>
        [DataMember(Name = "Transfer_Description", EmitDefaultValue = false)]
        public string TransferDescription { get; set; }

        /// <summary>
        /// Gets or Sets Period
        /// </summary>
        [DataMember(Name = "Period", EmitDefaultValue = false)]
        public string Period { get; set; }

        /// <summary>
        /// Gets or Sets Amount
        /// </summary>
        [DataMember(Name = "Amount", EmitDefaultValue = false)]
        public string Amount { get; set; }

        /// <summary>
        /// Gets or Sets EffectiveDate
        /// </summary>
        [DataMember(Name = "EffectiveDate", EmitDefaultValue = false)]
        public string EffectiveDate { get; set; }

        /// <summary>
        /// Gets or Sets ExpiryDate
        /// </summary>
        [DataMember(Name = "ExpiryDate", EmitDefaultValue = false)]
        public string ExpiryDate { get; set; }

        /// <summary>
        /// Gets or Sets ChargeAmount
        /// </summary>
        [DataMember(Name = "Charge_Amount", EmitDefaultValue = false)]
        public string ChargeAmount { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "Status", EmitDefaultValue = false)]
        public string Status { get; set; }

        /// <summary>
        /// Gets or Sets LastExecutionDate
        /// </summary>
        [DataMember(Name = "Last_Execution_Date", EmitDefaultValue = false)]
        public string LastExecutionDate { get; set; }

        /// <summary>
        /// Gets or Sets NextExecutionDate
        /// </summary>
        [DataMember(Name = "Next_Execution_Date", EmitDefaultValue = false)]
        public string NextExecutionDate { get; set; }

        /// <summary>
        /// Gets or Sets IsoCode
        /// </summary>
        [DataMember(Name = "iso_code", EmitDefaultValue = false)]
        public string IsoCode { get; set; }

        /// <summary>
        /// Gets or Sets FromAccountNo
        /// </summary>
        [DataMember(Name = "From_AccountNo", EmitDefaultValue = false)]
        public string FromAccountNo { get; set; }

        /// <summary>
        /// Gets or Sets ToAccountNo
        /// </summary>
        [DataMember(Name = "To_AccountNo", EmitDefaultValue = false)]
        public string ToAccountNo { get; set; }

        /// <summary>
        /// Gets or Sets FromName
        /// </summary>
        [DataMember(Name = "From_Name", EmitDefaultValue = false)]
        public string FromName { get; set; }

        /// <summary>
        /// Gets or Sets ToName
        /// </summary>
        [DataMember(Name = "To_Name", EmitDefaultValue = false)]
        public string ToName { get; set; }

        /// <summary>
        /// Gets or Sets FromBranch
        /// </summary>
        [DataMember(Name = "From_Branch", EmitDefaultValue = false)]
        public string FromBranch { get; set; }

        /// <summary>
        /// Gets or Sets ToBranch
        /// </summary>
        [DataMember(Name = "To_Branch", EmitDefaultValue = false)]
        public string ToBranch { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class StandingordersinquiryResponseResultSetRowsInner {\n");
            sb.Append("  RimNo: ").Append(RimNo).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  StandingOrderNumber: ").Append(StandingOrderNumber).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  FromDescription: ").Append(FromDescription).Append("\n");
            sb.Append("  TransferDescription: ").Append(TransferDescription).Append("\n");
            sb.Append("  Period: ").Append(Period).Append("\n");
            sb.Append("  Amount: ").Append(Amount).Append("\n");
            sb.Append("  EffectiveDate: ").Append(EffectiveDate).Append("\n");
            sb.Append("  ExpiryDate: ").Append(ExpiryDate).Append("\n");
            sb.Append("  ChargeAmount: ").Append(ChargeAmount).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  LastExecutionDate: ").Append(LastExecutionDate).Append("\n");
            sb.Append("  NextExecutionDate: ").Append(NextExecutionDate).Append("\n");
            sb.Append("  IsoCode: ").Append(IsoCode).Append("\n");
            sb.Append("  FromAccountNo: ").Append(FromAccountNo).Append("\n");
            sb.Append("  ToAccountNo: ").Append(ToAccountNo).Append("\n");
            sb.Append("  FromName: ").Append(FromName).Append("\n");
            sb.Append("  ToName: ").Append(ToName).Append("\n");
            sb.Append("  FromBranch: ").Append(FromBranch).Append("\n");
            sb.Append("  ToBranch: ").Append(ToBranch).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
