/*
 * exp-openfinance-api
 *
 * Ex  perience API for OpenFinance
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Cbd.MobileExperienceApi.Client.FileParameter;
using OpenAPIDateConverter = Cbd.MobileExperienceApi.Client.OpenAPIDateConverter;

namespace Cbd.MobileExperienceApi.Model
{
    /// <summary>
    /// GetRimInfoResponseResultRowsInner
    /// </summary>
    [DataContract(Name = "GetRimInfo_response_result_Rows_inner")]
    public partial class GetRimInfoResponseResultRowsInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetRimInfoResponseResultRowsInner" /> class.
        /// </summary>
        /// <param name="rimNo">rimNo.</param>
        /// <param name="rimType1">rimType1.</param>
        /// <param name="segmentId">segmentId.</param>
        /// <param name="emplAddr">emplAddr.</param>
        /// <param name="iDDocumentData">iDDocumentData.</param>
        /// <param name="resi">resi.</param>
        /// <param name="contactPhone">contactPhone.</param>
        /// <param name="addr2">addr2.</param>
        /// <param name="rimClass">rimClass.</param>
        /// <param name="employer">employer.</param>
        /// <param name="email1">email1.</param>
        /// <param name="zip">zip.</param>
        /// <param name="ccode">ccode.</param>
        /// <param name="email2">email2.</param>
        /// <param name="rimName">rimName.</param>
        /// <param name="gender">gender.</param>
        /// <param name="branchName">branchName.</param>
        /// <param name="nationalIDExpDate">nationalIDExpDate.</param>
        /// <param name="iDIssueDate">iDIssueDate.</param>
        /// <param name="phone2">phone2.</param>
        /// <param name="iDDocumentCountryIsoCode">iDDocumentCountryIsoCode.</param>
        /// <param name="bank">bank.</param>
        /// <param name="addr1">addr1.</param>
        /// <param name="fatca">fatca.</param>
        /// <param name="firstName">firstName.</param>
        /// <param name="rSM1">rSM1.</param>
        /// <param name="empljoinDate">empljoinDate.</param>
        /// <param name="eIDStatus">eIDStatus.</param>
        /// <param name="phone1">phone1.</param>
        /// <param name="nationalID">nationalID.</param>
        /// <param name="mobile">mobile.</param>
        /// <param name="eIDDaysCount">eIDDaysCount.</param>
        /// <param name="rimStatus">rimStatus.</param>
        /// <param name="iDExpires">iDExpires.</param>
        /// <param name="branchNo">branchNo.</param>
        /// <param name="emplPhone">emplPhone.</param>
        /// <param name="iDDocumentType">iDDocumentType.</param>
        /// <param name="city">city.</param>
        /// <param name="rSM2">rSM2.</param>
        /// <param name="iDExpDate">iDExpDate.</param>
        /// <param name="countryOfBirth">countryOfBirth.</param>
        /// <param name="nationality">nationality.</param>
        /// <param name="rimType">rimType.</param>
        /// <param name="lastName">lastName.</param>
        /// <param name="segment">segment.</param>
        /// <param name="dateOfBirth">dateOfBirth.</param>
        /// <param name="rIMCLASSDESC">rIMCLASSDESC.</param>
        /// <param name="restrctNat">restrctNat.</param>
        /// <param name="createDT">createDT.</param>
        /// <param name="kYCStatus">kYCStatus.</param>
        /// <param name="riskCode">riskCode.</param>
        /// <param name="campCode">campCode.</param>
        /// <param name="campName">campName.</param>
        /// <param name="pKGId">pKGId.</param>
        /// <param name="pKGName">pKGName.</param>
        /// <param name="nxtReviewDate">nxtReviewDate.</param>
        /// <param name="riskCodeDesc">riskCodeDesc.</param>
        /// <param name="riskReason">riskReason.</param>
        public GetRimInfoResponseResultRowsInner(string rimNo = default(string), string rimType1 = default(string), string segmentId = default(string), string emplAddr = default(string), string iDDocumentData = default(string), string resi = default(string), string contactPhone = default(string), string addr2 = default(string), string rimClass = default(string), string employer = default(string), string email1 = default(string), string zip = default(string), string ccode = default(string), string email2 = default(string), string rimName = default(string), string gender = default(string), string branchName = default(string), string nationalIDExpDate = default(string), string iDIssueDate = default(string), string phone2 = default(string), string iDDocumentCountryIsoCode = default(string), string bank = default(string), string addr1 = default(string), string fatca = default(string), string firstName = default(string), string rSM1 = default(string), string empljoinDate = default(string), string eIDStatus = default(string), string phone1 = default(string), string nationalID = default(string), string mobile = default(string), decimal eIDDaysCount = default(decimal), string rimStatus = default(string), string iDExpires = default(string), string branchNo = default(string), string emplPhone = default(string), string iDDocumentType = default(string), string city = default(string), string rSM2 = default(string), string iDExpDate = default(string), string countryOfBirth = default(string), string nationality = default(string), string rimType = default(string), string lastName = default(string), string segment = default(string), string dateOfBirth = default(string), string rIMCLASSDESC = default(string), string restrctNat = default(string), string createDT = default(string), string kYCStatus = default(string), string riskCode = default(string), string campCode = default(string), string campName = default(string), string pKGId = default(string), string pKGName = default(string), string nxtReviewDate = default(string), string riskCodeDesc = default(string), string riskReason = default(string))
        {
            this.RimNo = rimNo;
            this.RimType1 = rimType1;
            this.SegmentId = segmentId;
            this.EmplAddr = emplAddr;
            this.IDDocumentData = iDDocumentData;
            this.Resi = resi;
            this.ContactPhone = contactPhone;
            this.Addr2 = addr2;
            this.RimClass = rimClass;
            this.Employer = employer;
            this.Email1 = email1;
            this.Zip = zip;
            this.Ccode = ccode;
            this.Email2 = email2;
            this.RimName = rimName;
            this.Gender = gender;
            this.BranchName = branchName;
            this.NationalIDExpDate = nationalIDExpDate;
            this.IDIssueDate = iDIssueDate;
            this.Phone2 = phone2;
            this.IDDocumentCountryIsoCode = iDDocumentCountryIsoCode;
            this.Bank = bank;
            this.Addr1 = addr1;
            this.Fatca = fatca;
            this.FirstName = firstName;
            this.RSM1 = rSM1;
            this.EmpljoinDate = empljoinDate;
            this.EIDStatus = eIDStatus;
            this.Phone1 = phone1;
            this.NationalID = nationalID;
            this.Mobile = mobile;
            this.EIDDaysCount = eIDDaysCount;
            this.RimStatus = rimStatus;
            this.IDExpires = iDExpires;
            this.BranchNo = branchNo;
            this.EmplPhone = emplPhone;
            this.IDDocumentType = iDDocumentType;
            this.City = city;
            this.RSM2 = rSM2;
            this.IDExpDate = iDExpDate;
            this.CountryOfBirth = countryOfBirth;
            this.Nationality = nationality;
            this.RimType = rimType;
            this.LastName = lastName;
            this.Segment = segment;
            this.DateOfBirth = dateOfBirth;
            this.RIM_CLASS_DESC = rIMCLASSDESC;
            this.RestrctNat = restrctNat;
            this.CreateDT = createDT;
            this.KYCStatus = kYCStatus;
            this.RiskCode = riskCode;
            this.CampCode = campCode;
            this.CampName = campName;
            this.PKGId = pKGId;
            this.PKGName = pKGName;
            this.NxtReviewDate = nxtReviewDate;
            this.RiskCodeDesc = riskCodeDesc;
            this.RiskReason = riskReason;
        }

        /// <summary>
        /// Gets or Sets RimNo
        /// </summary>
        [DataMember(Name = "RimNo?", EmitDefaultValue = false)]
        public string RimNo { get; set; }

        /// <summary>
        /// Gets or Sets RimType1
        /// </summary>
        [DataMember(Name = "RimType1?", EmitDefaultValue = false)]
        public string RimType1 { get; set; }

        /// <summary>
        /// Gets or Sets SegmentId
        /// </summary>
        [DataMember(Name = "SegmentId?", EmitDefaultValue = false)]
        public string SegmentId { get; set; }

        /// <summary>
        /// Gets or Sets EmplAddr
        /// </summary>
        [DataMember(Name = "EmplAddr?", EmitDefaultValue = false)]
        public string EmplAddr { get; set; }

        /// <summary>
        /// Gets or Sets IDDocumentData
        /// </summary>
        [DataMember(Name = "IDDocumentData?", EmitDefaultValue = false)]
        public string IDDocumentData { get; set; }

        /// <summary>
        /// Gets or Sets Resi
        /// </summary>
        [DataMember(Name = "Resi?", EmitDefaultValue = false)]
        public string Resi { get; set; }

        /// <summary>
        /// Gets or Sets ContactPhone
        /// </summary>
        [DataMember(Name = "ContactPhone?", EmitDefaultValue = false)]
        public string ContactPhone { get; set; }

        /// <summary>
        /// Gets or Sets Addr2
        /// </summary>
        [DataMember(Name = "Addr2?", EmitDefaultValue = false)]
        public string Addr2 { get; set; }

        /// <summary>
        /// Gets or Sets RimClass
        /// </summary>
        [DataMember(Name = "RimClass?", EmitDefaultValue = false)]
        public string RimClass { get; set; }

        /// <summary>
        /// Gets or Sets Employer
        /// </summary>
        [DataMember(Name = "Employer?", EmitDefaultValue = false)]
        public string Employer { get; set; }

        /// <summary>
        /// Gets or Sets Email1
        /// </summary>
        [DataMember(Name = "Email1?", EmitDefaultValue = false)]
        public string Email1 { get; set; }

        /// <summary>
        /// Gets or Sets Zip
        /// </summary>
        [DataMember(Name = "Zip?", EmitDefaultValue = false)]
        public string Zip { get; set; }

        /// <summary>
        /// Gets or Sets Ccode
        /// </summary>
        [DataMember(Name = "Ccode?", EmitDefaultValue = false)]
        public string Ccode { get; set; }

        /// <summary>
        /// Gets or Sets Email2
        /// </summary>
        [DataMember(Name = "Email2?", EmitDefaultValue = false)]
        public string Email2 { get; set; }

        /// <summary>
        /// Gets or Sets RimName
        /// </summary>
        [DataMember(Name = "RimName?", EmitDefaultValue = false)]
        public string RimName { get; set; }

        /// <summary>
        /// Gets or Sets Gender
        /// </summary>
        [DataMember(Name = "Gender?", EmitDefaultValue = false)]
        public string Gender { get; set; }

        /// <summary>
        /// Gets or Sets BranchName
        /// </summary>
        [DataMember(Name = "BranchName?", EmitDefaultValue = false)]
        public string BranchName { get; set; }

        /// <summary>
        /// Gets or Sets NationalIDExpDate
        /// </summary>
        [DataMember(Name = "NationalIDExpDate?", EmitDefaultValue = false)]
        public string NationalIDExpDate { get; set; }

        /// <summary>
        /// Gets or Sets IDIssueDate
        /// </summary>
        [DataMember(Name = "IDIssueDate?", EmitDefaultValue = false)]
        public string IDIssueDate { get; set; }

        /// <summary>
        /// Gets or Sets Phone2
        /// </summary>
        [DataMember(Name = "Phone2?", EmitDefaultValue = false)]
        public string Phone2 { get; set; }

        /// <summary>
        /// Gets or Sets IDDocumentCountryIsoCode
        /// </summary>
        [DataMember(Name = "IDDocumentCountryIsoCode?", EmitDefaultValue = false)]
        public string IDDocumentCountryIsoCode { get; set; }

        /// <summary>
        /// Gets or Sets Bank
        /// </summary>
        [DataMember(Name = "Bank?", EmitDefaultValue = false)]
        public string Bank { get; set; }

        /// <summary>
        /// Gets or Sets Addr1
        /// </summary>
        [DataMember(Name = "Addr1?", EmitDefaultValue = false)]
        public string Addr1 { get; set; }

        /// <summary>
        /// Gets or Sets Fatca
        /// </summary>
        [DataMember(Name = "Fatca?", EmitDefaultValue = false)]
        public string Fatca { get; set; }

        /// <summary>
        /// Gets or Sets FirstName
        /// </summary>
        [DataMember(Name = "FirstName?", EmitDefaultValue = false)]
        public string FirstName { get; set; }

        /// <summary>
        /// Gets or Sets RSM1
        /// </summary>
        [DataMember(Name = "RSM1?", EmitDefaultValue = false)]
        public string RSM1 { get; set; }

        /// <summary>
        /// Gets or Sets EmpljoinDate
        /// </summary>
        [DataMember(Name = "EmpljoinDate?", EmitDefaultValue = false)]
        public string EmpljoinDate { get; set; }

        /// <summary>
        /// Gets or Sets EIDStatus
        /// </summary>
        [DataMember(Name = "EIDStatus?", EmitDefaultValue = false)]
        public string EIDStatus { get; set; }

        /// <summary>
        /// Gets or Sets Phone1
        /// </summary>
        [DataMember(Name = "Phone1?", EmitDefaultValue = false)]
        public string Phone1 { get; set; }

        /// <summary>
        /// Gets or Sets NationalID
        /// </summary>
        [DataMember(Name = "NationalID?", EmitDefaultValue = false)]
        public string NationalID { get; set; }

        /// <summary>
        /// Gets or Sets Mobile
        /// </summary>
        [DataMember(Name = "Mobile?", EmitDefaultValue = false)]
        public string Mobile { get; set; }

        /// <summary>
        /// Gets or Sets EIDDaysCount
        /// </summary>
        [DataMember(Name = "EIDDaysCount?", EmitDefaultValue = false)]
        public decimal EIDDaysCount { get; set; }

        /// <summary>
        /// Gets or Sets RimStatus
        /// </summary>
        [DataMember(Name = "RimStatus?", EmitDefaultValue = false)]
        public string RimStatus { get; set; }

        /// <summary>
        /// Gets or Sets IDExpires
        /// </summary>
        [DataMember(Name = "IDExpires?", EmitDefaultValue = false)]
        public string IDExpires { get; set; }

        /// <summary>
        /// Gets or Sets BranchNo
        /// </summary>
        [DataMember(Name = "BranchNo?", EmitDefaultValue = false)]
        public string BranchNo { get; set; }

        /// <summary>
        /// Gets or Sets EmplPhone
        /// </summary>
        [DataMember(Name = "EmplPhone?", EmitDefaultValue = false)]
        public string EmplPhone { get; set; }

        /// <summary>
        /// Gets or Sets IDDocumentType
        /// </summary>
        [DataMember(Name = "IDDocumentType?", EmitDefaultValue = false)]
        public string IDDocumentType { get; set; }

        /// <summary>
        /// Gets or Sets City
        /// </summary>
        [DataMember(Name = "City?", EmitDefaultValue = false)]
        public string City { get; set; }

        /// <summary>
        /// Gets or Sets RSM2
        /// </summary>
        [DataMember(Name = "RSM2?", EmitDefaultValue = false)]
        public string RSM2 { get; set; }

        /// <summary>
        /// Gets or Sets IDExpDate
        /// </summary>
        [DataMember(Name = "IDExpDate?", EmitDefaultValue = false)]
        public string IDExpDate { get; set; }

        /// <summary>
        /// Gets or Sets CountryOfBirth
        /// </summary>
        [DataMember(Name = "CountryOfBirth?", EmitDefaultValue = false)]
        public string CountryOfBirth { get; set; }

        /// <summary>
        /// Gets or Sets Nationality
        /// </summary>
        [DataMember(Name = "Nationality?", EmitDefaultValue = false)]
        public string Nationality { get; set; }

        /// <summary>
        /// Gets or Sets RimType
        /// </summary>
        [DataMember(Name = "RimType?", EmitDefaultValue = false)]
        public string RimType { get; set; }

        /// <summary>
        /// Gets or Sets LastName
        /// </summary>
        [DataMember(Name = "LastName?", EmitDefaultValue = false)]
        public string LastName { get; set; }

        /// <summary>
        /// Gets or Sets Segment
        /// </summary>
        [DataMember(Name = "Segment?", EmitDefaultValue = false)]
        public string Segment { get; set; }

        /// <summary>
        /// Gets or Sets DateOfBirth
        /// </summary>
        [DataMember(Name = "DateOfBirth?", EmitDefaultValue = false)]
        public string DateOfBirth { get; set; }

        /// <summary>
        /// Gets or Sets RIM_CLASS_DESC
        /// </summary>
        [DataMember(Name = "RIM_CLASS_DESC?", EmitDefaultValue = false)]
        public string RIM_CLASS_DESC { get; set; }

        /// <summary>
        /// Gets or Sets RestrctNat
        /// </summary>
        [DataMember(Name = "RestrctNat?", EmitDefaultValue = false)]
        public string RestrctNat { get; set; }

        /// <summary>
        /// Gets or Sets CreateDT
        /// </summary>
        [DataMember(Name = "CreateDT?", EmitDefaultValue = false)]
        public string CreateDT { get; set; }

        /// <summary>
        /// Gets or Sets KYCStatus
        /// </summary>
        [DataMember(Name = "KYCStatus?", EmitDefaultValue = false)]
        public string KYCStatus { get; set; }

        /// <summary>
        /// Gets or Sets RiskCode
        /// </summary>
        [DataMember(Name = "RiskCode?", EmitDefaultValue = false)]
        public string RiskCode { get; set; }

        /// <summary>
        /// Gets or Sets CampCode
        /// </summary>
        [DataMember(Name = "CampCode?", EmitDefaultValue = false)]
        public string CampCode { get; set; }

        /// <summary>
        /// Gets or Sets CampName
        /// </summary>
        [DataMember(Name = "CampName?", EmitDefaultValue = false)]
        public string CampName { get; set; }

        /// <summary>
        /// Gets or Sets PKGId
        /// </summary>
        [DataMember(Name = "PKGId?", EmitDefaultValue = false)]
        public string PKGId { get; set; }

        /// <summary>
        /// Gets or Sets PKGName
        /// </summary>
        [DataMember(Name = "PKGName?", EmitDefaultValue = false)]
        public string PKGName { get; set; }

        /// <summary>
        /// Gets or Sets NxtReviewDate
        /// </summary>
        [DataMember(Name = "NxtReviewDate?", EmitDefaultValue = false)]
        public string NxtReviewDate { get; set; }

        /// <summary>
        /// Gets or Sets RiskCodeDesc
        /// </summary>
        [DataMember(Name = "RiskCodeDesc?", EmitDefaultValue = false)]
        public string RiskCodeDesc { get; set; }

        /// <summary>
        /// Gets or Sets RiskReason
        /// </summary>
        [DataMember(Name = "RiskReason?", EmitDefaultValue = false)]
        public string RiskReason { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetRimInfoResponseResultRowsInner {\n");
            sb.Append("  RimNo: ").Append(RimNo).Append("\n");
            sb.Append("  RimType1: ").Append(RimType1).Append("\n");
            sb.Append("  SegmentId: ").Append(SegmentId).Append("\n");
            sb.Append("  EmplAddr: ").Append(EmplAddr).Append("\n");
            sb.Append("  IDDocumentData: ").Append(IDDocumentData).Append("\n");
            sb.Append("  Resi: ").Append(Resi).Append("\n");
            sb.Append("  ContactPhone: ").Append(ContactPhone).Append("\n");
            sb.Append("  Addr2: ").Append(Addr2).Append("\n");
            sb.Append("  RimClass: ").Append(RimClass).Append("\n");
            sb.Append("  Employer: ").Append(Employer).Append("\n");
            sb.Append("  Email1: ").Append(Email1).Append("\n");
            sb.Append("  Zip: ").Append(Zip).Append("\n");
            sb.Append("  Ccode: ").Append(Ccode).Append("\n");
            sb.Append("  Email2: ").Append(Email2).Append("\n");
            sb.Append("  RimName: ").Append(RimName).Append("\n");
            sb.Append("  Gender: ").Append(Gender).Append("\n");
            sb.Append("  BranchName: ").Append(BranchName).Append("\n");
            sb.Append("  NationalIDExpDate: ").Append(NationalIDExpDate).Append("\n");
            sb.Append("  IDIssueDate: ").Append(IDIssueDate).Append("\n");
            sb.Append("  Phone2: ").Append(Phone2).Append("\n");
            sb.Append("  IDDocumentCountryIsoCode: ").Append(IDDocumentCountryIsoCode).Append("\n");
            sb.Append("  Bank: ").Append(Bank).Append("\n");
            sb.Append("  Addr1: ").Append(Addr1).Append("\n");
            sb.Append("  Fatca: ").Append(Fatca).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  RSM1: ").Append(RSM1).Append("\n");
            sb.Append("  EmpljoinDate: ").Append(EmpljoinDate).Append("\n");
            sb.Append("  EIDStatus: ").Append(EIDStatus).Append("\n");
            sb.Append("  Phone1: ").Append(Phone1).Append("\n");
            sb.Append("  NationalID: ").Append(NationalID).Append("\n");
            sb.Append("  Mobile: ").Append(Mobile).Append("\n");
            sb.Append("  EIDDaysCount: ").Append(EIDDaysCount).Append("\n");
            sb.Append("  RimStatus: ").Append(RimStatus).Append("\n");
            sb.Append("  IDExpires: ").Append(IDExpires).Append("\n");
            sb.Append("  BranchNo: ").Append(BranchNo).Append("\n");
            sb.Append("  EmplPhone: ").Append(EmplPhone).Append("\n");
            sb.Append("  IDDocumentType: ").Append(IDDocumentType).Append("\n");
            sb.Append("  City: ").Append(City).Append("\n");
            sb.Append("  RSM2: ").Append(RSM2).Append("\n");
            sb.Append("  IDExpDate: ").Append(IDExpDate).Append("\n");
            sb.Append("  CountryOfBirth: ").Append(CountryOfBirth).Append("\n");
            sb.Append("  Nationality: ").Append(Nationality).Append("\n");
            sb.Append("  RimType: ").Append(RimType).Append("\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  Segment: ").Append(Segment).Append("\n");
            sb.Append("  DateOfBirth: ").Append(DateOfBirth).Append("\n");
            sb.Append("  RIM_CLASS_DESC: ").Append(RIM_CLASS_DESC).Append("\n");
            sb.Append("  RestrctNat: ").Append(RestrctNat).Append("\n");
            sb.Append("  CreateDT: ").Append(CreateDT).Append("\n");
            sb.Append("  KYCStatus: ").Append(KYCStatus).Append("\n");
            sb.Append("  RiskCode: ").Append(RiskCode).Append("\n");
            sb.Append("  CampCode: ").Append(CampCode).Append("\n");
            sb.Append("  CampName: ").Append(CampName).Append("\n");
            sb.Append("  PKGId: ").Append(PKGId).Append("\n");
            sb.Append("  PKGName: ").Append(PKGName).Append("\n");
            sb.Append("  NxtReviewDate: ").Append(NxtReviewDate).Append("\n");
            sb.Append("  RiskCodeDesc: ").Append(RiskCodeDesc).Append("\n");
            sb.Append("  RiskReason: ").Append(RiskReason).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
