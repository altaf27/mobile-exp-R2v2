/*
 * exp-openfinance-api
 *
 * Ex  perience API for OpenFinance
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Cbd.MobileExperienceApi.Client.FileParameter;
using OpenAPIDateConverter = Cbd.MobileExperienceApi.Client.OpenAPIDateConverter;

namespace Cbd.MobileExperienceApi.Model
{
    /// <summary>
    /// AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctStmtHdr
    /// </summary>
    [DataContract(Name = "AcctAcctTrnInq_response_AcctAcctTrnInqRs_AcctStmtHdr")]
    public partial class AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctStmtHdr : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctStmtHdr" /> class.
        /// </summary>
        /// <param name="curCode">curCode.</param>
        /// <param name="acctBal">acctBal.</param>
        /// <param name="acctStatus">acctStatus.</param>
        /// <param name="acctTitle">acctTitle.</param>
        public AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctStmtHdr(AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctStmtHdrCurCode curCode = default(AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctStmtHdrCurCode), AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctStmtHdrAcctBal acctBal = default(AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctStmtHdrAcctBal), AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctStmtHdrAcctStatus acctStatus = default(AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctStmtHdrAcctStatus), string acctTitle = default(string))
        {
            this.CurCode = curCode;
            this.AcctBal = acctBal;
            this.AcctStatus = acctStatus;
            this.AcctTitle = acctTitle;
        }

        /// <summary>
        /// Gets or Sets CurCode
        /// </summary>
        [DataMember(Name = "CurCode", EmitDefaultValue = false)]
        public AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctStmtHdrCurCode CurCode { get; set; }

        /// <summary>
        /// Gets or Sets AcctBal
        /// </summary>
        [DataMember(Name = "AcctBal", EmitDefaultValue = false)]
        public AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctStmtHdrAcctBal AcctBal { get; set; }

        /// <summary>
        /// Gets or Sets AcctStatus
        /// </summary>
        [DataMember(Name = "AcctStatus", EmitDefaultValue = false)]
        public AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctStmtHdrAcctStatus AcctStatus { get; set; }

        /// <summary>
        /// Gets or Sets AcctTitle
        /// </summary>
        [DataMember(Name = "AcctTitle", EmitDefaultValue = false)]
        public string AcctTitle { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctStmtHdr {\n");
            sb.Append("  CurCode: ").Append(CurCode).Append("\n");
            sb.Append("  AcctBal: ").Append(AcctBal).Append("\n");
            sb.Append("  AcctStatus: ").Append(AcctStatus).Append("\n");
            sb.Append("  AcctTitle: ").Append(AcctTitle).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
