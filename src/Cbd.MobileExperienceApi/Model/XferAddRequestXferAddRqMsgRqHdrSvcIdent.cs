/*
 * exp-openfinance-api
 *
 * Ex  perience API for OpenFinance
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Cbd.MobileExperienceApi.Client.FileParameter;
using OpenAPIDateConverter = Cbd.MobileExperienceApi.Client.OpenAPIDateConverter;

namespace Cbd.MobileExperienceApi.Model
{
    /// <summary>
    /// XferAddRequestXferAddRqMsgRqHdrSvcIdent
    /// </summary>
    [DataContract(Name = "XferAdd_request_XferAddRq_MsgRqHdr_SvcIdent")]
    public partial class XferAddRequestXferAddRqMsgRqHdrSvcIdent : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="XferAddRequestXferAddRqMsgRqHdrSvcIdent" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected XferAddRequestXferAddRqMsgRqHdrSvcIdent() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="XferAddRequestXferAddRqMsgRqHdrSvcIdent" /> class.
        /// </summary>
        /// <param name="svcProviderName">svcProviderName (required).</param>
        /// <param name="svcProviderId">svcProviderId (required).</param>
        /// <param name="svcName">svcName.</param>
        /// <param name="svcId">svcId (required).</param>
        /// <param name="originatorID">originatorID (default to &quot;&quot;).</param>
        public XferAddRequestXferAddRqMsgRqHdrSvcIdent(string svcProviderName = default(string), string svcProviderId = default(string), string svcName = default(string), string svcId = default(string), string originatorID = @"")
        {
            // to ensure "svcProviderName" is required (not null)
            if (svcProviderName == null)
            {
                throw new ArgumentNullException("svcProviderName is a required property for XferAddRequestXferAddRqMsgRqHdrSvcIdent and cannot be null");
            }
            this.SvcProviderName = svcProviderName;
            // to ensure "svcProviderId" is required (not null)
            if (svcProviderId == null)
            {
                throw new ArgumentNullException("svcProviderId is a required property for XferAddRequestXferAddRqMsgRqHdrSvcIdent and cannot be null");
            }
            this.SvcProviderId = svcProviderId;
            // to ensure "svcId" is required (not null)
            if (svcId == null)
            {
                throw new ArgumentNullException("svcId is a required property for XferAddRequestXferAddRqMsgRqHdrSvcIdent and cannot be null");
            }
            this.SvcId = svcId;
            this.SvcName = svcName;
            // use default value if no "originatorID" provided
            this.OriginatorID = originatorID ?? @"";
        }

        /// <summary>
        /// Gets or Sets SvcProviderName
        /// </summary>
        [DataMember(Name = "SvcProviderName", IsRequired = true, EmitDefaultValue = true)]
        public string SvcProviderName { get; set; }

        /// <summary>
        /// Gets or Sets SvcProviderId
        /// </summary>
        [DataMember(Name = "SvcProviderId", IsRequired = true, EmitDefaultValue = true)]
        public string SvcProviderId { get; set; }

        /// <summary>
        /// Gets or Sets SvcName
        /// </summary>
        [DataMember(Name = "SvcName", EmitDefaultValue = false)]
        public string SvcName { get; set; }

        /// <summary>
        /// Gets or Sets SvcId
        /// </summary>
        [DataMember(Name = "SvcId", IsRequired = true, EmitDefaultValue = true)]
        public string SvcId { get; set; }

        /// <summary>
        /// Gets or Sets OriginatorID
        /// </summary>
        [DataMember(Name = "OriginatorID", EmitDefaultValue = false)]
        public string OriginatorID { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class XferAddRequestXferAddRqMsgRqHdrSvcIdent {\n");
            sb.Append("  SvcProviderName: ").Append(SvcProviderName).Append("\n");
            sb.Append("  SvcProviderId: ").Append(SvcProviderId).Append("\n");
            sb.Append("  SvcName: ").Append(SvcName).Append("\n");
            sb.Append("  SvcId: ").Append(SvcId).Append("\n");
            sb.Append("  OriginatorID: ").Append(OriginatorID).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // SvcProviderName (string) maxLength
            if (this.SvcProviderName != null && this.SvcProviderName.Length > 1024)
            {
                yield return new ValidationResult("Invalid value for SvcProviderName, length must be less than 1024.", new [] { "SvcProviderName" });
            }

            // SvcProviderId (string) maxLength
            if (this.SvcProviderId != null && this.SvcProviderId.Length > 36)
            {
                yield return new ValidationResult("Invalid value for SvcProviderId, length must be less than 36.", new [] { "SvcProviderId" });
            }

            // SvcName (string) maxLength
            if (this.SvcName != null && this.SvcName.Length > 32)
            {
                yield return new ValidationResult("Invalid value for SvcName, length must be less than 32.", new [] { "SvcName" });
            }

            // SvcId (string) maxLength
            if (this.SvcId != null && this.SvcId.Length > 36)
            {
                yield return new ValidationResult("Invalid value for SvcId, length must be less than 36.", new [] { "SvcId" });
            }

            yield break;
        }
    }

}
