/*
 * exp-openfinance-api
 *
 * Ex  perience API for OpenFinance
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Cbd.MobileExperienceApi.Client.FileParameter;
using OpenAPIDateConverter = Cbd.MobileExperienceApi.Client.OpenAPIDateConverter;

namespace Cbd.MobileExperienceApi.Model
{
    /// <summary>
    /// XferAddRequestXferAddRqMsgRqHdrFeeRqHdrDebitRefDebitInfoCompositeCurAmtCurAmt
    /// </summary>
    [DataContract(Name = "XferAdd_request_XferAddRq_MsgRqHdr_FeeRqHdr_DebitRef_DebitInfo_CompositeCurAmt_CurAmt")]
    public partial class XferAddRequestXferAddRqMsgRqHdrFeeRqHdrDebitRefDebitInfoCompositeCurAmtCurAmt : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="XferAddRequestXferAddRqMsgRqHdrFeeRqHdrDebitRefDebitInfoCompositeCurAmtCurAmt" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected XferAddRequestXferAddRqMsgRqHdrFeeRqHdrDebitRefDebitInfoCompositeCurAmtCurAmt() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="XferAddRequestXferAddRqMsgRqHdrFeeRqHdrDebitRefDebitInfoCompositeCurAmtCurAmt" /> class.
        /// </summary>
        /// <param name="amt">amt (required).</param>
        /// <param name="acctType">acctType.</param>
        /// <param name="curCode">curCode (required).</param>
        public XferAddRequestXferAddRqMsgRqHdrFeeRqHdrDebitRefDebitInfoCompositeCurAmtCurAmt(decimal amt = default(decimal), string acctType = default(string), XferAddRequestXferAddRqMsgRqHdrFeeRqHdrDebitRefDebitInfoCompositeCurAmtCurAmtCurCode curCode = default(XferAddRequestXferAddRqMsgRqHdrFeeRqHdrDebitRefDebitInfoCompositeCurAmtCurAmtCurCode))
        {
            this.Amt = amt;
            // to ensure "curCode" is required (not null)
            if (curCode == null)
            {
                throw new ArgumentNullException("curCode is a required property for XferAddRequestXferAddRqMsgRqHdrFeeRqHdrDebitRefDebitInfoCompositeCurAmtCurAmt and cannot be null");
            }
            this.CurCode = curCode;
            this.AcctType = acctType;
        }

        /// <summary>
        /// Gets or Sets Amt
        /// </summary>
        [DataMember(Name = "Amt", IsRequired = true, EmitDefaultValue = true)]
        public decimal Amt { get; set; }

        /// <summary>
        /// Gets or Sets AcctType
        /// </summary>
        [DataMember(Name = "AcctType", EmitDefaultValue = false)]
        public string AcctType { get; set; }

        /// <summary>
        /// Gets or Sets CurCode
        /// </summary>
        [DataMember(Name = "CurCode", IsRequired = true, EmitDefaultValue = true)]
        public XferAddRequestXferAddRqMsgRqHdrFeeRqHdrDebitRefDebitInfoCompositeCurAmtCurAmtCurCode CurCode { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class XferAddRequestXferAddRqMsgRqHdrFeeRqHdrDebitRefDebitInfoCompositeCurAmtCurAmt {\n");
            sb.Append("  Amt: ").Append(Amt).Append("\n");
            sb.Append("  AcctType: ").Append(AcctType).Append("\n");
            sb.Append("  CurCode: ").Append(CurCode).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // AcctType (string) maxLength
            if (this.AcctType != null && this.AcctType.Length > 200)
            {
                yield return new ValidationResult("Invalid value for AcctType, length must be less than 200.", new [] { "AcctType" });
            }

            yield break;
        }
    }

}
