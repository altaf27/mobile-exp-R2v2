/*
 * exp-openfinance-api
 *
 * Ex  perience API for OpenFinance
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Cbd.MobileExperienceApi.Client.FileParameter;
using OpenAPIDateConverter = Cbd.MobileExperienceApi.Client.OpenAPIDateConverter;

namespace Cbd.MobileExperienceApi.Model
{
    /// <summary>
    /// AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctTrnRecInnerAcctTrnEnvrAddressBranchAddr
    /// </summary>
    [DataContract(Name = "AcctAcctTrnInq_response_AcctAcctTrnInqRs_AcctTrnRec_inner_AcctTrnEnvr_Address_BranchAddr")]
    public partial class AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctTrnRecInnerAcctTrnEnvrAddressBranchAddr : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctTrnRecInnerAcctTrnEnvrAddressBranchAddr" /> class.
        /// </summary>
        /// <param name="branchNo">branchNo.</param>
        /// <param name="originBranch">originBranch.</param>
        /// <param name="branchName">branchName.</param>
        /// <param name="brAddr1">brAddr1.</param>
        /// <param name="brAddr2">brAddr2.</param>
        /// <param name="brAddr3">brAddr3.</param>
        /// <param name="brCity">brCity.</param>
        public AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctTrnRecInnerAcctTrnEnvrAddressBranchAddr(string branchNo = default(string), string originBranch = default(string), string branchName = default(string), string brAddr1 = default(string), string brAddr2 = default(string), string brAddr3 = default(string), string brCity = default(string))
        {
            this.BranchNo = branchNo;
            this.OriginBranch = originBranch;
            this.BranchName = branchName;
            this.BrAddr1 = brAddr1;
            this.BrAddr2 = brAddr2;
            this.BrAddr3 = brAddr3;
            this.BrCity = brCity;
        }

        /// <summary>
        /// Gets or Sets BranchNo
        /// </summary>
        [DataMember(Name = "BranchNo", EmitDefaultValue = false)]
        public string BranchNo { get; set; }

        /// <summary>
        /// Gets or Sets OriginBranch
        /// </summary>
        [DataMember(Name = "OriginBranch", EmitDefaultValue = false)]
        public string OriginBranch { get; set; }

        /// <summary>
        /// Gets or Sets BranchName
        /// </summary>
        [DataMember(Name = "BranchName", EmitDefaultValue = false)]
        public string BranchName { get; set; }

        /// <summary>
        /// Gets or Sets BrAddr1
        /// </summary>
        [DataMember(Name = "BrAddr1", EmitDefaultValue = false)]
        public string BrAddr1 { get; set; }

        /// <summary>
        /// Gets or Sets BrAddr2
        /// </summary>
        [DataMember(Name = "BrAddr2", EmitDefaultValue = false)]
        public string BrAddr2 { get; set; }

        /// <summary>
        /// Gets or Sets BrAddr3
        /// </summary>
        [DataMember(Name = "BrAddr3", EmitDefaultValue = false)]
        public string BrAddr3 { get; set; }

        /// <summary>
        /// Gets or Sets BrCity
        /// </summary>
        [DataMember(Name = "BrCity", EmitDefaultValue = false)]
        public string BrCity { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AcctAcctTrnInqResponseAcctAcctTrnInqRsAcctTrnRecInnerAcctTrnEnvrAddressBranchAddr {\n");
            sb.Append("  BranchNo: ").Append(BranchNo).Append("\n");
            sb.Append("  OriginBranch: ").Append(OriginBranch).Append("\n");
            sb.Append("  BranchName: ").Append(BranchName).Append("\n");
            sb.Append("  BrAddr1: ").Append(BrAddr1).Append("\n");
            sb.Append("  BrAddr2: ").Append(BrAddr2).Append("\n");
            sb.Append("  BrAddr3: ").Append(BrAddr3).Append("\n");
            sb.Append("  BrCity: ").Append(BrCity).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
