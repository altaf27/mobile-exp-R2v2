/*
 * exp-openfinance-api
 *
 * Ex  perience API for OpenFinance
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Cbd.MobileExperienceApi.Client.FileParameter;
using OpenAPIDateConverter = Cbd.MobileExperienceApi.Client.OpenAPIDateConverter;

namespace Cbd.MobileExperienceApi.Model
{
    /// <summary>
    /// RemitStatInqRsRemitStatInqRsRemitRec
    /// </summary>
    [DataContract(Name = "RemitStatInq_rs_RemitStatInqRs_RemitRec")]
    public partial class RemitStatInqRsRemitStatInqRsRemitRec : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RemitStatInqRsRemitStatInqRsRemitRec" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected RemitStatInqRsRemitStatInqRsRemitRec() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="RemitStatInqRsRemitStatInqRsRemitRec" /> class.
        /// </summary>
        /// <param name="remitId">remitId (required).</param>
        /// <param name="remitInfo">remitInfo.</param>
        public RemitStatInqRsRemitStatInqRsRemitRec(string remitId = default(string), RemitStatInqRsRemitStatInqRsRemitRecRemitInfo remitInfo = default(RemitStatInqRsRemitStatInqRsRemitRecRemitInfo))
        {
            // to ensure "remitId" is required (not null)
            if (remitId == null)
            {
                throw new ArgumentNullException("remitId is a required property for RemitStatInqRsRemitStatInqRsRemitRec and cannot be null");
            }
            this.RemitId = remitId;
            this.RemitInfo = remitInfo;
        }

        /// <summary>
        /// Gets or Sets RemitId
        /// </summary>
        [DataMember(Name = "RemitId", IsRequired = true, EmitDefaultValue = true)]
        public string RemitId { get; set; }

        /// <summary>
        /// Gets or Sets RemitInfo
        /// </summary>
        [DataMember(Name = "RemitInfo", EmitDefaultValue = false)]
        public RemitStatInqRsRemitStatInqRsRemitRecRemitInfo RemitInfo { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RemitStatInqRsRemitStatInqRsRemitRec {\n");
            sb.Append("  RemitId: ").Append(RemitId).Append("\n");
            sb.Append("  RemitInfo: ").Append(RemitInfo).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // RemitId (string) maxLength
            if (this.RemitId != null && this.RemitId.Length > 1024)
            {
                yield return new ValidationResult("Invalid value for RemitId, length must be less than 1024.", new [] { "RemitId" });
            }

            yield break;
        }
    }

}
