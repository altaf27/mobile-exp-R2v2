/*
 * exp-openfinance-api
 *
 * Ex  perience API for OpenFinance
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Cbd.MobileExperienceApi.Client.FileParameter;
using OpenAPIDateConverter = Cbd.MobileExperienceApi.Client.OpenAPIDateConverter;

namespace Cbd.MobileExperienceApi.Model
{
    /// <summary>
    /// PartyinqrsFinancialDataType
    /// </summary>
    [DataContract(Name = "partyinqrs_FinancialData_Type")]
    public partial class PartyinqrsFinancialDataType : IValidatableObject
    {
        /// <summary>
        /// Defines FinancialType
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum FinancialTypeEnum
        {
            /// <summary>
            /// Enum Asset for value: Asset
            /// </summary>
            [EnumMember(Value = "Asset")]
            Asset = 1,

            /// <summary>
            /// Enum Expense for value: Expense
            /// </summary>
            [EnumMember(Value = "Expense")]
            Expense = 2,

            /// <summary>
            /// Enum Income for value: Income
            /// </summary>
            [EnumMember(Value = "Income")]
            Income = 3,

            /// <summary>
            /// Enum Liability for value: Liability
            /// </summary>
            [EnumMember(Value = "Liability")]
            Liability = 4,

            /// <summary>
            /// Enum Revenue for value: Revenue
            /// </summary>
            [EnumMember(Value = "Revenue")]
            Revenue = 5,

            /// <summary>
            /// Enum Sales for value: Sales
            /// </summary>
            [EnumMember(Value = "Sales")]
            Sales = 6
        }


        /// <summary>
        /// Gets or Sets FinancialType
        /// </summary>
        /*
        <example>Asset</example>
        */
        [DataMember(Name = "FinancialType", EmitDefaultValue = false)]
        public FinancialTypeEnum? FinancialType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="PartyinqrsFinancialDataType" /> class.
        /// </summary>
        /// <param name="financialType">financialType.</param>
        /// <param name="financialAmt">financialAmt.</param>
        /// <param name="relEstablishedDt">relEstablishedDt.</param>
        /// <param name="incomeCurrency">incomeCurrency.</param>
        public PartyinqrsFinancialDataType(FinancialTypeEnum? financialType = default(FinancialTypeEnum?), string financialAmt = default(string), string relEstablishedDt = default(string), string incomeCurrency = default(string))
        {
            this.FinancialType = financialType;
            this.FinancialAmt = financialAmt;
            this.RelEstablishedDt = relEstablishedDt;
            this.IncomeCurrency = incomeCurrency;
        }

        /// <summary>
        /// Gets or Sets FinancialAmt
        /// </summary>
        [DataMember(Name = "FinancialAmt", EmitDefaultValue = false)]
        public string FinancialAmt { get; set; }

        /// <summary>
        /// Gets or Sets RelEstablishedDt
        /// </summary>
        [DataMember(Name = "RelEstablishedDt", EmitDefaultValue = false)]
        public string RelEstablishedDt { get; set; }

        /// <summary>
        /// Gets or Sets IncomeCurrency
        /// </summary>
        [DataMember(Name = "IncomeCurrency", EmitDefaultValue = false)]
        public string IncomeCurrency { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PartyinqrsFinancialDataType {\n");
            sb.Append("  FinancialType: ").Append(FinancialType).Append("\n");
            sb.Append("  FinancialAmt: ").Append(FinancialAmt).Append("\n");
            sb.Append("  RelEstablishedDt: ").Append(RelEstablishedDt).Append("\n");
            sb.Append("  IncomeCurrency: ").Append(IncomeCurrency).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
