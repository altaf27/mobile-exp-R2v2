/*
 * exp-openfinance-api
 *
 * Ex  perience API for OpenFinance
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Cbd.MobileExperienceApi.Client.FileParameter;
using OpenAPIDateConverter = Cbd.MobileExperienceApi.Client.OpenAPIDateConverter;

namespace Cbd.MobileExperienceApi.Model
{
    /// <summary>
    /// XferAddResponseXferAddRsXferRecXferInfoRefData
    /// </summary>
    [DataContract(Name = "XferAdd_response_XferAddRs_XferRec_XferInfo_RefData")]
    public partial class XferAddResponseXferAddRsXferRecXferInfoRefData : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="XferAddResponseXferAddRsXferRecXferInfoRefData" /> class.
        /// </summary>
        /// <param name="refIdent">refIdent.</param>
        public XferAddResponseXferAddRsXferRecXferInfoRefData(string refIdent = default(string))
        {
            this.RefIdent = refIdent;
        }

        /// <summary>
        /// Gets or Sets RefIdent
        /// </summary>
        [DataMember(Name = "RefIdent", EmitDefaultValue = false)]
        public string RefIdent { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class XferAddResponseXferAddRsXferRecXferInfoRefData {\n");
            sb.Append("  RefIdent: ").Append(RefIdent).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // RefIdent (string) maxLength
            if (this.RefIdent != null && this.RefIdent.Length > 20)
            {
                yield return new ValidationResult("Invalid value for RefIdent, length must be less than 20.", new [] { "RefIdent" });
            }

            yield break;
        }
    }

}
