/*
 * exp-openfinance-api
 *
 * Ex  perience API for OpenFinance
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Cbd.MobileExperienceApi.Client.FileParameter;
using OpenAPIDateConverter = Cbd.MobileExperienceApi.Client.OpenAPIDateConverter;

namespace Cbd.MobileExperienceApi.Model
{
    /// <summary>
    /// DdaEnquirydetailsResponseDataInner
    /// </summary>
    [DataContract(Name = "dda_enquirydetails_response_Data_inner")]
    public partial class DdaEnquirydetailsResponseDataInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DdaEnquirydetailsResponseDataInner" /> class.
        /// </summary>
        /// <param name="contractReferenceNumber">contractReferenceNumber.</param>
        /// <param name="instructionCode">instructionCode.</param>
        /// <param name="oIC">oIC.</param>
        /// <param name="originatorName">originatorName.</param>
        /// <param name="payerIdentNumberWithOrg">payerIdentNumberWithOrg.</param>
        /// <param name="customerType">customerType.</param>
        /// <param name="customerId">customerId.</param>
        /// <param name="dDAIssuedFor">dDAIssuedFor.</param>
        /// <param name="payingBankID">payingBankID.</param>
        /// <param name="payerName">payerName.</param>
        /// <param name="payerMobileNumber">payerMobileNumber.</param>
        /// <param name="payerEmailAddress">payerEmailAddress.</param>
        /// <param name="fundingAccountType">fundingAccountType.</param>
        /// <param name="accountNumber">accountNumber.</param>
        /// <param name="dDACommencementDate">dDACommencementDate.</param>
        /// <param name="debitRequestInstances">debitRequestInstances.</param>
        /// <param name="dDAExpiryDate">dDAExpiryDate.</param>
        /// <param name="dDAAmountType">dDAAmountType.</param>
        /// <param name="paymentFrequency">paymentFrequency.</param>
        /// <param name="dDRDefinedDays">dDRDefinedDays.</param>
        /// <param name="dDMinimumAmount">dDMinimumAmount.</param>
        /// <param name="dDMaximumAmount">dDMaximumAmount.</param>
        /// <param name="captureMode">captureMode.</param>
        /// <param name="dDAReferenceNumber">dDAReferenceNumber.</param>
        /// <param name="scannedDDAFileName">scannedDDAFileName.</param>
        /// <param name="dDAStatus">dDAStatus.</param>
        /// <param name="dDAPuposeCodeDesc">dDAPuposeCodeDesc.</param>
        /// <param name="dDAType">dDAType.</param>
        public DdaEnquirydetailsResponseDataInner(Object contractReferenceNumber = default(Object), Object instructionCode = default(Object), Object oIC = default(Object), Object originatorName = default(Object), Object payerIdentNumberWithOrg = default(Object), Object customerType = default(Object), Object customerId = default(Object), Object dDAIssuedFor = default(Object), Object payingBankID = default(Object), Object payerName = default(Object), Object payerMobileNumber = default(Object), Object payerEmailAddress = default(Object), Object fundingAccountType = default(Object), Object accountNumber = default(Object), Object dDACommencementDate = default(Object), Object debitRequestInstances = default(Object), Object dDAExpiryDate = default(Object), Object dDAAmountType = default(Object), Object paymentFrequency = default(Object), Object dDRDefinedDays = default(Object), Object dDMinimumAmount = default(Object), Object dDMaximumAmount = default(Object), Object captureMode = default(Object), Object dDAReferenceNumber = default(Object), Object scannedDDAFileName = default(Object), Object dDAStatus = default(Object), Object dDAPuposeCodeDesc = default(Object), Object dDAType = default(Object))
        {
            this.ContractReferenceNumber = contractReferenceNumber;
            this.InstructionCode = instructionCode;
            this.OIC = oIC;
            this.OriginatorName = originatorName;
            this.PayerIdentNumberWithOrg = payerIdentNumberWithOrg;
            this.CustomerType = customerType;
            this.CustomerId = customerId;
            this.DDAIssuedFor = dDAIssuedFor;
            this.PayingBankID = payingBankID;
            this.PayerName = payerName;
            this.PayerMobileNumber = payerMobileNumber;
            this.PayerEmailAddress = payerEmailAddress;
            this.FundingAccountType = fundingAccountType;
            this.AccountNumber = accountNumber;
            this.DDACommencementDate = dDACommencementDate;
            this.DebitRequestInstances = debitRequestInstances;
            this.DDAExpiryDate = dDAExpiryDate;
            this.DDAAmountType = dDAAmountType;
            this.PaymentFrequency = paymentFrequency;
            this.DDRDefinedDays = dDRDefinedDays;
            this.DDMinimumAmount = dDMinimumAmount;
            this.DDMaximumAmount = dDMaximumAmount;
            this.CaptureMode = captureMode;
            this.DDAReferenceNumber = dDAReferenceNumber;
            this.ScannedDDAFileName = scannedDDAFileName;
            this.DDAStatus = dDAStatus;
            this.DDAPuposeCodeDesc = dDAPuposeCodeDesc;
            this.DDAType = dDAType;
        }

        /// <summary>
        /// Gets or Sets ContractReferenceNumber
        /// </summary>
        [DataMember(Name = "ContractReferenceNumber", EmitDefaultValue = false)]
        public Object ContractReferenceNumber { get; set; }

        /// <summary>
        /// Gets or Sets InstructionCode
        /// </summary>
        [DataMember(Name = "InstructionCode", EmitDefaultValue = false)]
        public Object InstructionCode { get; set; }

        /// <summary>
        /// Gets or Sets OIC
        /// </summary>
        [DataMember(Name = "OIC", EmitDefaultValue = false)]
        public Object OIC { get; set; }

        /// <summary>
        /// Gets or Sets OriginatorName
        /// </summary>
        [DataMember(Name = "OriginatorName", EmitDefaultValue = false)]
        public Object OriginatorName { get; set; }

        /// <summary>
        /// Gets or Sets PayerIdentNumberWithOrg
        /// </summary>
        [DataMember(Name = "PayerIdentNumberWithOrg", EmitDefaultValue = false)]
        public Object PayerIdentNumberWithOrg { get; set; }

        /// <summary>
        /// Gets or Sets CustomerType
        /// </summary>
        [DataMember(Name = "CustomerType", EmitDefaultValue = false)]
        public Object CustomerType { get; set; }

        /// <summary>
        /// Gets or Sets CustomerId
        /// </summary>
        [DataMember(Name = "CustomerId", EmitDefaultValue = false)]
        public Object CustomerId { get; set; }

        /// <summary>
        /// Gets or Sets DDAIssuedFor
        /// </summary>
        [DataMember(Name = "DDAIssuedFor", EmitDefaultValue = false)]
        public Object DDAIssuedFor { get; set; }

        /// <summary>
        /// Gets or Sets PayingBankID
        /// </summary>
        [DataMember(Name = "PayingBankID", EmitDefaultValue = false)]
        public Object PayingBankID { get; set; }

        /// <summary>
        /// Gets or Sets PayerName
        /// </summary>
        [DataMember(Name = "PayerName", EmitDefaultValue = false)]
        public Object PayerName { get; set; }

        /// <summary>
        /// Gets or Sets PayerMobileNumber
        /// </summary>
        [DataMember(Name = "PayerMobileNumber", EmitDefaultValue = false)]
        public Object PayerMobileNumber { get; set; }

        /// <summary>
        /// Gets or Sets PayerEmailAddress
        /// </summary>
        [DataMember(Name = "PayerEmailAddress", EmitDefaultValue = false)]
        public Object PayerEmailAddress { get; set; }

        /// <summary>
        /// Gets or Sets FundingAccountType
        /// </summary>
        [DataMember(Name = "FundingAccountType", EmitDefaultValue = false)]
        public Object FundingAccountType { get; set; }

        /// <summary>
        /// Gets or Sets AccountNumber
        /// </summary>
        [DataMember(Name = "AccountNumber", EmitDefaultValue = false)]
        public Object AccountNumber { get; set; }

        /// <summary>
        /// Gets or Sets DDACommencementDate
        /// </summary>
        [DataMember(Name = "DDACommencementDate", EmitDefaultValue = false)]
        public Object DDACommencementDate { get; set; }

        /// <summary>
        /// Gets or Sets DebitRequestInstances
        /// </summary>
        [DataMember(Name = "DebitRequestInstances", EmitDefaultValue = false)]
        public Object DebitRequestInstances { get; set; }

        /// <summary>
        /// Gets or Sets DDAExpiryDate
        /// </summary>
        [DataMember(Name = "DDAExpiryDate", EmitDefaultValue = false)]
        public Object DDAExpiryDate { get; set; }

        /// <summary>
        /// Gets or Sets DDAAmountType
        /// </summary>
        [DataMember(Name = "DDAAmountType", EmitDefaultValue = false)]
        public Object DDAAmountType { get; set; }

        /// <summary>
        /// Gets or Sets PaymentFrequency
        /// </summary>
        [DataMember(Name = "PaymentFrequency", EmitDefaultValue = false)]
        public Object PaymentFrequency { get; set; }

        /// <summary>
        /// Gets or Sets DDRDefinedDays
        /// </summary>
        [DataMember(Name = "DDRDefinedDays", EmitDefaultValue = false)]
        public Object DDRDefinedDays { get; set; }

        /// <summary>
        /// Gets or Sets DDMinimumAmount
        /// </summary>
        [DataMember(Name = "DDMinimumAmount", EmitDefaultValue = false)]
        public Object DDMinimumAmount { get; set; }

        /// <summary>
        /// Gets or Sets DDMaximumAmount
        /// </summary>
        [DataMember(Name = "DDMaximumAmount", EmitDefaultValue = false)]
        public Object DDMaximumAmount { get; set; }

        /// <summary>
        /// Gets or Sets CaptureMode
        /// </summary>
        [DataMember(Name = "CaptureMode", EmitDefaultValue = false)]
        public Object CaptureMode { get; set; }

        /// <summary>
        /// Gets or Sets DDAReferenceNumber
        /// </summary>
        [DataMember(Name = "DDAReferenceNumber", EmitDefaultValue = false)]
        public Object DDAReferenceNumber { get; set; }

        /// <summary>
        /// Gets or Sets ScannedDDAFileName
        /// </summary>
        [DataMember(Name = "ScannedDDAFileName", EmitDefaultValue = false)]
        public Object ScannedDDAFileName { get; set; }

        /// <summary>
        /// Gets or Sets DDAStatus
        /// </summary>
        [DataMember(Name = "DDAStatus", EmitDefaultValue = false)]
        public Object DDAStatus { get; set; }

        /// <summary>
        /// Gets or Sets DDAPuposeCodeDesc
        /// </summary>
        [DataMember(Name = "DDAPuposeCodeDesc", EmitDefaultValue = false)]
        public Object DDAPuposeCodeDesc { get; set; }

        /// <summary>
        /// Gets or Sets DDAType
        /// </summary>
        [DataMember(Name = "DDAType", EmitDefaultValue = false)]
        public Object DDAType { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DdaEnquirydetailsResponseDataInner {\n");
            sb.Append("  ContractReferenceNumber: ").Append(ContractReferenceNumber).Append("\n");
            sb.Append("  InstructionCode: ").Append(InstructionCode).Append("\n");
            sb.Append("  OIC: ").Append(OIC).Append("\n");
            sb.Append("  OriginatorName: ").Append(OriginatorName).Append("\n");
            sb.Append("  PayerIdentNumberWithOrg: ").Append(PayerIdentNumberWithOrg).Append("\n");
            sb.Append("  CustomerType: ").Append(CustomerType).Append("\n");
            sb.Append("  CustomerId: ").Append(CustomerId).Append("\n");
            sb.Append("  DDAIssuedFor: ").Append(DDAIssuedFor).Append("\n");
            sb.Append("  PayingBankID: ").Append(PayingBankID).Append("\n");
            sb.Append("  PayerName: ").Append(PayerName).Append("\n");
            sb.Append("  PayerMobileNumber: ").Append(PayerMobileNumber).Append("\n");
            sb.Append("  PayerEmailAddress: ").Append(PayerEmailAddress).Append("\n");
            sb.Append("  FundingAccountType: ").Append(FundingAccountType).Append("\n");
            sb.Append("  AccountNumber: ").Append(AccountNumber).Append("\n");
            sb.Append("  DDACommencementDate: ").Append(DDACommencementDate).Append("\n");
            sb.Append("  DebitRequestInstances: ").Append(DebitRequestInstances).Append("\n");
            sb.Append("  DDAExpiryDate: ").Append(DDAExpiryDate).Append("\n");
            sb.Append("  DDAAmountType: ").Append(DDAAmountType).Append("\n");
            sb.Append("  PaymentFrequency: ").Append(PaymentFrequency).Append("\n");
            sb.Append("  DDRDefinedDays: ").Append(DDRDefinedDays).Append("\n");
            sb.Append("  DDMinimumAmount: ").Append(DDMinimumAmount).Append("\n");
            sb.Append("  DDMaximumAmount: ").Append(DDMaximumAmount).Append("\n");
            sb.Append("  CaptureMode: ").Append(CaptureMode).Append("\n");
            sb.Append("  DDAReferenceNumber: ").Append(DDAReferenceNumber).Append("\n");
            sb.Append("  ScannedDDAFileName: ").Append(ScannedDDAFileName).Append("\n");
            sb.Append("  DDAStatus: ").Append(DDAStatus).Append("\n");
            sb.Append("  DDAPuposeCodeDesc: ").Append(DDAPuposeCodeDesc).Append("\n");
            sb.Append("  DDAType: ").Append(DDAType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
