/*
 * exp-openfinance-api
 *
 * Ex  perience API for OpenFinance
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Net.Mime;
using Cbd.MobileExperienceApi.Client;
using Cbd.MobileExperienceApi.Model;

namespace Cbd.MobileExperienceApi.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IDefaultApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Error Structure for CBD Mobile Services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>DdaEnquirydetailsResponse</returns>
        DdaEnquirydetailsResponse GetDDAEnquiryDetailsPost(string? xCorrelationId = default(string?), string? xSourceId = default(string?), DdaEnquirydetailsRequest? generated = default(DdaEnquirydetailsRequest?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Error Structure for CBD Mobile Services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>ApiResponse of DdaEnquirydetailsResponse</returns>
        ApiResponse<DdaEnquirydetailsResponse> GetDDAEnquiryDetailsPostWithHttpInfo(string? xCorrelationId = default(string?), string? xSourceId = default(string?), DdaEnquirydetailsRequest? generated = default(DdaEnquirydetailsRequest?));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Error Structure for CBD Mobile Services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>StandingordersinquiryResponse</returns>
        StandingordersinquiryResponse GetStandingOrdersInquiryPost(string? xCorrelationId = default(string?), string? xSourceId = default(string?), StandingordersinquiryRequest? generated = default(StandingordersinquiryRequest?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Error Structure for CBD Mobile Services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>ApiResponse of StandingordersinquiryResponse</returns>
        ApiResponse<StandingordersinquiryResponse> GetStandingOrdersInquiryPostWithHttpInfo(string? xCorrelationId = default(string?), string? xSourceId = default(string?), StandingordersinquiryRequest? generated = default(StandingordersinquiryRequest?));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Error Structure for CBD Mobile Services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>PayloadResponseBeneficiaryUpdate</returns>
        PayloadResponseBeneficiaryUpdate ManagementInquiryPost(string? xCorrelationId = default(string?), string? xSourceId = default(string?), BeneficiaryInquiryRequest? generated = default(BeneficiaryInquiryRequest?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Error Structure for CBD Mobile Services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>ApiResponse of PayloadResponseBeneficiaryUpdate</returns>
        ApiResponse<PayloadResponseBeneficiaryUpdate> ManagementInquiryPostWithHttpInfo(string? xCorrelationId = default(string?), string? xSourceId = default(string?), BeneficiaryInquiryRequest? generated = default(BeneficiaryInquiryRequest?));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Servicename used for getRimInfo
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>GetRimInfoResponse</returns>
        GetRimInfoResponse ServicesCCIBServicesGetRimInfoPost(string? xCorrelationId = default(string?), string? xSourceId = default(string?), GetRimInfoRequest? generated = default(GetRimInfoRequest?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Servicename used for getRimInfo
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>ApiResponse of GetRimInfoResponse</returns>
        ApiResponse<GetRimInfoResponse> ServicesCCIBServicesGetRimInfoPostWithHttpInfo(string? xCorrelationId = default(string?), string? xSourceId = default(string?), GetRimInfoRequest? generated = default(GetRimInfoRequest?));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// operation for AcctAcctTrnInq services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>AcctAcctTrnInqResponse</returns>
        AcctAcctTrnInqResponse ServicesCurrentAccountAcctAcctTrnInqPost(string? xCorrelationId = default(string?), string? xSourceId = default(string?), AcctAcctTrnInqRequest? generated = default(AcctAcctTrnInqRequest?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// operation for AcctAcctTrnInq services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>ApiResponse of AcctAcctTrnInqResponse</returns>
        ApiResponse<AcctAcctTrnInqResponse> ServicesCurrentAccountAcctAcctTrnInqPostWithHttpInfo(string? xCorrelationId = default(string?), string? xSourceId = default(string?), AcctAcctTrnInqRequest? generated = default(AcctAcctTrnInqRequest?));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// operation for AcctAcctTrnInq services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>XferAddResponse</returns>
        XferAddResponse ServicesCurrentAccountXferXferAddPost(string? xCorrelationId = default(string?), string? xSourceId = default(string?), XferAddRequest? generated = default(XferAddRequest?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// operation for AcctAcctTrnInq services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>ApiResponse of XferAddResponse</returns>
        ApiResponse<XferAddResponse> ServicesCurrentAccountXferXferAddPostWithHttpInfo(string? xCorrelationId = default(string?), string? xSourceId = default(string?), XferAddRequest? generated = default(XferAddRequest?));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Get float balance
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>PartyAcctRelInqResponse</returns>
        PartyAcctRelInqResponse ServicesCustomerProfilePartyAcctRelInqPost(string? xCorrelationId = default(string?), string? xSourceId = default(string?), PartyAcctRelInqRequest? generated = default(PartyAcctRelInqRequest?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Get float balance
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>ApiResponse of PartyAcctRelInqResponse</returns>
        ApiResponse<PartyAcctRelInqResponse> ServicesCustomerProfilePartyAcctRelInqPostWithHttpInfo(string? xCorrelationId = default(string?), string? xSourceId = default(string?), PartyAcctRelInqRequest? generated = default(PartyAcctRelInqRequest?));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// operation for PartyInq services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>PartyInqResponse</returns>
        PartyInqResponse ServicesCustomerProfilePartyInqPost(string? xCorrelationId = default(string?), string? xSourceId = default(string?), PartyInqRequest? generated = default(PartyInqRequest?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// operation for PartyInq services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>ApiResponse of PartyInqResponse</returns>
        ApiResponse<PartyInqResponse> ServicesCustomerProfilePartyInqPostWithHttpInfo(string? xCorrelationId = default(string?), string? xSourceId = default(string?), PartyInqRequest? generated = default(PartyInqRequest?));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Contains base request headers
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="contentType">Content type of the request (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>Type18</returns>
        Type18 ServicesGenericAPIExecuteServicePost(string? xCorrelationId = default(string?), string? xSourceId = default(string?), string? contentType = default(string?), Type17? generated = default(Type17?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Contains base request headers
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="contentType">Content type of the request (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>ApiResponse of Type18</returns>
        ApiResponse<Type18> ServicesGenericAPIExecuteServicePostWithHttpInfo(string? xCorrelationId = default(string?), string? xSourceId = default(string?), string? contentType = default(string?), Type17? generated = default(Type17?));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Error Structure for CBD Mobile Services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>RemitAddResponse</returns>
        RemitAddResponse ServicesRemittanceRemitAddPost(string? xCorrelationId = default(string?), string? xSourceId = default(string?), RemitAddRequest? generated = default(RemitAddRequest?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Error Structure for CBD Mobile Services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>ApiResponse of RemitAddResponse</returns>
        ApiResponse<RemitAddResponse> ServicesRemittanceRemitAddPostWithHttpInfo(string? xCorrelationId = default(string?), string? xSourceId = default(string?), RemitAddRequest? generated = default(RemitAddRequest?));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Error Structure for CBD Mobile Services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>RemitStatInqRs</returns>
        RemitStatInqRs ServicesRemittanceRemitStatInqPost(string? xCorrelationId = default(string?), string? xSourceId = default(string?), RemitStatInqRq? generated = default(RemitStatInqRq?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Error Structure for CBD Mobile Services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>ApiResponse of RemitStatInqRs</returns>
        ApiResponse<RemitStatInqRs> ServicesRemittanceRemitStatInqPostWithHttpInfo(string? xCorrelationId = default(string?), string? xSourceId = default(string?), RemitStatInqRq? generated = default(RemitStatInqRq?));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Error Structure for CBD Mobile Services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>ValidateIbanDetailsResponse</returns>
        ValidateIbanDetailsResponse ServicesValidateIbanDetailsPost(string? xCorrelationId = default(string?), string? xSourceId = default(string?), ValidateIbanDetailsRequest? generated = default(ValidateIbanDetailsRequest?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Error Structure for CBD Mobile Services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>ApiResponse of ValidateIbanDetailsResponse</returns>
        ApiResponse<ValidateIbanDetailsResponse> ServicesValidateIbanDetailsPostWithHttpInfo(string? xCorrelationId = default(string?), string? xSourceId = default(string?), ValidateIbanDetailsRequest? generated = default(ValidateIbanDetailsRequest?));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IDefaultApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Error Structure for CBD Mobile Services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of DdaEnquirydetailsResponse</returns>
        System.Threading.Tasks.Task<DdaEnquirydetailsResponse> GetDDAEnquiryDetailsPostAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), DdaEnquirydetailsRequest? generated = default(DdaEnquirydetailsRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Error Structure for CBD Mobile Services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (DdaEnquirydetailsResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<DdaEnquirydetailsResponse>> GetDDAEnquiryDetailsPostWithHttpInfoAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), DdaEnquirydetailsRequest? generated = default(DdaEnquirydetailsRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Error Structure for CBD Mobile Services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of StandingordersinquiryResponse</returns>
        System.Threading.Tasks.Task<StandingordersinquiryResponse> GetStandingOrdersInquiryPostAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), StandingordersinquiryRequest? generated = default(StandingordersinquiryRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Error Structure for CBD Mobile Services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (StandingordersinquiryResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<StandingordersinquiryResponse>> GetStandingOrdersInquiryPostWithHttpInfoAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), StandingordersinquiryRequest? generated = default(StandingordersinquiryRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Error Structure for CBD Mobile Services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PayloadResponseBeneficiaryUpdate</returns>
        System.Threading.Tasks.Task<PayloadResponseBeneficiaryUpdate> ManagementInquiryPostAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), BeneficiaryInquiryRequest? generated = default(BeneficiaryInquiryRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Error Structure for CBD Mobile Services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PayloadResponseBeneficiaryUpdate)</returns>
        System.Threading.Tasks.Task<ApiResponse<PayloadResponseBeneficiaryUpdate>> ManagementInquiryPostWithHttpInfoAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), BeneficiaryInquiryRequest? generated = default(BeneficiaryInquiryRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Servicename used for getRimInfo
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GetRimInfoResponse</returns>
        System.Threading.Tasks.Task<GetRimInfoResponse> ServicesCCIBServicesGetRimInfoPostAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), GetRimInfoRequest? generated = default(GetRimInfoRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Servicename used for getRimInfo
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GetRimInfoResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<GetRimInfoResponse>> ServicesCCIBServicesGetRimInfoPostWithHttpInfoAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), GetRimInfoRequest? generated = default(GetRimInfoRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// operation for AcctAcctTrnInq services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of AcctAcctTrnInqResponse</returns>
        System.Threading.Tasks.Task<AcctAcctTrnInqResponse> ServicesCurrentAccountAcctAcctTrnInqPostAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), AcctAcctTrnInqRequest? generated = default(AcctAcctTrnInqRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// operation for AcctAcctTrnInq services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (AcctAcctTrnInqResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<AcctAcctTrnInqResponse>> ServicesCurrentAccountAcctAcctTrnInqPostWithHttpInfoAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), AcctAcctTrnInqRequest? generated = default(AcctAcctTrnInqRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// operation for AcctAcctTrnInq services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of XferAddResponse</returns>
        System.Threading.Tasks.Task<XferAddResponse> ServicesCurrentAccountXferXferAddPostAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), XferAddRequest? generated = default(XferAddRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// operation for AcctAcctTrnInq services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (XferAddResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<XferAddResponse>> ServicesCurrentAccountXferXferAddPostWithHttpInfoAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), XferAddRequest? generated = default(XferAddRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Get float balance
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PartyAcctRelInqResponse</returns>
        System.Threading.Tasks.Task<PartyAcctRelInqResponse> ServicesCustomerProfilePartyAcctRelInqPostAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), PartyAcctRelInqRequest? generated = default(PartyAcctRelInqRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Get float balance
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PartyAcctRelInqResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<PartyAcctRelInqResponse>> ServicesCustomerProfilePartyAcctRelInqPostWithHttpInfoAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), PartyAcctRelInqRequest? generated = default(PartyAcctRelInqRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// operation for PartyInq services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PartyInqResponse</returns>
        System.Threading.Tasks.Task<PartyInqResponse> ServicesCustomerProfilePartyInqPostAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), PartyInqRequest? generated = default(PartyInqRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// operation for PartyInq services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PartyInqResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<PartyInqResponse>> ServicesCustomerProfilePartyInqPostWithHttpInfoAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), PartyInqRequest? generated = default(PartyInqRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Contains base request headers
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="contentType">Content type of the request (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Type18</returns>
        System.Threading.Tasks.Task<Type18> ServicesGenericAPIExecuteServicePostAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), string? contentType = default(string?), Type17? generated = default(Type17?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Contains base request headers
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="contentType">Content type of the request (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Type18)</returns>
        System.Threading.Tasks.Task<ApiResponse<Type18>> ServicesGenericAPIExecuteServicePostWithHttpInfoAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), string? contentType = default(string?), Type17? generated = default(Type17?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Error Structure for CBD Mobile Services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of RemitAddResponse</returns>
        System.Threading.Tasks.Task<RemitAddResponse> ServicesRemittanceRemitAddPostAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), RemitAddRequest? generated = default(RemitAddRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Error Structure for CBD Mobile Services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (RemitAddResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<RemitAddResponse>> ServicesRemittanceRemitAddPostWithHttpInfoAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), RemitAddRequest? generated = default(RemitAddRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Error Structure for CBD Mobile Services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of RemitStatInqRs</returns>
        System.Threading.Tasks.Task<RemitStatInqRs> ServicesRemittanceRemitStatInqPostAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), RemitStatInqRq? generated = default(RemitStatInqRq?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Error Structure for CBD Mobile Services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (RemitStatInqRs)</returns>
        System.Threading.Tasks.Task<ApiResponse<RemitStatInqRs>> ServicesRemittanceRemitStatInqPostWithHttpInfoAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), RemitStatInqRq? generated = default(RemitStatInqRq?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Error Structure for CBD Mobile Services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ValidateIbanDetailsResponse</returns>
        System.Threading.Tasks.Task<ValidateIbanDetailsResponse> ServicesValidateIbanDetailsPostAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), ValidateIbanDetailsRequest? generated = default(ValidateIbanDetailsRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Error Structure for CBD Mobile Services
        /// </remarks>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ValidateIbanDetailsResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<ValidateIbanDetailsResponse>> ServicesValidateIbanDetailsPostWithHttpInfoAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), ValidateIbanDetailsRequest? generated = default(ValidateIbanDetailsRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IDefaultApi : IDefaultApiSync, IDefaultApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class DefaultApi : IDisposable, IDefaultApi
    {
        private Cbd.MobileExperienceApi.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="DefaultApi"/> class.
        /// **IMPORTANT** This will also create an instance of HttpClient, which is less than ideal.
        /// It's better to reuse the <see href="https://docs.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/use-httpclientfactory-to-implement-resilient-http-requests#issues-with-the-original-httpclient-class-available-in-net">HttpClient and HttpClientHandler</see>.
        /// </summary>
        /// <returns></returns>
        public DefaultApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DefaultApi"/> class.
        /// **IMPORTANT** This will also create an instance of HttpClient, which is less than ideal.
        /// It's better to reuse the <see href="https://docs.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/use-httpclientfactory-to-implement-resilient-http-requests#issues-with-the-original-httpclient-class-available-in-net">HttpClient and HttpClientHandler</see>.
        /// </summary>
        /// <param name="basePath">The target service's base path in URL format.</param>
        /// <exception cref="ArgumentException"></exception>
        /// <returns></returns>
        public DefaultApi(string basePath)
        {
            this.Configuration = Cbd.MobileExperienceApi.Client.Configuration.MergeConfigurations(
                Cbd.MobileExperienceApi.Client.GlobalConfiguration.Instance,
                new Cbd.MobileExperienceApi.Client.Configuration { BasePath = basePath }
            );
            this.ApiClient = new Cbd.MobileExperienceApi.Client.ApiClient(this.Configuration.BasePath);
            this.Client =  this.ApiClient;
            this.AsynchronousClient = this.ApiClient;
            this.ExceptionFactory = Cbd.MobileExperienceApi.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DefaultApi"/> class using Configuration object.
        /// **IMPORTANT** This will also create an instance of HttpClient, which is less than ideal.
        /// It's better to reuse the <see href="https://docs.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/use-httpclientfactory-to-implement-resilient-http-requests#issues-with-the-original-httpclient-class-available-in-net">HttpClient and HttpClientHandler</see>.
        /// </summary>
        /// <param name="configuration">An instance of Configuration.</param>
        /// <exception cref="ArgumentNullException"></exception>
        /// <returns></returns>
        public DefaultApi(Cbd.MobileExperienceApi.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Cbd.MobileExperienceApi.Client.Configuration.MergeConfigurations(
                Cbd.MobileExperienceApi.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.ApiClient = new Cbd.MobileExperienceApi.Client.ApiClient(this.Configuration.BasePath);
            this.Client = this.ApiClient;
            this.AsynchronousClient = this.ApiClient;
            ExceptionFactory = Cbd.MobileExperienceApi.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DefaultApi"/> class.
        /// </summary>
        /// <param name="client">An instance of HttpClient.</param>
        /// <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
        /// <exception cref="ArgumentNullException"></exception>
        /// <returns></returns>
        /// <remarks>
        /// Some configuration settings will not be applied without passing an HttpClientHandler.
        /// The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
        /// </remarks>
        public DefaultApi(HttpClient client, HttpClientHandler handler = null) : this(client, (string)null, handler)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DefaultApi"/> class.
        /// </summary>
        /// <param name="client">An instance of HttpClient.</param>
        /// <param name="basePath">The target service's base path in URL format.</param>
        /// <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
        /// <exception cref="ArgumentNullException"></exception>
        /// <exception cref="ArgumentException"></exception>
        /// <returns></returns>
        /// <remarks>
        /// Some configuration settings will not be applied without passing an HttpClientHandler.
        /// The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
        /// </remarks>
        public DefaultApi(HttpClient client, string basePath, HttpClientHandler handler = null)
        {
            if (client == null) throw new ArgumentNullException("client");

            this.Configuration = Cbd.MobileExperienceApi.Client.Configuration.MergeConfigurations(
                Cbd.MobileExperienceApi.Client.GlobalConfiguration.Instance,
                new Cbd.MobileExperienceApi.Client.Configuration { BasePath = basePath }
            );
            this.ApiClient = new Cbd.MobileExperienceApi.Client.ApiClient(client, this.Configuration.BasePath, handler);
            this.Client =  this.ApiClient;
            this.AsynchronousClient = this.ApiClient;
            this.ExceptionFactory = Cbd.MobileExperienceApi.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DefaultApi"/> class using Configuration object.
        /// </summary>
        /// <param name="client">An instance of HttpClient.</param>
        /// <param name="configuration">An instance of Configuration.</param>
        /// <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
        /// <exception cref="ArgumentNullException"></exception>
        /// <returns></returns>
        /// <remarks>
        /// Some configuration settings will not be applied without passing an HttpClientHandler.
        /// The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
        /// </remarks>
        public DefaultApi(HttpClient client, Cbd.MobileExperienceApi.Client.Configuration configuration, HttpClientHandler handler = null)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");
            if (client == null) throw new ArgumentNullException("client");

            this.Configuration = Cbd.MobileExperienceApi.Client.Configuration.MergeConfigurations(
                Cbd.MobileExperienceApi.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.ApiClient = new Cbd.MobileExperienceApi.Client.ApiClient(client, this.Configuration.BasePath, handler);
            this.Client = this.ApiClient;
            this.AsynchronousClient = this.ApiClient;
            ExceptionFactory = Cbd.MobileExperienceApi.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DefaultApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        /// <exception cref="ArgumentNullException"></exception>
        public DefaultApi(Cbd.MobileExperienceApi.Client.ISynchronousClient client, Cbd.MobileExperienceApi.Client.IAsynchronousClient asyncClient, Cbd.MobileExperienceApi.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Cbd.MobileExperienceApi.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Disposes resources if they were created by us
        /// </summary>
        public void Dispose()
        {
            this.ApiClient?.Dispose();
        }

        /// <summary>
        /// Holds the ApiClient if created
        /// </summary>
        public Cbd.MobileExperienceApi.Client.ApiClient ApiClient { get; set; } = null;

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Cbd.MobileExperienceApi.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Cbd.MobileExperienceApi.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Cbd.MobileExperienceApi.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Cbd.MobileExperienceApi.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        ///  Error Structure for CBD Mobile Services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>DdaEnquirydetailsResponse</returns>
        public DdaEnquirydetailsResponse GetDDAEnquiryDetailsPost(string? xCorrelationId = default(string?), string? xSourceId = default(string?), DdaEnquirydetailsRequest? generated = default(DdaEnquirydetailsRequest?))
        {
            Cbd.MobileExperienceApi.Client.ApiResponse<DdaEnquirydetailsResponse> localVarResponse = GetDDAEnquiryDetailsPostWithHttpInfo(xCorrelationId, xSourceId, generated);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Error Structure for CBD Mobile Services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>ApiResponse of DdaEnquirydetailsResponse</returns>
        public Cbd.MobileExperienceApi.Client.ApiResponse<DdaEnquirydetailsResponse> GetDDAEnquiryDetailsPostWithHttpInfo(string? xCorrelationId = default(string?), string? xSourceId = default(string?), DdaEnquirydetailsRequest? generated = default(DdaEnquirydetailsRequest?))
        {
            Cbd.MobileExperienceApi.Client.RequestOptions localVarRequestOptions = new Cbd.MobileExperienceApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (xCorrelationId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-correlation-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xCorrelationId)); // header parameter
            }
            if (xSourceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-source-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xSourceId)); // header parameter
            }
            localVarRequestOptions.Data = generated;


            // make the HTTP request
            var localVarResponse = this.Client.Post<DdaEnquirydetailsResponse>("/getDDAEnquiryDetails", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetDDAEnquiryDetailsPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Error Structure for CBD Mobile Services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of DdaEnquirydetailsResponse</returns>
        public async System.Threading.Tasks.Task<DdaEnquirydetailsResponse> GetDDAEnquiryDetailsPostAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), DdaEnquirydetailsRequest? generated = default(DdaEnquirydetailsRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Cbd.MobileExperienceApi.Client.ApiResponse<DdaEnquirydetailsResponse> localVarResponse = await GetDDAEnquiryDetailsPostWithHttpInfoAsync(xCorrelationId, xSourceId, generated, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Error Structure for CBD Mobile Services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (DdaEnquirydetailsResponse)</returns>
        public async System.Threading.Tasks.Task<Cbd.MobileExperienceApi.Client.ApiResponse<DdaEnquirydetailsResponse>> GetDDAEnquiryDetailsPostWithHttpInfoAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), DdaEnquirydetailsRequest? generated = default(DdaEnquirydetailsRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Cbd.MobileExperienceApi.Client.RequestOptions localVarRequestOptions = new Cbd.MobileExperienceApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };


            var localVarContentType = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (xCorrelationId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-correlation-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xCorrelationId)); // header parameter
            }
            if (xSourceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-source-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xSourceId)); // header parameter
            }
            localVarRequestOptions.Data = generated;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<DdaEnquirydetailsResponse>("/getDDAEnquiryDetails", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetDDAEnquiryDetailsPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Error Structure for CBD Mobile Services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>StandingordersinquiryResponse</returns>
        public StandingordersinquiryResponse GetStandingOrdersInquiryPost(string? xCorrelationId = default(string?), string? xSourceId = default(string?), StandingordersinquiryRequest? generated = default(StandingordersinquiryRequest?))
        {
            Cbd.MobileExperienceApi.Client.ApiResponse<StandingordersinquiryResponse> localVarResponse = GetStandingOrdersInquiryPostWithHttpInfo(xCorrelationId, xSourceId, generated);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Error Structure for CBD Mobile Services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>ApiResponse of StandingordersinquiryResponse</returns>
        public Cbd.MobileExperienceApi.Client.ApiResponse<StandingordersinquiryResponse> GetStandingOrdersInquiryPostWithHttpInfo(string? xCorrelationId = default(string?), string? xSourceId = default(string?), StandingordersinquiryRequest? generated = default(StandingordersinquiryRequest?))
        {
            Cbd.MobileExperienceApi.Client.RequestOptions localVarRequestOptions = new Cbd.MobileExperienceApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (xCorrelationId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-correlation-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xCorrelationId)); // header parameter
            }
            if (xSourceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-source-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xSourceId)); // header parameter
            }
            localVarRequestOptions.Data = generated;


            // make the HTTP request
            var localVarResponse = this.Client.Post<StandingordersinquiryResponse>("/getStandingOrdersInquiry", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetStandingOrdersInquiryPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Error Structure for CBD Mobile Services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of StandingordersinquiryResponse</returns>
        public async System.Threading.Tasks.Task<StandingordersinquiryResponse> GetStandingOrdersInquiryPostAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), StandingordersinquiryRequest? generated = default(StandingordersinquiryRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Cbd.MobileExperienceApi.Client.ApiResponse<StandingordersinquiryResponse> localVarResponse = await GetStandingOrdersInquiryPostWithHttpInfoAsync(xCorrelationId, xSourceId, generated, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Error Structure for CBD Mobile Services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (StandingordersinquiryResponse)</returns>
        public async System.Threading.Tasks.Task<Cbd.MobileExperienceApi.Client.ApiResponse<StandingordersinquiryResponse>> GetStandingOrdersInquiryPostWithHttpInfoAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), StandingordersinquiryRequest? generated = default(StandingordersinquiryRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Cbd.MobileExperienceApi.Client.RequestOptions localVarRequestOptions = new Cbd.MobileExperienceApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };


            var localVarContentType = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (xCorrelationId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-correlation-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xCorrelationId)); // header parameter
            }
            if (xSourceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-source-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xSourceId)); // header parameter
            }
            localVarRequestOptions.Data = generated;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<StandingordersinquiryResponse>("/getStandingOrdersInquiry", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetStandingOrdersInquiryPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Error Structure for CBD Mobile Services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>PayloadResponseBeneficiaryUpdate</returns>
        public PayloadResponseBeneficiaryUpdate ManagementInquiryPost(string? xCorrelationId = default(string?), string? xSourceId = default(string?), BeneficiaryInquiryRequest? generated = default(BeneficiaryInquiryRequest?))
        {
            Cbd.MobileExperienceApi.Client.ApiResponse<PayloadResponseBeneficiaryUpdate> localVarResponse = ManagementInquiryPostWithHttpInfo(xCorrelationId, xSourceId, generated);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Error Structure for CBD Mobile Services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>ApiResponse of PayloadResponseBeneficiaryUpdate</returns>
        public Cbd.MobileExperienceApi.Client.ApiResponse<PayloadResponseBeneficiaryUpdate> ManagementInquiryPostWithHttpInfo(string? xCorrelationId = default(string?), string? xSourceId = default(string?), BeneficiaryInquiryRequest? generated = default(BeneficiaryInquiryRequest?))
        {
            Cbd.MobileExperienceApi.Client.RequestOptions localVarRequestOptions = new Cbd.MobileExperienceApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (xCorrelationId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-correlation-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xCorrelationId)); // header parameter
            }
            if (xSourceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-source-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xSourceId)); // header parameter
            }
            localVarRequestOptions.Data = generated;


            // make the HTTP request
            var localVarResponse = this.Client.Post<PayloadResponseBeneficiaryUpdate>("/management/inquiry", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ManagementInquiryPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Error Structure for CBD Mobile Services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PayloadResponseBeneficiaryUpdate</returns>
        public async System.Threading.Tasks.Task<PayloadResponseBeneficiaryUpdate> ManagementInquiryPostAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), BeneficiaryInquiryRequest? generated = default(BeneficiaryInquiryRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Cbd.MobileExperienceApi.Client.ApiResponse<PayloadResponseBeneficiaryUpdate> localVarResponse = await ManagementInquiryPostWithHttpInfoAsync(xCorrelationId, xSourceId, generated, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Error Structure for CBD Mobile Services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PayloadResponseBeneficiaryUpdate)</returns>
        public async System.Threading.Tasks.Task<Cbd.MobileExperienceApi.Client.ApiResponse<PayloadResponseBeneficiaryUpdate>> ManagementInquiryPostWithHttpInfoAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), BeneficiaryInquiryRequest? generated = default(BeneficiaryInquiryRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Cbd.MobileExperienceApi.Client.RequestOptions localVarRequestOptions = new Cbd.MobileExperienceApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };


            var localVarContentType = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (xCorrelationId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-correlation-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xCorrelationId)); // header parameter
            }
            if (xSourceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-source-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xSourceId)); // header parameter
            }
            localVarRequestOptions.Data = generated;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<PayloadResponseBeneficiaryUpdate>("/management/inquiry", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ManagementInquiryPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Servicename used for getRimInfo
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>GetRimInfoResponse</returns>
        public GetRimInfoResponse ServicesCCIBServicesGetRimInfoPost(string? xCorrelationId = default(string?), string? xSourceId = default(string?), GetRimInfoRequest? generated = default(GetRimInfoRequest?))
        {
            Cbd.MobileExperienceApi.Client.ApiResponse<GetRimInfoResponse> localVarResponse = ServicesCCIBServicesGetRimInfoPostWithHttpInfo(xCorrelationId, xSourceId, generated);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Servicename used for getRimInfo
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>ApiResponse of GetRimInfoResponse</returns>
        public Cbd.MobileExperienceApi.Client.ApiResponse<GetRimInfoResponse> ServicesCCIBServicesGetRimInfoPostWithHttpInfo(string? xCorrelationId = default(string?), string? xSourceId = default(string?), GetRimInfoRequest? generated = default(GetRimInfoRequest?))
        {
            Cbd.MobileExperienceApi.Client.RequestOptions localVarRequestOptions = new Cbd.MobileExperienceApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (xCorrelationId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-correlation-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xCorrelationId)); // header parameter
            }
            if (xSourceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-source-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xSourceId)); // header parameter
            }
            localVarRequestOptions.Data = generated;


            // make the HTTP request
            var localVarResponse = this.Client.Post<GetRimInfoResponse>("/Services/CCIBServices/getRimInfo", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ServicesCCIBServicesGetRimInfoPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Servicename used for getRimInfo
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GetRimInfoResponse</returns>
        public async System.Threading.Tasks.Task<GetRimInfoResponse> ServicesCCIBServicesGetRimInfoPostAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), GetRimInfoRequest? generated = default(GetRimInfoRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Cbd.MobileExperienceApi.Client.ApiResponse<GetRimInfoResponse> localVarResponse = await ServicesCCIBServicesGetRimInfoPostWithHttpInfoAsync(xCorrelationId, xSourceId, generated, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Servicename used for getRimInfo
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GetRimInfoResponse)</returns>
        public async System.Threading.Tasks.Task<Cbd.MobileExperienceApi.Client.ApiResponse<GetRimInfoResponse>> ServicesCCIBServicesGetRimInfoPostWithHttpInfoAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), GetRimInfoRequest? generated = default(GetRimInfoRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Cbd.MobileExperienceApi.Client.RequestOptions localVarRequestOptions = new Cbd.MobileExperienceApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };


            var localVarContentType = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (xCorrelationId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-correlation-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xCorrelationId)); // header parameter
            }
            if (xSourceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-source-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xSourceId)); // header parameter
            }
            localVarRequestOptions.Data = generated;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<GetRimInfoResponse>("/Services/CCIBServices/getRimInfo", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ServicesCCIBServicesGetRimInfoPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  operation for AcctAcctTrnInq services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>AcctAcctTrnInqResponse</returns>
        public AcctAcctTrnInqResponse ServicesCurrentAccountAcctAcctTrnInqPost(string? xCorrelationId = default(string?), string? xSourceId = default(string?), AcctAcctTrnInqRequest? generated = default(AcctAcctTrnInqRequest?))
        {
            Cbd.MobileExperienceApi.Client.ApiResponse<AcctAcctTrnInqResponse> localVarResponse = ServicesCurrentAccountAcctAcctTrnInqPostWithHttpInfo(xCorrelationId, xSourceId, generated);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  operation for AcctAcctTrnInq services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>ApiResponse of AcctAcctTrnInqResponse</returns>
        public Cbd.MobileExperienceApi.Client.ApiResponse<AcctAcctTrnInqResponse> ServicesCurrentAccountAcctAcctTrnInqPostWithHttpInfo(string? xCorrelationId = default(string?), string? xSourceId = default(string?), AcctAcctTrnInqRequest? generated = default(AcctAcctTrnInqRequest?))
        {
            Cbd.MobileExperienceApi.Client.RequestOptions localVarRequestOptions = new Cbd.MobileExperienceApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (xCorrelationId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-correlation-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xCorrelationId)); // header parameter
            }
            if (xSourceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-source-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xSourceId)); // header parameter
            }
            localVarRequestOptions.Data = generated;


            // make the HTTP request
            var localVarResponse = this.Client.Post<AcctAcctTrnInqResponse>("/Services/CurrentAccount/AcctAcctTrnInq", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ServicesCurrentAccountAcctAcctTrnInqPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  operation for AcctAcctTrnInq services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of AcctAcctTrnInqResponse</returns>
        public async System.Threading.Tasks.Task<AcctAcctTrnInqResponse> ServicesCurrentAccountAcctAcctTrnInqPostAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), AcctAcctTrnInqRequest? generated = default(AcctAcctTrnInqRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Cbd.MobileExperienceApi.Client.ApiResponse<AcctAcctTrnInqResponse> localVarResponse = await ServicesCurrentAccountAcctAcctTrnInqPostWithHttpInfoAsync(xCorrelationId, xSourceId, generated, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  operation for AcctAcctTrnInq services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (AcctAcctTrnInqResponse)</returns>
        public async System.Threading.Tasks.Task<Cbd.MobileExperienceApi.Client.ApiResponse<AcctAcctTrnInqResponse>> ServicesCurrentAccountAcctAcctTrnInqPostWithHttpInfoAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), AcctAcctTrnInqRequest? generated = default(AcctAcctTrnInqRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Cbd.MobileExperienceApi.Client.RequestOptions localVarRequestOptions = new Cbd.MobileExperienceApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };


            var localVarContentType = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (xCorrelationId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-correlation-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xCorrelationId)); // header parameter
            }
            if (xSourceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-source-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xSourceId)); // header parameter
            }
            localVarRequestOptions.Data = generated;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<AcctAcctTrnInqResponse>("/Services/CurrentAccount/AcctAcctTrnInq", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ServicesCurrentAccountAcctAcctTrnInqPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  operation for AcctAcctTrnInq services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>XferAddResponse</returns>
        public XferAddResponse ServicesCurrentAccountXferXferAddPost(string? xCorrelationId = default(string?), string? xSourceId = default(string?), XferAddRequest? generated = default(XferAddRequest?))
        {
            Cbd.MobileExperienceApi.Client.ApiResponse<XferAddResponse> localVarResponse = ServicesCurrentAccountXferXferAddPostWithHttpInfo(xCorrelationId, xSourceId, generated);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  operation for AcctAcctTrnInq services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>ApiResponse of XferAddResponse</returns>
        public Cbd.MobileExperienceApi.Client.ApiResponse<XferAddResponse> ServicesCurrentAccountXferXferAddPostWithHttpInfo(string? xCorrelationId = default(string?), string? xSourceId = default(string?), XferAddRequest? generated = default(XferAddRequest?))
        {
            Cbd.MobileExperienceApi.Client.RequestOptions localVarRequestOptions = new Cbd.MobileExperienceApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (xCorrelationId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-correlation-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xCorrelationId)); // header parameter
            }
            if (xSourceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-source-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xSourceId)); // header parameter
            }
            localVarRequestOptions.Data = generated;


            // make the HTTP request
            var localVarResponse = this.Client.Post<XferAddResponse>("/Services/CurrentAccount/Xfer/XferAdd", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ServicesCurrentAccountXferXferAddPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  operation for AcctAcctTrnInq services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of XferAddResponse</returns>
        public async System.Threading.Tasks.Task<XferAddResponse> ServicesCurrentAccountXferXferAddPostAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), XferAddRequest? generated = default(XferAddRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Cbd.MobileExperienceApi.Client.ApiResponse<XferAddResponse> localVarResponse = await ServicesCurrentAccountXferXferAddPostWithHttpInfoAsync(xCorrelationId, xSourceId, generated, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  operation for AcctAcctTrnInq services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (XferAddResponse)</returns>
        public async System.Threading.Tasks.Task<Cbd.MobileExperienceApi.Client.ApiResponse<XferAddResponse>> ServicesCurrentAccountXferXferAddPostWithHttpInfoAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), XferAddRequest? generated = default(XferAddRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Cbd.MobileExperienceApi.Client.RequestOptions localVarRequestOptions = new Cbd.MobileExperienceApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };


            var localVarContentType = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (xCorrelationId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-correlation-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xCorrelationId)); // header parameter
            }
            if (xSourceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-source-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xSourceId)); // header parameter
            }
            localVarRequestOptions.Data = generated;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<XferAddResponse>("/Services/CurrentAccount/Xfer/XferAdd", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ServicesCurrentAccountXferXferAddPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Get float balance
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>PartyAcctRelInqResponse</returns>
        public PartyAcctRelInqResponse ServicesCustomerProfilePartyAcctRelInqPost(string? xCorrelationId = default(string?), string? xSourceId = default(string?), PartyAcctRelInqRequest? generated = default(PartyAcctRelInqRequest?))
        {
            Cbd.MobileExperienceApi.Client.ApiResponse<PartyAcctRelInqResponse> localVarResponse = ServicesCustomerProfilePartyAcctRelInqPostWithHttpInfo(xCorrelationId, xSourceId, generated);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Get float balance
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>ApiResponse of PartyAcctRelInqResponse</returns>
        public Cbd.MobileExperienceApi.Client.ApiResponse<PartyAcctRelInqResponse> ServicesCustomerProfilePartyAcctRelInqPostWithHttpInfo(string? xCorrelationId = default(string?), string? xSourceId = default(string?), PartyAcctRelInqRequest? generated = default(PartyAcctRelInqRequest?))
        {
            Cbd.MobileExperienceApi.Client.RequestOptions localVarRequestOptions = new Cbd.MobileExperienceApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (xCorrelationId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-correlation-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xCorrelationId)); // header parameter
            }
            if (xSourceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-source-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xSourceId)); // header parameter
            }
            localVarRequestOptions.Data = generated;


            // make the HTTP request
            var localVarResponse = this.Client.Post<PartyAcctRelInqResponse>("/Services/CustomerProfile/PartyAcctRelInq", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ServicesCustomerProfilePartyAcctRelInqPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Get float balance
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PartyAcctRelInqResponse</returns>
        public async System.Threading.Tasks.Task<PartyAcctRelInqResponse> ServicesCustomerProfilePartyAcctRelInqPostAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), PartyAcctRelInqRequest? generated = default(PartyAcctRelInqRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Cbd.MobileExperienceApi.Client.ApiResponse<PartyAcctRelInqResponse> localVarResponse = await ServicesCustomerProfilePartyAcctRelInqPostWithHttpInfoAsync(xCorrelationId, xSourceId, generated, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Get float balance
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PartyAcctRelInqResponse)</returns>
        public async System.Threading.Tasks.Task<Cbd.MobileExperienceApi.Client.ApiResponse<PartyAcctRelInqResponse>> ServicesCustomerProfilePartyAcctRelInqPostWithHttpInfoAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), PartyAcctRelInqRequest? generated = default(PartyAcctRelInqRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Cbd.MobileExperienceApi.Client.RequestOptions localVarRequestOptions = new Cbd.MobileExperienceApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };


            var localVarContentType = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (xCorrelationId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-correlation-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xCorrelationId)); // header parameter
            }
            if (xSourceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-source-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xSourceId)); // header parameter
            }
            localVarRequestOptions.Data = generated;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<PartyAcctRelInqResponse>("/Services/CustomerProfile/PartyAcctRelInq", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ServicesCustomerProfilePartyAcctRelInqPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  operation for PartyInq services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>PartyInqResponse</returns>
        public PartyInqResponse ServicesCustomerProfilePartyInqPost(string? xCorrelationId = default(string?), string? xSourceId = default(string?), PartyInqRequest? generated = default(PartyInqRequest?))
        {
            Cbd.MobileExperienceApi.Client.ApiResponse<PartyInqResponse> localVarResponse = ServicesCustomerProfilePartyInqPostWithHttpInfo(xCorrelationId, xSourceId, generated);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  operation for PartyInq services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>ApiResponse of PartyInqResponse</returns>
        public Cbd.MobileExperienceApi.Client.ApiResponse<PartyInqResponse> ServicesCustomerProfilePartyInqPostWithHttpInfo(string? xCorrelationId = default(string?), string? xSourceId = default(string?), PartyInqRequest? generated = default(PartyInqRequest?))
        {
            Cbd.MobileExperienceApi.Client.RequestOptions localVarRequestOptions = new Cbd.MobileExperienceApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (xCorrelationId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-correlation-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xCorrelationId)); // header parameter
            }
            if (xSourceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-source-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xSourceId)); // header parameter
            }
            localVarRequestOptions.Data = generated;


            // make the HTTP request
            var localVarResponse = this.Client.Post<PartyInqResponse>("/Services/CustomerProfile/PartyInq", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ServicesCustomerProfilePartyInqPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  operation for PartyInq services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PartyInqResponse</returns>
        public async System.Threading.Tasks.Task<PartyInqResponse> ServicesCustomerProfilePartyInqPostAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), PartyInqRequest? generated = default(PartyInqRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Cbd.MobileExperienceApi.Client.ApiResponse<PartyInqResponse> localVarResponse = await ServicesCustomerProfilePartyInqPostWithHttpInfoAsync(xCorrelationId, xSourceId, generated, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  operation for PartyInq services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PartyInqResponse)</returns>
        public async System.Threading.Tasks.Task<Cbd.MobileExperienceApi.Client.ApiResponse<PartyInqResponse>> ServicesCustomerProfilePartyInqPostWithHttpInfoAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), PartyInqRequest? generated = default(PartyInqRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Cbd.MobileExperienceApi.Client.RequestOptions localVarRequestOptions = new Cbd.MobileExperienceApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };


            var localVarContentType = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (xCorrelationId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-correlation-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xCorrelationId)); // header parameter
            }
            if (xSourceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-source-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xSourceId)); // header parameter
            }
            localVarRequestOptions.Data = generated;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<PartyInqResponse>("/Services/CustomerProfile/PartyInq", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ServicesCustomerProfilePartyInqPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Contains base request headers
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="contentType">Content type of the request (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>Type18</returns>
        public Type18 ServicesGenericAPIExecuteServicePost(string? xCorrelationId = default(string?), string? xSourceId = default(string?), string? contentType = default(string?), Type17? generated = default(Type17?))
        {
            Cbd.MobileExperienceApi.Client.ApiResponse<Type18> localVarResponse = ServicesGenericAPIExecuteServicePostWithHttpInfo(xCorrelationId, xSourceId, contentType, generated);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Contains base request headers
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="contentType">Content type of the request (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>ApiResponse of Type18</returns>
        public Cbd.MobileExperienceApi.Client.ApiResponse<Type18> ServicesGenericAPIExecuteServicePostWithHttpInfo(string? xCorrelationId = default(string?), string? xSourceId = default(string?), string? contentType = default(string?), Type17? generated = default(Type17?))
        {
            Cbd.MobileExperienceApi.Client.RequestOptions localVarRequestOptions = new Cbd.MobileExperienceApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (xCorrelationId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-correlation-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xCorrelationId)); // header parameter
            }
            if (xSourceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-source-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xSourceId)); // header parameter
            }
            if (contentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(contentType)); // header parameter
            }
            localVarRequestOptions.Data = generated;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Type18>("/Services/GenericAPIExecuteService", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ServicesGenericAPIExecuteServicePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Contains base request headers
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="contentType">Content type of the request (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Type18</returns>
        public async System.Threading.Tasks.Task<Type18> ServicesGenericAPIExecuteServicePostAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), string? contentType = default(string?), Type17? generated = default(Type17?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Cbd.MobileExperienceApi.Client.ApiResponse<Type18> localVarResponse = await ServicesGenericAPIExecuteServicePostWithHttpInfoAsync(xCorrelationId, xSourceId, contentType, generated, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Contains base request headers
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="contentType">Content type of the request (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Type18)</returns>
        public async System.Threading.Tasks.Task<Cbd.MobileExperienceApi.Client.ApiResponse<Type18>> ServicesGenericAPIExecuteServicePostWithHttpInfoAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), string? contentType = default(string?), Type17? generated = default(Type17?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Cbd.MobileExperienceApi.Client.RequestOptions localVarRequestOptions = new Cbd.MobileExperienceApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };


            var localVarContentType = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (xCorrelationId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-correlation-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xCorrelationId)); // header parameter
            }
            if (xSourceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-source-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xSourceId)); // header parameter
            }
            if (contentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(contentType)); // header parameter
            }
            localVarRequestOptions.Data = generated;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Type18>("/Services/GenericAPIExecuteService", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ServicesGenericAPIExecuteServicePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Error Structure for CBD Mobile Services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>RemitAddResponse</returns>
        public RemitAddResponse ServicesRemittanceRemitAddPost(string? xCorrelationId = default(string?), string? xSourceId = default(string?), RemitAddRequest? generated = default(RemitAddRequest?))
        {
            Cbd.MobileExperienceApi.Client.ApiResponse<RemitAddResponse> localVarResponse = ServicesRemittanceRemitAddPostWithHttpInfo(xCorrelationId, xSourceId, generated);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Error Structure for CBD Mobile Services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>ApiResponse of RemitAddResponse</returns>
        public Cbd.MobileExperienceApi.Client.ApiResponse<RemitAddResponse> ServicesRemittanceRemitAddPostWithHttpInfo(string? xCorrelationId = default(string?), string? xSourceId = default(string?), RemitAddRequest? generated = default(RemitAddRequest?))
        {
            Cbd.MobileExperienceApi.Client.RequestOptions localVarRequestOptions = new Cbd.MobileExperienceApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (xCorrelationId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-correlation-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xCorrelationId)); // header parameter
            }
            if (xSourceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-source-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xSourceId)); // header parameter
            }
            localVarRequestOptions.Data = generated;


            // make the HTTP request
            var localVarResponse = this.Client.Post<RemitAddResponse>("/Services/Remittance/RemitAdd", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ServicesRemittanceRemitAddPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Error Structure for CBD Mobile Services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of RemitAddResponse</returns>
        public async System.Threading.Tasks.Task<RemitAddResponse> ServicesRemittanceRemitAddPostAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), RemitAddRequest? generated = default(RemitAddRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Cbd.MobileExperienceApi.Client.ApiResponse<RemitAddResponse> localVarResponse = await ServicesRemittanceRemitAddPostWithHttpInfoAsync(xCorrelationId, xSourceId, generated, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Error Structure for CBD Mobile Services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (RemitAddResponse)</returns>
        public async System.Threading.Tasks.Task<Cbd.MobileExperienceApi.Client.ApiResponse<RemitAddResponse>> ServicesRemittanceRemitAddPostWithHttpInfoAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), RemitAddRequest? generated = default(RemitAddRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Cbd.MobileExperienceApi.Client.RequestOptions localVarRequestOptions = new Cbd.MobileExperienceApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };


            var localVarContentType = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (xCorrelationId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-correlation-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xCorrelationId)); // header parameter
            }
            if (xSourceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-source-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xSourceId)); // header parameter
            }
            localVarRequestOptions.Data = generated;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<RemitAddResponse>("/Services/Remittance/RemitAdd", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ServicesRemittanceRemitAddPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Error Structure for CBD Mobile Services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>RemitStatInqRs</returns>
        public RemitStatInqRs ServicesRemittanceRemitStatInqPost(string? xCorrelationId = default(string?), string? xSourceId = default(string?), RemitStatInqRq? generated = default(RemitStatInqRq?))
        {
            Cbd.MobileExperienceApi.Client.ApiResponse<RemitStatInqRs> localVarResponse = ServicesRemittanceRemitStatInqPostWithHttpInfo(xCorrelationId, xSourceId, generated);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Error Structure for CBD Mobile Services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>ApiResponse of RemitStatInqRs</returns>
        public Cbd.MobileExperienceApi.Client.ApiResponse<RemitStatInqRs> ServicesRemittanceRemitStatInqPostWithHttpInfo(string? xCorrelationId = default(string?), string? xSourceId = default(string?), RemitStatInqRq? generated = default(RemitStatInqRq?))
        {
            Cbd.MobileExperienceApi.Client.RequestOptions localVarRequestOptions = new Cbd.MobileExperienceApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (xCorrelationId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-correlation-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xCorrelationId)); // header parameter
            }
            if (xSourceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-source-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xSourceId)); // header parameter
            }
            localVarRequestOptions.Data = generated;


            // make the HTTP request
            var localVarResponse = this.Client.Post<RemitStatInqRs>("/Services/Remittance/RemitStatInq", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ServicesRemittanceRemitStatInqPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Error Structure for CBD Mobile Services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of RemitStatInqRs</returns>
        public async System.Threading.Tasks.Task<RemitStatInqRs> ServicesRemittanceRemitStatInqPostAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), RemitStatInqRq? generated = default(RemitStatInqRq?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Cbd.MobileExperienceApi.Client.ApiResponse<RemitStatInqRs> localVarResponse = await ServicesRemittanceRemitStatInqPostWithHttpInfoAsync(xCorrelationId, xSourceId, generated, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Error Structure for CBD Mobile Services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (RemitStatInqRs)</returns>
        public async System.Threading.Tasks.Task<Cbd.MobileExperienceApi.Client.ApiResponse<RemitStatInqRs>> ServicesRemittanceRemitStatInqPostWithHttpInfoAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), RemitStatInqRq? generated = default(RemitStatInqRq?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Cbd.MobileExperienceApi.Client.RequestOptions localVarRequestOptions = new Cbd.MobileExperienceApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };


            var localVarContentType = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (xCorrelationId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-correlation-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xCorrelationId)); // header parameter
            }
            if (xSourceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-source-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xSourceId)); // header parameter
            }
            localVarRequestOptions.Data = generated;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<RemitStatInqRs>("/Services/Remittance/RemitStatInq", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ServicesRemittanceRemitStatInqPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Error Structure for CBD Mobile Services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>ValidateIbanDetailsResponse</returns>
        public ValidateIbanDetailsResponse ServicesValidateIbanDetailsPost(string? xCorrelationId = default(string?), string? xSourceId = default(string?), ValidateIbanDetailsRequest? generated = default(ValidateIbanDetailsRequest?))
        {
            Cbd.MobileExperienceApi.Client.ApiResponse<ValidateIbanDetailsResponse> localVarResponse = ServicesValidateIbanDetailsPostWithHttpInfo(xCorrelationId, xSourceId, generated);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Error Structure for CBD Mobile Services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <returns>ApiResponse of ValidateIbanDetailsResponse</returns>
        public Cbd.MobileExperienceApi.Client.ApiResponse<ValidateIbanDetailsResponse> ServicesValidateIbanDetailsPostWithHttpInfo(string? xCorrelationId = default(string?), string? xSourceId = default(string?), ValidateIbanDetailsRequest? generated = default(ValidateIbanDetailsRequest?))
        {
            Cbd.MobileExperienceApi.Client.RequestOptions localVarRequestOptions = new Cbd.MobileExperienceApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (xCorrelationId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-correlation-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xCorrelationId)); // header parameter
            }
            if (xSourceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-source-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xSourceId)); // header parameter
            }
            localVarRequestOptions.Data = generated;


            // make the HTTP request
            var localVarResponse = this.Client.Post<ValidateIbanDetailsResponse>("/Services/validateIbanDetails", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ServicesValidateIbanDetailsPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Error Structure for CBD Mobile Services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ValidateIbanDetailsResponse</returns>
        public async System.Threading.Tasks.Task<ValidateIbanDetailsResponse> ServicesValidateIbanDetailsPostAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), ValidateIbanDetailsRequest? generated = default(ValidateIbanDetailsRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Cbd.MobileExperienceApi.Client.ApiResponse<ValidateIbanDetailsResponse> localVarResponse = await ServicesValidateIbanDetailsPostWithHttpInfoAsync(xCorrelationId, xSourceId, generated, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Error Structure for CBD Mobile Services
        /// </summary>
        /// <exception cref="Cbd.MobileExperienceApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xCorrelationId">Transaction ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or event chain. (optional)</param>
        /// <param name="xSourceId">Source ID. A unique identifier value that is attached to requests and messages that allow reference to a particular transaction or specific for a channel. (optional)</param>
        /// <param name="generated"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ValidateIbanDetailsResponse)</returns>
        public async System.Threading.Tasks.Task<Cbd.MobileExperienceApi.Client.ApiResponse<ValidateIbanDetailsResponse>> ServicesValidateIbanDetailsPostWithHttpInfoAsync(string? xCorrelationId = default(string?), string? xSourceId = default(string?), ValidateIbanDetailsRequest? generated = default(ValidateIbanDetailsRequest?), System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Cbd.MobileExperienceApi.Client.RequestOptions localVarRequestOptions = new Cbd.MobileExperienceApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };


            var localVarContentType = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Cbd.MobileExperienceApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (xCorrelationId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-correlation-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xCorrelationId)); // header parameter
            }
            if (xSourceId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("x-source-id", Cbd.MobileExperienceApi.Client.ClientUtils.ParameterToString(xSourceId)); // header parameter
            }
            localVarRequestOptions.Data = generated;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<ValidateIbanDetailsResponse>("/Services/validateIbanDetails", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ServicesValidateIbanDetailsPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
