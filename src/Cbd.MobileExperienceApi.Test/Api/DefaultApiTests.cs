/*
 * exp-openfinance-api
 *
 * Ex  perience API for OpenFinance
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using Cbd.MobileExperienceApi.Client;
using Cbd.MobileExperienceApi.Api;
// uncomment below to import models
//using Cbd.MobileExperienceApi.Model;

namespace Cbd.MobileExperienceApi.Test.Api
{
    /// <summary>
    ///  Class for testing DefaultApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DefaultApiTests : IDisposable
    {
        private DefaultApi instance;

        public DefaultApiTests()
        {
            instance = new DefaultApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DefaultApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' DefaultApi
            //Assert.IsType<DefaultApi>(instance);
        }

        /// <summary>
        /// Test GetDDAEnquiryDetailsPost
        /// </summary>
        [Fact]
        public void GetDDAEnquiryDetailsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? xCorrelationId = null;
            //string? xSourceId = null;
            //DdaEnquirydetailsRequest? generated = null;
            //var response = instance.GetDDAEnquiryDetailsPost(xCorrelationId, xSourceId, generated);
            //Assert.IsType<DdaEnquirydetailsResponse>(response);
        }

        /// <summary>
        /// Test GetStandingOrdersInquiryPost
        /// </summary>
        [Fact]
        public void GetStandingOrdersInquiryPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? xCorrelationId = null;
            //string? xSourceId = null;
            //StandingordersinquiryRequest? generated = null;
            //var response = instance.GetStandingOrdersInquiryPost(xCorrelationId, xSourceId, generated);
            //Assert.IsType<StandingordersinquiryResponse>(response);
        }

        /// <summary>
        /// Test ManagementInquiryPost
        /// </summary>
        [Fact]
        public void ManagementInquiryPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? xCorrelationId = null;
            //string? xSourceId = null;
            //BeneficiaryInquiryRequest? generated = null;
            //var response = instance.ManagementInquiryPost(xCorrelationId, xSourceId, generated);
            //Assert.IsType<PayloadResponseBeneficiaryUpdate>(response);
        }

        /// <summary>
        /// Test ServicesCCIBServicesGetRimInfoPost
        /// </summary>
        [Fact]
        public void ServicesCCIBServicesGetRimInfoPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? xCorrelationId = null;
            //string? xSourceId = null;
            //GetRimInfoRequest? generated = null;
            //var response = instance.ServicesCCIBServicesGetRimInfoPost(xCorrelationId, xSourceId, generated);
            //Assert.IsType<GetRimInfoResponse>(response);
        }

        /// <summary>
        /// Test ServicesCurrentAccountAcctAcctTrnInqPost
        /// </summary>
        [Fact]
        public void ServicesCurrentAccountAcctAcctTrnInqPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? xCorrelationId = null;
            //string? xSourceId = null;
            //AcctAcctTrnInqRequest? generated = null;
            //var response = instance.ServicesCurrentAccountAcctAcctTrnInqPost(xCorrelationId, xSourceId, generated);
            //Assert.IsType<AcctAcctTrnInqResponse>(response);
        }

        /// <summary>
        /// Test ServicesCurrentAccountXferXferAddPost
        /// </summary>
        [Fact]
        public void ServicesCurrentAccountXferXferAddPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? xCorrelationId = null;
            //string? xSourceId = null;
            //XferAddRequest? generated = null;
            //var response = instance.ServicesCurrentAccountXferXferAddPost(xCorrelationId, xSourceId, generated);
            //Assert.IsType<XferAddResponse>(response);
        }

        /// <summary>
        /// Test ServicesCustomerProfilePartyAcctRelInqPost
        /// </summary>
        [Fact]
        public void ServicesCustomerProfilePartyAcctRelInqPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? xCorrelationId = null;
            //string? xSourceId = null;
            //PartyAcctRelInqRequest? generated = null;
            //var response = instance.ServicesCustomerProfilePartyAcctRelInqPost(xCorrelationId, xSourceId, generated);
            //Assert.IsType<PartyAcctRelInqResponse>(response);
        }

        /// <summary>
        /// Test ServicesCustomerProfilePartyInqPost
        /// </summary>
        [Fact]
        public void ServicesCustomerProfilePartyInqPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? xCorrelationId = null;
            //string? xSourceId = null;
            //PartyInqRequest? generated = null;
            //var response = instance.ServicesCustomerProfilePartyInqPost(xCorrelationId, xSourceId, generated);
            //Assert.IsType<PartyInqResponse>(response);
        }

        /// <summary>
        /// Test ServicesGenericAPIExecuteServicePost
        /// </summary>
        [Fact]
        public void ServicesGenericAPIExecuteServicePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? xCorrelationId = null;
            //string? xSourceId = null;
            //string? contentType = null;
            //Type17? generated = null;
            //var response = instance.ServicesGenericAPIExecuteServicePost(xCorrelationId, xSourceId, contentType, generated);
            //Assert.IsType<Type18>(response);
        }

        /// <summary>
        /// Test ServicesRemittanceRemitAddPost
        /// </summary>
        [Fact]
        public void ServicesRemittanceRemitAddPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? xCorrelationId = null;
            //string? xSourceId = null;
            //RemitAddRequest? generated = null;
            //var response = instance.ServicesRemittanceRemitAddPost(xCorrelationId, xSourceId, generated);
            //Assert.IsType<RemitAddResponse>(response);
        }

        /// <summary>
        /// Test ServicesRemittanceRemitStatInqPost
        /// </summary>
        [Fact]
        public void ServicesRemittanceRemitStatInqPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? xCorrelationId = null;
            //string? xSourceId = null;
            //RemitStatInqRq? generated = null;
            //var response = instance.ServicesRemittanceRemitStatInqPost(xCorrelationId, xSourceId, generated);
            //Assert.IsType<RemitStatInqRs>(response);
        }

        /// <summary>
        /// Test ServicesValidateIbanDetailsPost
        /// </summary>
        [Fact]
        public void ServicesValidateIbanDetailsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? xCorrelationId = null;
            //string? xSourceId = null;
            //ValidateIbanDetailsRequest? generated = null;
            //var response = instance.ServicesValidateIbanDetailsPost(xCorrelationId, xSourceId, generated);
            //Assert.IsType<ValidateIbanDetailsResponse>(response);
        }
    }
}
